{"ast":null,"code":"import axios from 'axios';\nimport { serverUrl, serverUrlGeo } from '../url';\nimport Cookies from 'universal-cookie';\nimport SecureLS from 'secure-ls';\nimport md5 from 'md5';\nconst cookie = new Cookies();\nexport async function postAdminLoginFunction(param, nextGeo, nextProfile, nextRole, nextPermission) {\n  return new Promise(async resolve => {\n    const newLs = new SecureLS({\n      encodingType: 'aes',\n      isCompression: true,\n      encryptionSecret: 'react-secret'\n    });\n    const tokenAuth = newLs.get(md5('tokenAuth'));\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + tokenAuth\n      }\n    };\n    const url = serverUrl + \"client/admin_login\";\n    const logindata = {\n      key: param.key,\n      password: param.password\n    };\n    axios.post(url, logindata, config).then(res => {\n      const date = new Date();\n      date.setTime(date.getTime() + res.data.expires_in * 1000);\n      cookie.set('token', res.data.token, {\n        expires: date\n      });\n      param.dataToken = res.data.token;\n      param.expires = res.data.expires_in;\n      delete param.password;\n\n      if (nextGeo && nextProfile) {\n        nextGeo(param);\n        resolve(nextProfile(param, nextRole, nextPermission));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      console.log(err.toString());\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getTokenGeoFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + param.dataToken\n      }\n    };\n    const url = serverUrlGeo + \"clientauth\";\n    const geoData = {\n      auth: {\n        username: `client`,\n        password: `clientgeo`\n      }\n    };\n    axios.get(url, geoData, config).then(res => {\n      const date = new Date();\n      date.setTime(date.getTime() + res.data.expires * 1000);\n      cookie.set('tokenGeo', res.data.token, {\n        expires: date\n      });\n      param.dataGeoToken = res.data.token;\n\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      console.log(err.toString());\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}` || 'Gagal menambah User';\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getUserProfileFunction(param, next, nextPermission) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + param.dataToken\n      }\n    };\n    const url = serverUrl + \"admin/profile\";\n    axios.get(url, config).then(res => {\n      param.user = res.data;\n      param.roleId = res.data.role_id || 0;\n\n      if (next) {\n        resolve(next(param, nextPermission));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      console.log(err.toString());\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}` || 'Gagal menambah User';\n      param.error = error;\n      resolve(param);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/index/saga.js"],"names":["axios","serverUrl","serverUrlGeo","Cookies","SecureLS","md5","cookie","postAdminLoginFunction","param","nextGeo","nextProfile","nextRole","nextPermission","Promise","resolve","newLs","encodingType","isCompression","encryptionSecret","tokenAuth","get","config","headers","url","logindata","key","password","post","then","res","date","Date","setTime","getTime","data","expires_in","set","token","expires","dataToken","catch","err","console","log","toString","error","response","message","toUpperCase","getTokenGeoFunction","next","geoData","auth","username","dataGeoToken","getUserProfileFunction","user","roleId","role_id"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { serverUrl, serverUrlGeo } from '../url';\r\nimport Cookies from 'universal-cookie';\r\nimport SecureLS from 'secure-ls';\r\nimport md5 from 'md5';\r\n\r\nconst cookie = new Cookies()\r\n\r\nexport async function postAdminLoginFunction(param, nextGeo, nextProfile, nextRole, nextPermission) {\r\n    return new Promise(async (resolve) => { \r\n        const newLs = new SecureLS({encodingType: 'aes', isCompression: true, encryptionSecret:'react-secret'}); \r\n        const tokenAuth = newLs.get(md5('tokenAuth'))    \r\n        \r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + tokenAuth}\r\n        };\r\n\r\n        const url = serverUrl + \"client/admin_login\"\r\n        \r\n        const logindata ={key: param.key,password: param.password};\r\n  \r\n        axios.post(url,logindata,config).then((res)=>{\r\n            const date = new Date();\r\n            date.setTime(date.getTime() + (res.data.expires_in*1000));\r\n            cookie.set('token',res.data.token,{expires: date})\r\n            \r\n            param.dataToken = res.data.token;\r\n            param.expires = res.data.expires_in;\r\n\r\n            delete param.password;\r\n\r\n            if(nextGeo && nextProfile) {\r\n                nextGeo(param)\r\n                resolve(nextProfile(param, nextRole, nextPermission))\r\n            } else {\r\n                resolve(param)\r\n            }\r\n            \r\n        }).catch((err)=>{\r\n            console.log(err.toString())\r\n            const error = (err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`) \r\n            param.error = error\r\n            resolve(param);\r\n        })\r\n    });\r\n    \r\n}\r\n\r\nexport async function getTokenGeoFunction(param, next) {\r\n    return new Promise(async (resolve) => {     \r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + param.dataToken}\r\n        };\r\n\r\n        const url = serverUrlGeo + \"clientauth\"\r\n\r\n        const geoData = {\r\n            auth:{\r\n                username : `client`,\r\n                password : `clientgeo`\r\n            }\r\n        }\r\n  \r\n        axios.get(url,geoData,config).then((res)=>{\r\n            const date = new Date();\r\n            date.setTime(date.getTime() + (res.data.expires*1000));\r\n            cookie.set('tokenGeo',res.data.token,{expires: date})\r\n\r\n            param.dataGeoToken = res.data.token;\r\n\r\n            if(next) {\r\n                resolve(next(param))\r\n            } else {\r\n                resolve(param)\r\n            }\r\n            \r\n        }).catch((err)=>{\r\n            console.log(err.toString())\r\n            const error = (err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`) || 'Gagal menambah User'\r\n            param.error = error\r\n            resolve(param);\r\n        })\r\n    });\r\n    \r\n}\r\n\r\nexport async function getUserProfileFunction(param, next, nextPermission) {\r\n    return new Promise(async (resolve) => {     \r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + param.dataToken}\r\n        };\r\n\r\n        const url = serverUrl+\"admin/profile\"\r\n\r\n  \r\n        axios.get(url,config).then((res)=>{\r\n            param.user = res.data;\r\n            param.roleId = res.data.role_id || 0;\r\n\r\n            if(next) {\r\n                resolve(next(param, nextPermission))\r\n            } else {\r\n                resolve(param)\r\n            }\r\n            \r\n        }).catch((err)=>{\r\n            console.log(err.toString())\r\n            const error = (err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`) || 'Gagal menambah User'\r\n            param.error = error\r\n            resolve(param);\r\n        })\r\n    });\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}