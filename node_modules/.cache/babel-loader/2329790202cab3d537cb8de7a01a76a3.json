{"ast":null,"code":"import axios from 'axios';\nimport { serverUrl } from '../url';\nimport Cookies from 'universal-cookie';\nimport { destructRolePermission, destructRolePermissionAll } from './function';\nconst cookie = new Cookies();\nexport async function getAllRoleFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + cookie.get('token')\n      }\n    };\n    let filter = '';\n\n    for (const key in param) {\n      filter += `&${key}=${param[key]}`;\n    }\n\n    const urlNew = serverUrl + `admin/roles_all?orderby=updated_time&sort=desc${filter}`;\n    axios.get(urlNew, config).then(res => {\n      const listRole = res.data && res.data.data ? res.data.data : res.data;\n      param.dataRole = listRole;\n\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\n;\nexport async function getAllRolePermissionListFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + cookie.get('token')\n      }\n    };\n    axios.get(serverUrl + `admin/permission`, config).then(res => {\n      const listPermission = res.data && res.data.data ? res.data.data : res.data;\n      const listRole = param.dataRole;\n      const newRole = [];\n      const rolePerPages = [];\n\n      for (const key in listRole) {\n        const rolePerLine = listRole[key];\n        rolePerLine.permission = [];\n\n        for (const keyPermission in listPermission) {\n          if (rolePerLine.id.toString() === listPermission[keyPermission].role_id.toString() && listPermission[keyPermission].permissions.toString().trim().length !== 0) {\n            rolePerLine.permission.push(listPermission[keyPermission].permissions);\n          }\n        }\n\n        if (rolePerLine.permission.length !== 0) {\n          newRole.push(rolePerLine);\n        }\n      }\n\n      for (let i = param.rowsPerPage * (param.page - 1); i < param.rowsPerPage * param.page; i += 1) {\n        if (newRole[i] && newRole[i].id) {\n          rolePerPages.push(newRole[i]);\n        }\n      }\n\n      param.totalData = newRole.length;\n      param.dataRolePermission = rolePerPages;\n\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getAllRolePermissionAddFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + cookie.get('token')\n      }\n    };\n    axios.get(serverUrl + `admin/permission`, config).then(res => {\n      const listPermission = res.data && res.data.data ? res.data.data : res.data;\n      const listRole = param.dataRole;\n      const newRole = [];\n      let role = 0;\n\n      for (const key in listRole) {\n        const rolePerLine = listRole[key];\n        rolePerLine.permission = [];\n\n        for (const keyPermission in listPermission) {\n          if (rolePerLine.id.toString() === listPermission[keyPermission].role_id.toString() && listPermission[keyPermission].permissions.toString().trim().length !== 0) {\n            rolePerLine.permission.push(listPermission[keyPermission].permissions);\n          }\n        }\n\n        if (rolePerLine.permission.length === 0) {\n          if (role === 0) {\n            role = rolePerLine.id;\n          }\n\n          newRole.push(rolePerLine);\n        }\n      }\n\n      if (newRole.length && newRole.length !== 0) {\n        param.role = role;\n        param.dataRole = newRole;\n      } else {\n        param.error = 'Data Role yang belum di setup tidak ditemukan';\n      }\n\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getRoleFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + cookie.get('token')\n      }\n    };\n    axios.get(serverUrl + `admin/roles/${param.roleId}`, config).then(res => {\n      const listRole = res.data;\n      param.dataRole = listRole;\n\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getRolePermissionFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + cookie.get('token')\n      }\n    };\n    axios.get(serverUrl + `admin/permission?role_id=${param.roleId}`, config).then(res => {\n      const listPermission = res.data && res.data.data ? res.data.data : res.data;\n      const listRole = param.dataRole;\n      let newPermission = [];\n\n      for (const keyPermission in listPermission) {\n        if (listRole.id.toString() === listPermission[keyPermission].role_id.toString() && listPermission[keyPermission].permissions.toString().trim().length !== 0) {\n          if (listPermission[keyPermission].permissions.toString().trim().toLowerCase() === 'all') {\n            newPermission = destructRolePermissionAll(param.listAllRolePermission);\n            break;\n          } else {\n            const permissionNew = destructRolePermission(listPermission[keyPermission].permissions, param.listAllRolePermission);\n            newPermission.push(permissionNew);\n          }\n        }\n      }\n\n      param.dataRolePermission = newPermission;\n\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getPermissionFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + cookie.get('token')\n      }\n    };\n    axios.get(serverUrl + `admin/permission?role_id=${param.roleId}`, config).then(res => {\n      const listPermission = res.data && res.data.data ? res.data.data : res.data;\n      param.dataPermission = listPermission;\n\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function patchRolePermissionFunction(param) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + cookie.get('token')\n      }\n    };\n    axios.patch(serverUrl + `admin/permission`, param.dataRolePermission, config).then(res => {\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}` || 'Gagal mengubah Role Permission';\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function postRolePermissionFunction(param) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + cookie.get('token')\n      }\n    };\n    axios.post(serverUrl + `admin/permission`, param.dataRolePermission, config).then(res => {\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}` || 'Gagal menambah Role Permission';\n      param.error = error;\n      resolve(param);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/rolePermission/saga.js"],"names":["axios","serverUrl","Cookies","destructRolePermission","destructRolePermissionAll","cookie","getAllRoleFunction","param","next","Promise","resolve","config","headers","get","filter","key","urlNew","then","res","listRole","data","dataRole","catch","err","error","response","message","toString","toUpperCase","getAllRolePermissionListFunction","listPermission","newRole","rolePerPages","rolePerLine","permission","keyPermission","id","role_id","permissions","trim","length","push","i","rowsPerPage","page","totalData","dataRolePermission","getAllRolePermissionAddFunction","role","getRoleFunction","roleId","getRolePermissionFunction","newPermission","toLowerCase","listAllRolePermission","permissionNew","getPermissionFunction","dataPermission","patchRolePermissionFunction","patch","postRolePermissionFunction","post"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { serverUrl } from '../url';\r\nimport Cookies from 'universal-cookie';\r\nimport {destructRolePermission, destructRolePermissionAll} from './function'\r\n\r\nconst cookie = new Cookies()\r\n\r\nexport async function getAllRoleFunction(param, next){\r\n    return new Promise(async (resolve) => {\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + cookie.get('token')}\r\n        };\r\n\r\n        let filter = '';\r\n\r\n        for(const key in param) {\r\n            filter += `&${key}=${param[key]}`\r\n        }\r\n\r\n        const urlNew = serverUrl+`admin/roles_all?orderby=updated_time&sort=desc${filter}`\r\n\r\n        axios.get(urlNew,config).then((res)=>{\r\n            const listRole = res.data && res.data.data ? res.data.data : res.data\r\n            param.dataRole = listRole;\r\n\r\n            if(next) {\r\n                resolve(next(param));\r\n            } else {\r\n                resolve(param);\r\n            }\r\n        }).catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    });\r\n};\r\n    \r\nexport async function getAllRolePermissionListFunction(param, next){\r\n    return new Promise(async (resolve) => {\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + cookie.get('token')}\r\n        };\r\n\r\n        axios.get(serverUrl+`admin/permission`,config)\r\n        .then((res)=>{\r\n            const listPermission = res.data && res.data.data ? res.data.data : res.data;\r\n            const listRole = param.dataRole;\r\n            const newRole = [];\r\n            const rolePerPages = [];\r\n\r\n            for(const key in listRole) {\r\n                const rolePerLine = listRole[key];\r\n                rolePerLine.permission = []\r\n                for(const keyPermission in listPermission) {\r\n                    if(\r\n                        rolePerLine.id.toString() === listPermission[keyPermission].role_id.toString() &&\r\n                        listPermission[keyPermission].permissions.toString().trim().length !== 0\r\n                    ) {\r\n                        rolePerLine.permission.push(listPermission[keyPermission].permissions)\r\n                    }\r\n                }\r\n\r\n                if(rolePerLine.permission.length !== 0) {\r\n                    newRole.push(rolePerLine);\r\n                }\r\n            }\r\n            \r\n            for(let i = (param.rowsPerPage*(param.page-1)); i < param.rowsPerPage * param.page; i+=1) {\r\n                if(newRole[i] && newRole[i].id) {\r\n                    rolePerPages.push(newRole[i])\r\n                }            \r\n            }\r\n            \r\n            param.totalData = newRole.length;\r\n            param.dataRolePermission = rolePerPages;\r\n\r\n            if(next) {\r\n                resolve(next(param));\r\n            } else {\r\n                resolve(param);\r\n            }\r\n\r\n        }).catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function getAllRolePermissionAddFunction(param, next){\r\n    return new Promise(async (resolve) => {\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + cookie.get('token')}\r\n          };\r\n      \r\n          axios.get(serverUrl+`admin/permission`,config)\r\n          .then((res)=>{\r\n              const listPermission = res.data && res.data.data ? res.data.data : res.data;\r\n              const listRole = param.dataRole;\r\n              const newRole = [];\r\n              let role = 0;\r\n      \r\n              for(const key in listRole) {\r\n                const rolePerLine = listRole[key];\r\n                rolePerLine.permission = []\r\n                for(const keyPermission in listPermission) {\r\n                  if(\r\n                    rolePerLine.id.toString() === listPermission[keyPermission].role_id.toString() && \r\n                    listPermission[keyPermission].permissions.toString().trim().length !== 0\r\n                  ) {\r\n                    rolePerLine.permission.push(listPermission[keyPermission].permissions)\r\n                  }\r\n                }\r\n      \r\n                if(rolePerLine.permission.length === 0) {\r\n                  if(role === 0) {\r\n                    role = rolePerLine.id;\r\n                  }\r\n                  newRole.push(rolePerLine);\r\n                }\r\n              }\r\n              \r\n              if(newRole.length && newRole.length !== 0) {\r\n                  param.role = role;\r\n                  param.dataRole = newRole\r\n              } else {\r\n                  param.error = 'Data Role yang belum di setup tidak ditemukan';\r\n              }\r\n      \r\n              if(next) {\r\n                  resolve(next(param));\r\n              } else {\r\n                  resolve(param);\r\n              }\r\n      \r\n          }).catch((err)=>{\r\n                const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n                param.error = error;\r\n                resolve(param);\r\n          })\r\n    });\r\n}\r\n\r\nexport async function getRoleFunction(param, next) {\r\n    return new Promise(async (resolve) => {\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + cookie.get('token')}\r\n        };\r\n\r\n        axios.get(serverUrl+`admin/roles/${param.roleId}`,config).then((res)=>{\r\n            const listRole = res.data;\r\n            param.dataRole = listRole;\r\n\r\n            if(next) {\r\n                resolve(next(param));\r\n            } else {\r\n                resolve(param);\r\n            }\r\n        }).catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error\r\n            resolve(param);\r\n        })\r\n    });\r\n}\r\n\r\nexport async function getRolePermissionFunction(param, next) {\r\n    return new Promise(async (resolve) => {\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + cookie.get('token')}\r\n        };\r\n          \r\n        axios.get(serverUrl+`admin/permission?role_id=${param.roleId}`,config)\r\n        .then((res)=>{\r\n            const listPermission = res.data && res.data.data ? res.data.data : res.data;\r\n            const listRole = param.dataRole;\r\n            let newPermission = [];\r\n\r\n            for(const keyPermission in listPermission) {\r\n                if(\r\n                    listRole.id.toString() === listPermission[keyPermission].role_id.toString() &&\r\n                    listPermission[keyPermission].permissions.toString().trim().length !== 0\r\n                ) {\r\n                if(listPermission[keyPermission].permissions.toString().trim().toLowerCase() === 'all') {\r\n                    newPermission = destructRolePermissionAll(param.listAllRolePermission);\r\n                    break;\r\n                } else {\r\n                    const permissionNew = destructRolePermission(listPermission[keyPermission].permissions, param.listAllRolePermission)\r\n                    newPermission.push(permissionNew)\r\n                }\r\n                \r\n                }\r\n            }\r\n    \r\n            param.dataRolePermission = newPermission\r\n    \r\n            if(next) {\r\n                resolve(next(param));\r\n            } else {\r\n                resolve(param);\r\n            }\r\n    \r\n        }).catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    });\r\n    \r\n}\r\n\r\nexport async function getPermissionFunction(param, next) {\r\n    return new Promise(async (resolve) => {\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + cookie.get('token')}\r\n        };\r\n          \r\n        axios.get(serverUrl+`admin/permission?role_id=${param.roleId}`,config)\r\n        .then((res)=>{\r\n            const listPermission = res.data && res.data.data ? res.data.data : res.data;\r\n\r\n            param.dataPermission = listPermission;\r\n    \r\n            if(next) {\r\n                resolve(next(param));\r\n            } else {\r\n                resolve(param);\r\n            }\r\n    \r\n        }).catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    });\r\n    \r\n}\r\n\r\nexport async function patchRolePermissionFunction(param) {\r\n    return new Promise(async (resolve) => {\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + cookie.get('token')}\r\n        };\r\n\r\n        axios.patch(serverUrl+`admin/permission`,param.dataRolePermission,config).then((res)=>{\r\n            resolve(res)\r\n        }).catch((err)=>{\r\n            const error = (err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`) || 'Gagal mengubah Role Permission'\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function postRolePermissionFunction(param) {\r\n    return new Promise(async (resolve) => {\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + cookie.get('token')}\r\n        };\r\n\r\n        axios.post(serverUrl+`admin/permission`,param.dataRolePermission,config).then((res)=>{\r\n            resolve(res)\r\n        }).catch((err)=>{\r\n            const error = (err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`) || 'Gagal menambah Role Permission'\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}