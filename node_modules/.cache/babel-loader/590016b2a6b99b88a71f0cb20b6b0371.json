{"ast":null,"code":"import axios from 'axios';\nimport { serverUrl } from '../url';\nimport { getToken } from '../index/token';\nimport { destructErrorMessage } from '../global/globalFunction';\nexport async function TujuanAddFunction(param) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getToken()\n      }\n    };\n    axios.post(serverUrl + 'admin/loan_purposes', param, config).then(res => {\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\n;\nexport async function TujuanListFunction(param) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getToken()\n      }\n    };\n    let filter = '';\n\n    for (const key in param) {\n      filter += `&${key}=${param[key]}`;\n    }\n\n    axios.get(serverUrl + `admin/loan_purposes?orderby=updated_at&sort=desc${filter}`, config).then(res => {\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function TujuanDetailFunction(param) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getToken()\n      }\n    };\n    axios.get(serverUrl + `admin/loan_purposes/${param.id}`, config).then(res => {\n      resolve(res.data);\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function TujuanEditFunction(param) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getToken()\n      }\n    };\n    axios.patch(serverUrl + `admin/loan_purposes/${param.id}`, param.newData, config).then(res => {\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/tujuan/saga.js"],"names":["axios","serverUrl","getToken","destructErrorMessage","TujuanAddFunction","param","Promise","resolve","config","headers","post","then","res","catch","err","error","response","data","toString","TujuanListFunction","filter","key","get","TujuanDetailFunction","id","TujuanEditFunction","patch","newData"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { serverUrl } from '../url';\r\nimport { getToken } from '../index/token';\r\nimport { destructErrorMessage } from '../global/globalFunction';\r\n\r\nexport async function TujuanAddFunction(param){\r\n    return new Promise(async (resolve) => {\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getToken()}\r\n        };\r\n\r\n        axios.post(serverUrl+'admin/loan_purposes',param,config)\r\n        .then((res)=>{\r\n           resolve(res)\r\n        })\r\n        .catch((err)=>{\r\n            const error = (err.response && err.response.data && destructErrorMessage(err.response.data))|| err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    });\r\n};\r\n\r\nexport async function TujuanListFunction(param) {\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getToken()}\r\n          };\r\n        let filter = '';\r\n\r\n        for(const key in param) {\r\n            filter += `&${key}=${param[key]}`\r\n        }\r\n        axios.get(serverUrl+`admin/loan_purposes?orderby=updated_at&sort=desc${filter}`,config)\r\n        .then((res)=>{\r\n            resolve(res)\r\n        })\r\n        .catch((err)=>{\r\n            const error = (err.response && err.response.data && destructErrorMessage(err.response.data))|| err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n    \r\n}\r\n\r\nexport async function TujuanDetailFunction (param){\r\n    return new Promise(async (resolve)=>{\r\n            const config = {\r\n                headers: {'Authorization': \"Bearer \" + getToken()}\r\n            };\r\n            axios.get(serverUrl+`admin/loan_purposes/${param.id}`,config)\r\n            .then((res)=>{\r\n                resolve(res.data)\r\n            })\r\n            .catch((err)=>{\r\n                const error = (err.response && err.response.data && destructErrorMessage(err.response.data))|| err.toString()\r\n                param.error = error;\r\n                resolve(param);\r\n            })\r\n        \r\n    })\r\n}\r\n\r\nexport async function TujuanEditFunction (param){\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getToken()}\r\n        };\r\n        axios.patch(serverUrl+`admin/loan_purposes/${param.id}`,param.newData,config)\r\n        .then((res)=>{\r\n            resolve(res)\r\n        \r\n        })\r\n        .catch((err)=>{\r\n            const error = (err.response && err.response.data && destructErrorMessage(err.response.data))|| err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}