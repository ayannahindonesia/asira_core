{"ast":null,"code":"import axios from 'axios';\nimport { serverUrl } from '../url';\nimport { getToken } from '../index/token';\nimport { destructErrorMessage } from '../global/globalFunction';\nexport async function getAllAgentFunction(param, nextAgent, nextBank) {\n  return new Promise(async resolve => {\n    const token = getToken();\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + token\n      }\n    };\n    let filter = '';\n\n    for (const key in param) {\n      filter += `&${key}=${param[key]}`;\n    }\n\n    const urlNew = serverUrl + `admin/agents?orderby=updated_at&sort=desc${filter}`;\n    axios.get(urlNew, config).then(res => {\n      const listAgent = res.data && res.data.data;\n      param.dataAgent = listAgent;\n      param.totalData = res.data.total_data;\n\n      if (nextAgent) {\n        resolve(nextAgent(param, nextBank));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\n;\nexport async function getAgentFunction(param, nextAgent, nextBank) {\n  return new Promise(async resolve => {\n    const token = getToken();\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + token\n      }\n    };\n    const urlNew = serverUrl + `admin/agents/${param.agentId}`;\n    axios.get(urlNew, config).then(res => {\n      const listAgent = res.data && res.data.data ? res.data.data : res.data;\n      param.dataAgent = listAgent;\n\n      if (nextAgent) {\n        resolve(nextAgent(param, nextBank));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function patchAgentAddFunction(param) {\n  return new Promise(async resolve => {\n    const token = getToken();\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + token\n      }\n    };\n    axios.patch(serverUrl + `admin/agents/${param.agentId}`, param.dataAgent, config).then(res => {\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function postAgentAddFunction(param) {\n  return new Promise(async resolve => {\n    const token = getToken();\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + token\n      }\n    };\n    axios.post(serverUrl + 'admin/agents', param.dataAgent, config).then(res => {\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/agent/saga.js"],"names":["axios","serverUrl","getToken","destructErrorMessage","getAllAgentFunction","param","nextAgent","nextBank","Promise","resolve","token","config","headers","filter","key","urlNew","get","then","res","listAgent","data","dataAgent","totalData","total_data","catch","err","error","response","toString","getAgentFunction","agentId","patchAgentAddFunction","patch","postAgentAddFunction","post"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { serverUrl } from '../url';\r\nimport { getToken } from '../index/token';\r\nimport { destructErrorMessage } from '../global/globalFunction';\r\n\r\nexport async function getAllAgentFunction(param, nextAgent, nextBank){\r\n    return new Promise(async (resolve) => {\r\n\r\n        const token = getToken();\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + token}\r\n        };\r\n\r\n        let filter = '';\r\n\r\n        for(const key in param) {\r\n            filter += `&${key}=${param[key]}`\r\n        }\r\n\r\n        const urlNew = serverUrl+`admin/agents?orderby=updated_at&sort=desc${filter}`\r\n    \r\n        axios.get(urlNew,config).then((res)=>{\r\n            const listAgent = res.data && res.data.data\r\n            param.dataAgent = listAgent;\r\n            param.totalData = res.data.total_data\r\n\r\n            if(nextAgent) {\r\n                resolve(nextAgent(param,nextBank));\r\n            } else {\r\n                resolve(param);\r\n            }\r\n        }).catch((err)=>{\r\n            const error = (err.response && err.response.data && destructErrorMessage(err.response.data)) || err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    });\r\n};\r\n\r\nexport async function getAgentFunction(param, nextAgent, nextBank) {\r\n    return new Promise(async (resolve) => {\r\n\r\n        const token = getToken();\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + token}\r\n        };\r\n\r\n        const urlNew = serverUrl+`admin/agents/${param.agentId}`\r\n    \r\n        axios.get(urlNew,config).then((res)=>{\r\n            const listAgent = res.data && res.data.data ? res.data.data : res.data;\r\n            param.dataAgent = listAgent;\r\n\r\n            if(nextAgent) {\r\n                resolve(nextAgent(param, nextBank));\r\n            } else {\r\n                resolve(param);\r\n            }\r\n        }).catch((err)=>{\r\n            const error = (err.response && err.response.data && destructErrorMessage(err.response.data)) || err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    });\r\n}\r\n\r\nexport async function patchAgentAddFunction(param) {\r\n    return new Promise(async (resolve) => {   \r\n        const token = getToken() \r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + token}\r\n          };\r\n  \r\n        axios.patch(serverUrl+`admin/agents/${param.agentId}`,param.dataAgent,config).then((res)=>{\r\n            resolve(res)\r\n        }).catch((err)=>{\r\n            const error = (err.response && err.response.data && destructErrorMessage(err.response.data)) || err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    });\r\n    \r\n}\r\n\r\nexport async function postAgentAddFunction(param) {\r\n    return new Promise(async (resolve) => {     \r\n\r\n        const token = getToken()\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + token}\r\n          };\r\n  \r\n        axios.post(serverUrl+'admin/agents',param.dataAgent,config).then((res)=>{\r\n            resolve(res)\r\n        }).catch((err)=>{\r\n            const error = (err.response && err.response.data && destructErrorMessage(err.response.data)) || err.toString()\r\n            param.error = error\r\n            resolve(param);\r\n        })\r\n    });\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}