{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_core\\\\src\\\\components\\\\index\\\\login.js\";\nimport React from 'react';\nimport Logo from './../../support/img/logo.jpeg';\nimport './../../support/css/login.css';\nimport Loader from 'react-loader-spinner';\nimport swal from 'sweetalert';\nimport { Redirect } from 'react-router-dom';\nimport { keepLogin } from './../../1.actions';\nimport { connect } from 'react-redux';\nimport { postAdminLoginFunction, getTokenGeoFunction, getUserProfileFunction } from './saga';\nimport { getRoleFunction, getPermissionFunction } from '../rolePermission/saga';\nimport SecureLS from 'secure-ls';\nimport md5 from 'md5';\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n    this.state = {\n      token: \"\",\n      authData: [],\n      loading: false,\n      tokenClient: '',\n      isLogin: false\n    };\n\n    this.btnLogin = () => {\n      this.setState({\n        loading: true\n      });\n      const key = this.refs.username.value;\n      const password = this.refs.password.value;\n\n      if (key === \"\" || password === \"\") {\n        swal(\"Error\", \"Username and Password Empty\", \"error\");\n        this.setState({\n          loading: false\n        });\n      } else {\n        const logindata = {\n          key,\n          password\n        };\n        this.postLoginAdmin(logindata);\n      }\n    };\n\n    this.postLoginAdmin = async function (param) {\n      const data = await postAdminLoginFunction(param, getTokenGeoFunction, getUserProfileFunction, getRoleFunction, getPermissionFunction);\n\n      if (data) {\n        if (!data.error) {\n          let flag = false;\n          let userPermission = [];\n\n          if (data.dataRole && data.dataRole.status && data.dataPermission) {\n            for (const key in data.dataPermission) {\n              if (data.dataPermission[key].permissions) {\n                userPermission.push(data.dataPermission[key].permissions);\n              }\n            }\n\n            if (data.dataRole.system && data.dataRole.system.toString().toLowerCase() === 'core') {\n              flag = true;\n            }\n          }\n\n          const newLs = new SecureLS({\n            encodingType: 'aes',\n            isCompression: true,\n            encryptionSecret: 'react-secret'\n          });\n          newLs.set(md5('profileUser'), JSON.stringify(userPermission));\n\n          if (data.dataToken) {\n            newLs.set(md5('token'), data.dataToken);\n          }\n\n          if (data.dataGeoToken) {\n            newLs.set(md5('tokenGeo'), data.dataGeoToken);\n          }\n\n          this.setState({\n            loading: false,\n            isLogin: flag\n          });\n        } else {\n          this.setState({\n            loading: false\n          });\n          swal(\"Warning\", data.error, \"info\");\n        }\n      }\n    };\n\n    this.renderBtnOrLoading = () => {\n      if (this.state.loading) {\n        return React.createElement(Loader, {\n          type: \"Circles\",\n          color: \"#00BFFF\",\n          height: \"30\",\n          width: \"30\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"input\", {\n          type: \"button\",\n          className: \"loginBtn\",\n          onClick: this.btnLogin,\n          style: {\n            marginTop: \"20px\"\n          },\n          value: \"Sign in\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  } //LOGIN BUTTON\n\n\n  render() {\n    if (this.state.isLogin) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App loginContainer mr-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-6 col-md-6 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Core\")), React.createElement(\"div\", {\n      className: \"col-6 col-md-6 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: Logo,\n      alt: \"logo\",\n      width: \"60%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      ref: \"username\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      ref: \"password\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), this.renderBtnOrLoading(), React.createElement(\"p\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Forgot your password?\"))));\n  }\n\n}\n\nexport default connect(null, {\n  keepLogin\n})(Login);","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/index/login.js"],"names":["React","Logo","Loader","swal","Redirect","keepLogin","connect","postAdminLoginFunction","getTokenGeoFunction","getUserProfileFunction","getRoleFunction","getPermissionFunction","SecureLS","md5","Login","Component","_isMounted","state","token","authData","loading","tokenClient","isLogin","btnLogin","setState","key","refs","username","value","password","logindata","postLoginAdmin","param","data","error","flag","userPermission","dataRole","status","dataPermission","permissions","push","system","toString","toLowerCase","newLs","encodingType","isCompression","encryptionSecret","set","JSON","stringify","dataToken","dataGeoToken","renderBtnOrLoading","marginTop","componentDidMount","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Logo from './../../support/img/logo.jpeg'\r\nimport './../../support/css/login.css'\r\nimport Loader from 'react-loader-spinner'\r\nimport swal from 'sweetalert'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {keepLogin} from './../../1.actions'\r\nimport {connect} from 'react-redux'\r\nimport { postAdminLoginFunction, getTokenGeoFunction, getUserProfileFunction} from './saga'\r\nimport { getRoleFunction, getPermissionFunction } from '../rolePermission/saga';\r\nimport SecureLS from 'secure-ls';\r\nimport md5 from 'md5';\r\n\r\nclass Login extends React.Component{\r\n    _isMounted = false;\r\n\r\n    state = {\r\n        token:\"\",\r\n        authData:[],\r\n        loading:false,\r\n        tokenClient:'' , \r\n        isLogin : false\r\n    }\r\n  \r\n    componentDidMount(){\r\n        this._isMounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;     \r\n    }\r\n\r\n      \r\n    //LOGIN BUTTON\r\n    btnLogin = ()=>{\r\n        this.setState({loading:true})\r\n     \r\n        const key=this.refs.username.value\r\n        const password=this.refs.password.value\r\n       \r\n        if (key===\"\" || password===\"\"){\r\n            swal(\"Error\",\"Username and Password Empty\",\"error\")\r\n            this.setState({loading:false})\r\n\r\n        } else {            \r\n            const logindata ={key,password};\r\n\r\n            this.postLoginAdmin(logindata)\r\n        }\r\n      \r\n    } \r\n\r\n    postLoginAdmin = async function(param)  {\r\n        const data = await postAdminLoginFunction(param, getTokenGeoFunction, getUserProfileFunction, getRoleFunction, getPermissionFunction)\r\n        \r\n        if(data) {\r\n            if(!data.error) {\r\n                let flag = false;\r\n                let userPermission = [];\r\n                \r\n                if(data.dataRole && data.dataRole.status && data.dataPermission) {\r\n                    for(const key in data.dataPermission) {\r\n                        if(data.dataPermission[key].permissions) {\r\n                            userPermission.push(data.dataPermission[key].permissions)\r\n                        }                      \r\n                    }\r\n\r\n                    if(data.dataRole.system && data.dataRole.system.toString().toLowerCase() === 'core') {\r\n                        flag = true;\r\n                    }\r\n\r\n                }\r\n                \r\n                const newLs = new SecureLS({encodingType: 'aes', isCompression: true, encryptionSecret:'react-secret'});    \r\n                \r\n\r\n                newLs.set(md5('profileUser'), JSON.stringify(userPermission));\r\n\r\n                if(data.dataToken) {\r\n                    newLs.set(md5('token'), data.dataToken);\r\n                }\r\n                if(data.dataGeoToken) {\r\n                    newLs.set(md5('tokenGeo'), data.dataGeoToken);\r\n                }\r\n                \r\n\r\n                this.setState({loading: false, isLogin: flag})\r\n            } else {\r\n                this.setState({loading : false})\r\n                swal(\"Warning\",data.error,\"info\")\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    renderBtnOrLoading =()=>{\r\n        if (this.state.loading){\r\n            return ( \r\n            <Loader \r\n                type=\"Circles\"\r\n                color=\"#00BFFF\"\r\n                height=\"30\"\t\r\n                width=\"30\"\r\n            />);\r\n           \r\n        }\r\n        else{\r\n            return(\r\n                <input type=\"button\" className=\"loginBtn\" onClick={this.btnLogin} style={{marginTop:\"20px\"}}  value=\"Sign in\"/> \r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLogin){\r\n            return(\r\n                <Redirect to='/' />\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"App loginContainer mr-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-md-6 mt-3\">\r\n                        <h2>Core</h2> \r\n                    </div>\r\n                    <div className=\"col-6 col-md-6 mt-3\">\r\n                        <img src={Logo} alt=\"logo\" width=\"60%\"></img>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-12\">\r\n                        <hr/>\r\n                        <h3>Sign In</h3>\r\n                        <input type=\"text\" placeholder=\"Username\" ref=\"username\" className=\"form-control\"/>\r\n                        <input type=\"password\" placeholder=\"Password\" ref=\"password\" className=\"form-control\"/>\r\n                        {this.renderBtnOrLoading()}\r\n                        <p style={{marginTop:\"20px\"}}>Forgot your password?</p>\r\n                    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n      \r\n       \r\n    \r\n}\r\n\r\nexport default connect(null,{keepLogin}) (Login);\r\n"]},"metadata":{},"sourceType":"module"}