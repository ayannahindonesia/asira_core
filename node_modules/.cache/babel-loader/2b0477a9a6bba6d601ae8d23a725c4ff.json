{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_core\\\\src\\\\components\\\\tipebank\\\\typebankAdd.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { AddTipeBankFunction } from './saga';\nimport { getToken } from '../index/token';\n\nclass TypeBank extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n    this.state = {\n      diKlik: false,\n      errorMessage: '',\n      submit: false\n    };\n\n    this.btnSave = () => {\n      var name = this.refs.typebank.value;\n      var description = this.refs.deskripsi.value;\n\n      if (name === \"\" || name.trim() === \"\") {\n        this.setState({\n          errorMessage: \"Nama Tipe Mitra Kosong - Harap cek ulang\"\n        });\n      } else {\n        this.setState({\n          submit: true\n        });\n        var newData = {\n          name,\n          description\n        };\n        this.AddTypeBank(newData);\n      }\n    };\n\n    this.AddTypeBank = async function (params) {\n      const data = await AddTipeBankFunction(params);\n\n      if (data) {\n        if (!data.error) {\n          this.setState({\n            submit: false,\n            diKlik: true,\n            errorMessage: \"\"\n          });\n          swal(\"Success\", \"Tipe Mitra Berhasil di Tambah\", \"success\");\n        } else {\n          this.setState({\n            errorMessage: data.error,\n            submit: false\n          });\n        }\n      }\n    };\n\n    this.renderBtnSumbit = () => {\n      if (this.state.submit) {\n        return React.createElement(\"input\", {\n          type: \"button\",\n          disabled: true,\n          className: \"btn btn-success ml-3 mr-3\",\n          value: \"Simpan\",\n          onClick: this.btnSave,\n          style: {\n            cursor: \"wait\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"input\", {\n          type: \"button\",\n          className: \"btn btn-success ml-3 mr-3\",\n          value: \"Simpan\",\n          onClick: this.btnSave,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.btnCancel = () => {\n      this.setState({\n        diKlik: true\n      });\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    this.setState({\n      errorMessage: newProps.error\n    });\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    if (this.state.diKlik) {\n      return React.createElement(Redirect, {\n        to: \"/listtipe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    }\n\n    if (getToken()) {\n      return React.createElement(\"div\", {\n        className: \"container mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Tipe Bank -  Tambah\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12\",\n        style: {\n          color: \"red\",\n          fontSize: \"15px\",\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.state.errorMessage)), React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-3 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Nama Tipe Bank\"), React.createElement(\"div\", {\n        className: \"col-sm-9 btn-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        ref: \"typebank\",\n        placeholder: \"Nama Tipe Bank..\",\n        required: true,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-3 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Deskripsi\"), React.createElement(\"div\", {\n        className: \"col-sm-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        rows: \"5\",\n        ref: \"deskripsi\",\n        className: \"form-control\",\n        placeholder: \"Description..\",\n        required: true,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.renderBtnSumbit(), React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Batal\",\n        className: \"btn ml-2\",\n        onClick: this.btnCancel,\n        style: {\n          backgroundColor: \"grey\",\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })));\n    }\n\n    if (!getToken()) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default TypeBank;","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/tipebank/typebankAdd.js"],"names":["React","Redirect","swal","AddTipeBankFunction","getToken","TypeBank","Component","_isMounted","state","diKlik","errorMessage","submit","btnSave","name","refs","typebank","value","description","deskripsi","trim","setState","newData","AddTypeBank","params","data","error","renderBtnSumbit","cursor","btnCancel","UNSAFE_componentWillReceiveProps","newProps","componentDidMount","componentWillUnmount","render","color","fontSize","textAlign","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport swal from 'sweetalert'\r\nimport { AddTipeBankFunction } from './saga';\r\nimport { getToken } from '../index/token';\r\n\r\nclass TypeBank extends React.Component{\r\n    _isMounted = false;\r\n    state={diKlik:false,errorMessage:'',submit:false}\r\n    \r\n    UNSAFE_componentWillReceiveProps(newProps){\r\n        this.setState({errorMessage:newProps.error})\r\n    }\r\n    componentDidMount(){\r\n        this._isMounted = true;\r\n    }\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    btnSave=()=>{\r\n        var name= this.refs.typebank.value\r\n        var description = this.refs.deskripsi.value\r\n  \r\n        if (name ===\"\"||name.trim()===\"\"){\r\n            this.setState({errorMessage:\"Nama Tipe Mitra Kosong - Harap cek ulang\"})\r\n        }else{\r\n            this.setState({submit:true})\r\n            var newData={name,description}\r\n            this.AddTypeBank(newData)\r\n        }\r\n    }\r\n\r\n    AddTypeBank = async function (params) {\r\n        const data = await AddTipeBankFunction(params)\r\n        if(data){\r\n            if(!data.error){\r\n                this.setState({submit:false,diKlik:true,errorMessage:\"\"})\r\n                swal(\"Success\",\"Tipe Mitra Berhasil di Tambah\",\"success\")\r\n            }else{\r\n                this.setState({errorMessage:data.error,submit:false})\r\n            }\r\n        }\r\n    }\r\n    renderBtnSumbit =()=>{\r\n        if( this.state.submit) {\r\n         return <input type=\"button\" disabled className=\"btn btn-success ml-3 mr-3\" value=\"Simpan\" onClick={this.btnSave} style={{cursor:\"wait\"}}/>\r\n        }else{\r\n        return <input type=\"button\" className=\"btn btn-success ml-3 mr-3\" value=\"Simpan\" onClick={this.btnSave}/>\r\n        }\r\n    }\r\n    btnCancel =()=>{\r\n        this.setState({diKlik:true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.diKlik){\r\n            return <Redirect to=\"/listtipe\"/>\r\n        }\r\n        if(getToken()){\r\n            return(\r\n                <div className=\"container mt-3\">\r\n                  <h2>Tipe Bank -  Tambah</h2>\r\n                <hr></hr>\r\n                <div className=\"form-group row\">\r\n                 <div className=\"col-12\" style={{color:\"red\",fontSize:\"15px\",textAlign:'center'}}>\r\n                     {this.state.errorMessage}\r\n                  </div>\r\n                </div>\r\n                     <div className=\"form-group row\">\r\n                                                <label className=\"col-sm-3 col-form-label\">Nama Tipe Bank</label>\r\n                                                <div className=\"col-sm-9 btn-group\">\r\n                                                <input type=\"text\" className=\"form-control\" ref=\"typebank\" placeholder=\"Nama Tipe Bank..\" required autoFocus/>\r\n                                                </div>\r\n                     </div>\r\n                      <div className=\"form-group row\">\r\n                                                <label className=\"col-sm-3 col-form-label\">Deskripsi</label>\r\n                                                <div className=\"col-sm-9\">\r\n                                                <textarea rows=\"5\" ref=\"deskripsi\" className=\"form-control\"  placeholder=\"Description..\" required autoFocus/>\r\n                                                </div>\r\n                     </div>\r\n                    <div className=\"form-group row\">\r\n                                                {this.renderBtnSumbit()}\r\n                                                <input type=\"button\" value=\"Batal\" className=\"btn ml-2\" onClick={this.btnCancel} style={{backgroundColor:\"grey\",color:\"white\"}}/>\r\n                      </div>\r\n\r\n                </div>\r\n            )\r\n        }\r\n        if(!getToken()){\r\n            return (\r\n                <Redirect to='/login' />\r\n            )    \r\n        }\r\n       \r\n    }\r\n}\r\n\r\nexport default TypeBank;"]},"metadata":{},"sourceType":"module"}