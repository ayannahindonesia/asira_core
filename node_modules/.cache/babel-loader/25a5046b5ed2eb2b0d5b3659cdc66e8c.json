{"ast":null,"code":"import Cookies from 'universal-cookie';\nimport axios from 'axios';\nimport { serverUrl } from '../url';\nconst cookie = new Cookies();\nexport async function AddRoleFunction(param) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + cookie.get('token')\n      }\n    };\n    axios.post(serverUrl + 'admin/roles', param, config).then(res => {\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function ListRoleFunction(param) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + cookie.get('token')\n      }\n    };\n    let filter = '';\n\n    for (const key in param) {\n      filter += `&${key}=${param[key]}`;\n    }\n\n    axios.get(serverUrl + `admin/roles?orderby=updated_time&sort=asc${filter}`, config).then(res => {\n      resolve(res.data.data);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function DetailRoleFunction(param) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + cookie.get('token')\n      }\n    };\n    axios.get(serverUrl + `admin/roles/${param.id}`, config).then(res => {\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function EditRoleFunction(param) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + cookie.get('token')\n      }\n    };\n    axios.patch(serverUrl + `admin/roles/${param.id}`, param.newData, config).then(res => {\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/role/saga.js"],"names":["Cookies","axios","serverUrl","cookie","AddRoleFunction","param","Promise","resolve","config","headers","get","post","then","res","catch","err","error","response","data","message","toString","toUpperCase","ListRoleFunction","filter","key","DetailRoleFunction","id","EditRoleFunction","patch","newData"],"mappings":"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","sourcesContent":["import Cookies from 'universal-cookie';\r\nimport axios from 'axios'\r\nimport { serverUrl } from '../url';\r\nconst cookie = new Cookies()\r\n\r\nexport async function AddRoleFunction (param){\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + cookie.get('token')}\r\n        };\r\n        axios.post(serverUrl+'admin/roles',param,config)\r\n        .then((res)=>{\r\n            resolve(res)\r\n        })\r\n        .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function ListRoleFunction (param){\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + cookie.get('token')}\r\n        };\r\n        let filter = '';\r\n\r\n        for(const key in param) {\r\n            filter += `&${key}=${param[key]}`\r\n        }\r\n        axios.get(serverUrl+`admin/roles?orderby=updated_time&sort=asc${filter}`,config)\r\n        .then((res)=>{\r\n            resolve(res.data.data)\r\n        })\r\n        .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function DetailRoleFunction (param){\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + cookie.get('token')}\r\n        };\r\n        axios.get(serverUrl+`admin/roles/${param.id}`,config)\r\n        .then((res)=>{\r\n            resolve(res)\r\n        })\r\n        .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function EditRoleFunction (param){\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + cookie.get('token')}\r\n        };\r\n        axios.patch(serverUrl+`admin/roles/${param.id}`,param.newData,config)\r\n        .then((res)=>{\r\n            resolve(res)\r\n        })\r\n        .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}