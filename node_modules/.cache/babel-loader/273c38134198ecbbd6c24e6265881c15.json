{"ast":null,"code":"import axios from 'axios';\nimport { serverUrl, serverUrlGeo } from '../url';\nimport jsonWebToken from 'jsonwebtoken';\nimport { setToken, setTokenGeo, getTokenAuth } from './token';\nimport { destructErrorMessage } from '../global/globalFunction';\nexport async function postAdminLoginFunction(param, nextGeo, nextProfile) {\n  return new Promise(async resolve => {\n    const tokenAuth = getTokenAuth();\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + tokenAuth\n      }\n    };\n    const url = serverUrl + \"client/admin_login\";\n    const logindata = {\n      key: param.key,\n      password: param.password\n    };\n    axios.post(url, logindata, config).then(res => {\n      setToken(res.data.token, new Date().getTime() + res.data.expires_in * 1000);\n      param.dataToken = res.data.token;\n      param.expires = res.data.expires_in;\n      delete param.password;\n\n      if (nextGeo && nextProfile) {\n        nextGeo(param);\n        resolve(nextProfile(param));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getTokenGeoFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + param.dataToken\n      }\n    };\n    const url = serverUrlGeo + \"clientauth\";\n    const geoData = {\n      auth: {\n        username: `client`,\n        password: `clientgeo`\n      }\n    };\n    axios.get(url, geoData, config).then(res => {\n      setTokenGeo(res.data.token);\n      param.dataGeoToken = res.data.token;\n\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getUserProfileFunction(param) {\n  return new Promise(async resolve => {\n    try {\n      var token = jsonWebToken.verify(param.dataToken, 'sXQ8jUMpueOvN5P3cdCR');\n      param.dataPermission = token.permissions;\n      resolve(param);\n    } catch (err) {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    }\n  });\n}\nexport async function sendEmailFunction(param, next) {\n  return new Promise(async resolve => {\n    const tokenAuth = getTokenAuth();\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + tokenAuth\n      }\n    };\n    axios.post(serverUrl + 'client/forgotpassword?system=core', param, config).then(res => {\n      if (next) {\n        resolve(next(param));\n      }\n\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function changePasswordFunction(param, next) {\n  return new Promise(async resolve => {\n    const tokenAuth = getTokenAuth();\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + tokenAuth\n      }\n    };\n    axios.post(serverUrl + 'client/resetpassword', param, config).then(res => {\n      if (next) {\n        resolve(next(param));\n      }\n\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/index/saga.js"],"names":["axios","serverUrl","serverUrlGeo","jsonWebToken","setToken","setTokenGeo","getTokenAuth","destructErrorMessage","postAdminLoginFunction","param","nextGeo","nextProfile","Promise","resolve","tokenAuth","config","headers","url","logindata","key","password","post","then","res","data","token","Date","getTime","expires_in","dataToken","expires","catch","err","error","response","toString","getTokenGeoFunction","next","geoData","auth","username","get","dataGeoToken","getUserProfileFunction","verify","dataPermission","permissions","sendEmailFunction","changePasswordFunction"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { serverUrl, serverUrlGeo } from '../url';\r\nimport jsonWebToken from 'jsonwebtoken';\r\nimport { setToken, setTokenGeo, getTokenAuth } from './token';\r\nimport { destructErrorMessage } from '../global/globalFunction';\r\n\r\nexport async function postAdminLoginFunction(param, nextGeo, nextProfile) {\r\n    return new Promise(async (resolve) => { \r\n        const tokenAuth = getTokenAuth();\r\n\r\n        \r\n        const config = {\r\n            headers: {\r\n                'Authorization': \"Bearer \" + tokenAuth,\r\n            },\r\n        };\r\n\r\n        const url = serverUrl + \"client/admin_login\"\r\n        \r\n        const logindata ={key: param.key,password: param.password};\r\n  \r\n        axios.post(url,logindata,config).then((res)=>{\r\n            setToken(res.data.token, new Date().getTime() + (res.data.expires_in*1000))\r\n            \r\n            param.dataToken = res.data.token;\r\n            param.expires = res.data.expires_in;      \r\n\r\n            delete param.password;\r\n\r\n            if(nextGeo && nextProfile) {\r\n                nextGeo(param)\r\n                resolve(nextProfile(param))\r\n            } else {\r\n                resolve(param)\r\n            }\r\n            \r\n        }).catch((err)=>{\r\n            const error = (err.response && err.response.data && destructErrorMessage(err.response.data)) || err.toString()\r\n            param.error = error\r\n            resolve(param);\r\n        })\r\n    });\r\n    \r\n}\r\n\r\nexport async function getTokenGeoFunction(param, next) {\r\n    return new Promise(async (resolve) => {    \r\n        \r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + param.dataToken}\r\n        };\r\n\r\n        const url = serverUrlGeo + \"clientauth\"\r\n\r\n        const geoData = {\r\n            auth:{\r\n                username : `client`,\r\n                password : `clientgeo`\r\n            }\r\n        }\r\n  \r\n        axios.get(url,geoData,config).then((res)=>{\r\n            setTokenGeo(res.data.token);\r\n\r\n            param.dataGeoToken = res.data.token;\r\n\r\n            if(next) {\r\n                resolve(next(param))\r\n            } else {\r\n                resolve(param)\r\n            }\r\n            \r\n        }).catch((err)=>{\r\n            const error = (err.response && err.response.data && destructErrorMessage(err.response.data)) || err.toString()\r\n            param.error = error\r\n            resolve(param);\r\n        })\r\n    });\r\n    \r\n}\r\n\r\nexport async function getUserProfileFunction(param) {\r\n    return new Promise(async (resolve) => {    \r\n        try {\r\n            var token = jsonWebToken.verify(param.dataToken,'sXQ8jUMpueOvN5P3cdCR');\r\n\r\n            param.dataPermission = token.permissions;\r\n            resolve(param)\r\n        } catch (err) {\r\n            const error = (err.response && err.response.data && destructErrorMessage(err.response.data)) || err.toString()\r\n            param.error = error\r\n            resolve(param);\r\n        }\r\n        \r\n        \r\n    });\r\n    \r\n}\r\n\r\nexport async function sendEmailFunction (param,next){\r\n    return new Promise(async (resolve)=>{\r\n        const tokenAuth = getTokenAuth();\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + tokenAuth}\r\n        };\r\n        axios.post(serverUrl+'client/forgotpassword?system=core',param,config)\r\n        .then((res)=>{\r\n            if(next){\r\n                resolve(next(param))\r\n            }\r\n            resolve(res)\r\n        })\r\n        .catch((err)=>{\r\n            const error = (err.response && err.response.data && destructErrorMessage(err.response.data)) || err.toString()\r\n            param.error = error\r\n            resolve(param);\r\n        })\r\n\r\n    })\r\n}\r\n\r\nexport async function changePasswordFunction (param,next){\r\n    return new Promise(async(resolve)=>{\r\n        const tokenAuth = getTokenAuth();\r\n\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + tokenAuth}\r\n        };\r\n        axios.post(serverUrl+'client/resetpassword',param,config)\r\n        .then((res)=>{\r\n            if(next){\r\n                resolve(next(param))\r\n            }\r\n            resolve(res)\r\n        })\r\n        .catch((err)=>{\r\n            const error =( err.response && err.response.data && destructErrorMessage(err.response.data))|| err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}