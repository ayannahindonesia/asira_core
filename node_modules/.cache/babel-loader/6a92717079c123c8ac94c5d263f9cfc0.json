{"ast":null,"code":"export function destructRolePermissionAll(listAllRolePermission) {\n  try {\n    let newPermission = [];\n\n    for (const key in listAllRolePermission) {\n      newPermission.push({\n        id: listAllRolePermission[key].id,\n        name: listAllRolePermission[key].name,\n        modules: listAllRolePermission[key].modules\n      });\n    }\n\n    return newPermission;\n  } catch (err) {\n    const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}` || err.toString();\n    return {\n      error\n    };\n  }\n}\n;\nexport function destructRolePermission(permission, listAllRolePermission) {\n  try {\n    let newPermission = {};\n    const dataPermission = permission.split('_');\n    newPermission = {\n      id: findIdRolePermission(dataPermission, listAllRolePermission),\n      modules: dataPermission[0],\n      name: dataPermission[1] || dataPermission[0]\n    };\n    return newPermission;\n  } catch (err) {\n    const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}` || err.toString();\n    return {\n      error\n    };\n  }\n}\n;\nexport function findIdRolePermission(dataPermission, listAllRolePermission) {\n  try {\n    let idPermission = 0;\n\n    for (const key in listAllRolePermission) {\n      if (listAllRolePermission[key].modules.toString().toLowerCase().trim() === dataPermission[0].toString().toLowerCase().trim() && dataPermission[1] && listAllRolePermission[key].name.toString().toLowerCase().trim() === dataPermission[1].toString().toLowerCase().trim()) {\n        idPermission = listAllRolePermission[key].id;\n      }\n    }\n\n    return idPermission;\n  } catch (err) {\n    const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}` || err.toString();\n    return {\n      error\n    };\n  }\n}\n;\nexport function constructRolePermission(rolePermission) {\n  try {\n    const newPermission = [];\n\n    for (const key in rolePermission) {\n      newPermission.push(`${rolePermission[key].modules}_${rolePermission[key].name}`);\n    }\n\n    return newPermission;\n  } catch (err) {\n    const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}` || err.toString();\n    return {\n      error\n    };\n  }\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/rolePermission/function.js"],"names":["destructRolePermissionAll","listAllRolePermission","newPermission","key","push","id","name","modules","err","error","response","data","message","toString","toUpperCase","destructRolePermission","permission","dataPermission","split","findIdRolePermission","idPermission","toLowerCase","trim","constructRolePermission","rolePermission"],"mappings":"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","sourcesContent":["\r\n\r\nexport function destructRolePermissionAll(listAllRolePermission){\r\n    try {\r\n        let newPermission = [];\r\n\r\n        for(const key in listAllRolePermission) {\r\n            newPermission.push({\r\n                id: listAllRolePermission[key].id,\r\n                name: listAllRolePermission[key].name,\r\n                modules: listAllRolePermission[key].modules,\r\n            });\r\n        }\r\n\r\n        return (newPermission)\r\n    } catch (err) {\r\n        const error = (err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`) || err.toString();\r\n        return({error});\r\n    }\r\n};\r\n\r\nexport function destructRolePermission(permission, listAllRolePermission){\r\n\r\n    try {\r\n        let newPermission = {};\r\n        const dataPermission = permission.split('_');\r\n\r\n        newPermission = {\r\n            id: findIdRolePermission(dataPermission, listAllRolePermission),\r\n            modules: dataPermission[0],\r\n            name: dataPermission[1] || dataPermission[0],\r\n        };\r\n\r\n        return(newPermission)\r\n    } catch (err) {\r\n        const error = (err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`) || err.toString();\r\n        return({error});\r\n    }\r\n\r\n};\r\n\r\nexport function findIdRolePermission (dataPermission, listAllRolePermission) {\r\n\r\n    try {\r\n        let idPermission = 0;\r\n\r\n        for(const key in listAllRolePermission) {\r\n            if(\r\n                listAllRolePermission[key].modules.toString().toLowerCase().trim() === dataPermission[0].toString().toLowerCase().trim() && \r\n                dataPermission[1] &&\r\n                listAllRolePermission[key].name.toString().toLowerCase().trim() === dataPermission[1].toString().toLowerCase().trim()\r\n            ) {\r\n                idPermission = listAllRolePermission[key].id;\r\n            }\r\n        }\r\n\r\n        return(idPermission)\r\n    } catch (err) {\r\n        const error = (err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`) || err.toString();\r\n        return({error});\r\n    }\r\n        \r\n    \r\n    \r\n};\r\n\r\nexport function constructRolePermission(rolePermission) {\r\n\r\n    try {\r\n        const newPermission = [];\r\n\r\n        for(const key in rolePermission) {\r\n            newPermission.push(`${rolePermission[key].modules}_${rolePermission[key].name}`)\r\n        }\r\n        return newPermission;\r\n    } catch (err) {\r\n        const error = (err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`) || err.toString();\r\n        return({error});\r\n    }\r\n    \r\n  }\r\n"]},"metadata":{},"sourceType":"module"}