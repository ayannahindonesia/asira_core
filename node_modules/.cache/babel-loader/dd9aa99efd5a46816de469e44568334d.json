{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_core\\\\src\\\\components\\\\role\\\\roleList.jsx\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { ListRoleFunction } from './saga';\nimport Loader from 'react-loader-spinner';\nimport { Link } from 'react-router-dom';\nimport { checkPermission } from './../global/globalFunction';\nimport { getToken } from '../index/token';\nimport TableComponent from './../subComponent/TableComponent';\nconst columnDataUser = [{\n  id: 'id',\n  numeric: false,\n  label: 'ID Role'\n}, {\n  id: 'name',\n  numeric: false,\n  label: 'Nama Role'\n}, {\n  id: 'system',\n  numeric: false,\n  label: 'Sistem'\n}, {\n  id: 'status',\n  numeric: false,\n  label: 'Status Pembiayaan'\n}];\n\nclass RoleList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n    this.state = {\n      loading: true,\n      rows: [],\n      total_data: 10,\n      page: 1,\n      from: 1,\n      to: 3,\n      last_page: 1,\n      rowsPerPage: 10,\n      paging: true,\n      errorMessage: ''\n    };\n\n    this.getAllRole = async function () {\n      const param = {\n        page: this.state.page,\n        rows: 10\n      };\n      const data = await ListRoleFunction(param);\n      const dataRole = data.data && data.data.data;\n\n      for (const key in dataRole) {\n        dataRole[key].status = dataRole[key].status === 'active' ? \"Aktif\" : \"Tidak Aktif\";\n      }\n\n      if (data) {\n        if (!data.error) {\n          this.setState({\n            loading: false,\n            rows: data.data.data,\n            total_data: data.data.total_data,\n            page: data.data.current_page,\n            from: data.data.from,\n            to: data.data.to,\n            last_page: data.data.last_page,\n            rowsPerPage: data.data.rows,\n            errorMessage: ''\n          });\n        } else {\n          this.setState({\n            loading: false,\n            errorMessage: data.error\n          });\n        }\n      }\n    };\n\n    this.onChangePage = current => {\n      this.setState({\n        loading: true,\n        page: current\n      }, () => {\n        if (this.state.paging) {\n          this.getAllRole();\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.getAllRole();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    if (getToken()) {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Role - List\"), React.createElement(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.state.errMessage))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(TableComponent, {\n        id: \"id\",\n        paging: this.state.paging,\n        loading: this.state.loading,\n        columnData: columnDataUser,\n        data: this.state.rows,\n        page: this.state.page,\n        rowsPerPage: this.state.rowsPerPage,\n        totalData: this.state.total_data,\n        onChangePage: this.onChangePage,\n        permissionEdit: checkPermission('core_role_patch') ? '/editrole/' : null,\n        permissionDetail: checkPermission('core_role_details') ? '/detailrole/' : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }));\n    }\n\n    if (!getToken()) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default RoleList;","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/role/roleList.jsx"],"names":["React","Redirect","ListRoleFunction","Loader","Link","checkPermission","getToken","TableComponent","columnDataUser","id","numeric","label","RoleList","Component","_isMounted","state","loading","rows","total_data","page","from","to","last_page","rowsPerPage","paging","errorMessage","getAllRole","param","data","dataRole","key","status","error","setState","current_page","onChangePage","current","componentDidMount","componentWillUnmount","render","color","errMessage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAAQC,gBAAR,QAA+B,QAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,eAAR,QAA8B,4BAA9B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,MAAMC,cAAc,GAAG,CACnB;AACIC,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,OAAO,EAAE,KAFb;AAGIC,EAAAA,KAAK,EAAE;AAHX,CADmB,EAMnB;AACIF,EAAAA,EAAE,EAAE,MADR;AAEIC,EAAAA,OAAO,EAAE,KAFb;AAGIC,EAAAA,KAAK,EAAE;AAHX,CANmB,EAWnB;AACIF,EAAAA,EAAE,EAAE,QADR;AAEIC,EAAAA,OAAO,EAAE,KAFb;AAGIC,EAAAA,KAAK,EAAE;AAHX,CAXmB,EAgBnB;AACIF,EAAAA,EAAE,EAAE,QADR;AAEIC,EAAAA,OAAO,EAAE,KAFb;AAGIC,EAAAA,KAAK,EAAE;AAHX,CAhBmB,CAAvB;;AAuBA,MAAMC,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAClCC,UADkC,GACrB,KADqB;AAAA,SAElCC,KAFkC,GAE5B;AACFC,MAAAA,OAAO,EAAC,IADN;AACWC,MAAAA,IAAI,EAAC,EADhB;AACmBC,MAAAA,UAAU,EAAC,EAD9B;AACiCC,MAAAA,IAAI,EAAC,CADtC;AACwCC,MAAAA,IAAI,EAAC,CAD7C;AAC+CC,MAAAA,EAAE,EAAC,CADlD;AACoDC,MAAAA,SAAS,EAAC,CAD9D;AACgEC,MAAAA,WAAW,EAAC,EAD5E;AAC+EC,MAAAA,MAAM,EAAC,IADtF;AAEFC,MAAAA,YAAY,EAAC;AAFX,KAF4B;;AAAA,SAelCC,UAfkC,GAerB,kBAAkB;AAC3B,YAAMC,KAAK,GAAG;AACVR,QAAAA,IAAI,EAAC,KAAKJ,KAAL,CAAWI,IADN;AAEVF,QAAAA,IAAI,EAAC;AAFK,OAAd;AAIA,YAAMW,IAAI,GAAI,MAAM1B,gBAAgB,CAACyB,KAAD,CAApC;AACA,YAAME,QAAQ,GAAGD,IAAI,CAACA,IAAL,IAAaA,IAAI,CAACA,IAAL,CAAUA,IAAxC;;AACA,WAAK,MAAME,GAAX,IAAkBD,QAAlB,EAA2B;AACvBA,QAAAA,QAAQ,CAACC,GAAD,CAAR,CAAcC,MAAd,GAAuBF,QAAQ,CAACC,GAAD,CAAR,CAAcC,MAAd,KAAwB,QAAxB,GAAiC,OAAjC,GAAyC,aAAhE;AACH;;AACD,UAAGH,IAAH,EAAQ;AACJ,YAAG,CAACA,IAAI,CAACI,KAAT,EAAe;AACX,eAAKC,QAAL,CAAc;AAACjB,YAAAA,OAAO,EAAC,KAAT;AACVC,YAAAA,IAAI,EAACW,IAAI,CAACA,IAAL,CAAUA,IADL;AAEVV,YAAAA,UAAU,EAACU,IAAI,CAACA,IAAL,CAAUV,UAFX;AAGVC,YAAAA,IAAI,EAACS,IAAI,CAACA,IAAL,CAAUM,YAHL;AAIVd,YAAAA,IAAI,EAACQ,IAAI,CAACA,IAAL,CAAUR,IAJL;AAKVC,YAAAA,EAAE,EAACO,IAAI,CAACA,IAAL,CAAUP,EALH;AAMVC,YAAAA,SAAS,EAACM,IAAI,CAACA,IAAL,CAAUN,SANV;AAOVC,YAAAA,WAAW,EAACK,IAAI,CAACA,IAAL,CAAUX,IAPZ;AAQVQ,YAAAA,YAAY,EAAC;AARH,WAAd;AASH,SAVD,MAUK;AACD,eAAKQ,QAAL,CAAc;AAACjB,YAAAA,OAAO,EAAC,KAAT;AAAeS,YAAAA,YAAY,EAACG,IAAI,CAACI;AAAjC,WAAd;AACH;AACJ;AACJ,KAxCiC;;AAAA,SAyClCG,YAzCkC,GAyClBC,OAAD,IAAa;AACxB,WAAKH,QAAL,CAAc;AAACjB,QAAAA,OAAO,EAAC,IAAT;AAAeG,QAAAA,IAAI,EAAGiB;AAAtB,OAAd,EAA8C,MAAM;AAChD,YAAG,KAAKrB,KAAL,CAAWS,MAAd,EAAqB;AACjB,eAAKE,UAAL;AACH;AACJ,OAJD;AAKH,KA/CiC;AAAA;;AAMlCW,EAAAA,iBAAiB,GAAE;AACf,SAAKvB,UAAL,GAAgB,IAAhB;AACA,SAAKY,UAAL;AACH;;AAEDY,EAAAA,oBAAoB,GAAG;AACnB,SAAKxB,UAAL,GAAkB,KAAlB;AACH;;AAoCDyB,EAAAA,MAAM,GAAE;AACJ,QAAGjC,QAAQ,EAAX,EACA;AACI,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADL,EAEK;AAAK,QAAA,KAAK,EAAE;AAACkC,UAAAA,KAAK,EAAC;AAAP,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKzB,KAAL,CAAW0B,UADf,CAFL,CADJ,CADJ,EASG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATH,EAUG,oBAAE,cAAF;AACK,QAAA,EAAE,EAAE,IADT;AAEK,QAAA,MAAM,EAAE,KAAK1B,KAAL,CAAWS,MAFxB;AAGK,QAAA,OAAO,EAAE,KAAKT,KAAL,CAAWC,OAHzB;AAIK,QAAA,UAAU,EAAER,cAJjB;AAKK,QAAA,IAAI,EAAE,KAAKO,KAAL,CAAWE,IALtB;AAMK,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWI,IANtB;AAOK,QAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWQ,WAP7B;AAQK,QAAA,SAAS,EAAE,KAAKR,KAAL,CAAWG,UAR3B;AASK,QAAA,YAAY,EAAE,KAAKiB,YATxB;AAUK,QAAA,cAAc,EAAG9B,eAAe,CAAC,iBAAD,CAAf,GAAqC,YAArC,GAAoD,IAV1E;AAWK,QAAA,gBAAgB,EAAGA,eAAe,CAAC,mBAAD,CAAf,GAAuC,cAAvC,GAAwD,IAXhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVH,CADJ;AA4BH;;AACD,QAAG,CAACC,QAAQ,EAAZ,EAAe;AACX,aACI,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;AAEJ;;AAvFiC;;AA0FtC,eAAeM,QAAf","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {ListRoleFunction} from './saga'\r\nimport Loader from 'react-loader-spinner'\r\nimport {Link} from 'react-router-dom'\r\nimport {checkPermission} from './../global/globalFunction'\r\nimport { getToken } from '../index/token';\r\nimport TableComponent from './../subComponent/TableComponent'\r\n\r\nconst columnDataUser = [\r\n    {\r\n        id: 'id',\r\n        numeric: false,\r\n        label: 'ID Role',\r\n    },\r\n    {\r\n        id: 'name',\r\n        numeric: false,\r\n        label: 'Nama Role',\r\n    },\r\n    {\r\n        id: 'system',\r\n        numeric: false,\r\n        label: 'Sistem',\r\n    },\r\n    {\r\n        id: 'status',\r\n        numeric: false,\r\n        label: 'Status Pembiayaan',\r\n    }\r\n\r\n]\r\nclass RoleList extends React.Component{\r\n    _isMounted = false;\r\n    state={\r\n        loading:true,rows:[],total_data:10,page:1,from:1,to:3,last_page:1,rowsPerPage:10,paging:true,\r\n        errorMessage:''\r\n    }\r\n    componentDidMount(){\r\n        this._isMounted=true;\r\n        this.getAllRole()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n    \r\n    getAllRole = async function () {\r\n        const param = {\r\n            page:this.state.page,\r\n            rows:10\r\n        };\r\n        const data  = await ListRoleFunction(param)\r\n        const dataRole = data.data && data.data.data\r\n        for (const key in dataRole){\r\n            dataRole[key].status = dataRole[key].status ==='active'?\"Aktif\":\"Tidak Aktif\"\r\n        }\r\n        if(data){\r\n            if(!data.error){\r\n                this.setState({loading:false,\r\n                    rows:data.data.data,\r\n                    total_data:data.data.total_data,\r\n                    page:data.data.current_page,\r\n                    from:data.data.from,\r\n                    to:data.data.to,\r\n                    last_page:data.data.last_page,\r\n                    rowsPerPage:data.data.rows,\r\n                    errorMessage:''})\r\n            }else{\r\n                this.setState({loading:false,errorMessage:data.error})\r\n            }\r\n        }\r\n    }\r\n    onChangePage = (current) => {\r\n        this.setState({loading:true, page : current}, () => {\r\n            if(this.state.paging){\r\n                this.getAllRole()\r\n            }\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        if(getToken())\r\n        {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-7\">\r\n                             <h2 className=\"mt-3\">Role - List</h2> \r\n                             <div style={{color:\"red\"}}>\r\n                                {this.state.errMessage} \r\n                             </div>\r\n                        </div>\r\n                    </div>\r\n                   <hr/>\r\n                   < TableComponent\r\n                        id={\"id\"}\r\n                        paging={this.state.paging}\r\n                        loading={this.state.loading}\r\n                        columnData={columnDataUser}\r\n                        data={this.state.rows}\r\n                        page={this.state.page}\r\n                        rowsPerPage={this.state.rowsPerPage}\r\n                        totalData={this.state.total_data}\r\n                        onChangePage={this.onChangePage}             \r\n                        permissionEdit={ checkPermission('core_role_patch') ? '/editrole/' : null}\r\n                        permissionDetail={ checkPermission('core_role_details') ? '/detailrole/' : null}\r\n\r\n                    /> \r\n                  \r\n                </div>\r\n            )\r\n        }\r\n        if(!getToken()){\r\n            return (\r\n                <Redirect to='/login' />\r\n            )    \r\n        }\r\n       \r\n    }\r\n}\r\n\r\nexport default RoleList;"]},"metadata":{},"sourceType":"module"}