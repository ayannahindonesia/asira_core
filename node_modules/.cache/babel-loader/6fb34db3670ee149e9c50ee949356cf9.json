{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_core\\\\src\\\\components\\\\rolePermission\\\\rolePermissionAdd.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\nimport CheckBoxClass from '../subComponent/CheckBox';\nimport DropDown from '../subComponent/DropDown';\nimport swal from 'sweetalert';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { withStyles } from '@material-ui/styles';\nimport { compose } from 'redux';\nimport { getAllRoleFunction, patchRolePermissionFunction } from './saga';\nimport { constructRolePermission, checkingSystem, checkingRole, findRoleName, findSystem } from './function';\nimport { getToken } from '../index/token';\n\nconst styles = theme => ({\n  container: {\n    flexGrow: 1\n  }\n});\n\nclass rolePermissionAdd extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n    this.state = {\n      diKlik: false,\n      errorMessage: '',\n      listAllRolePermission: [],\n      listRolePermission: [],\n      disabled: false,\n      role: 0,\n      nameRole: '',\n      system: '',\n      listRole: [],\n      loading: true\n    };\n\n    this.refresh = async function () {\n      const param = {};\n      const data = await getAllRoleFunction(param);\n\n      if (data) {\n        if (!data.error) {\n          const listRole = [];\n          const dataRole = data.dataRole;\n          let role = 0;\n\n          for (const key in dataRole) {\n            if (!dataRole[key].permissions || dataRole[key].permissions && dataRole[key].permissions.length === 0) {\n              listRole.push(dataRole[key]);\n              role = dataRole[key].id;\n            }\n          }\n\n          if (listRole.length !== 0) {\n            this.setState({\n              listRole,\n              role,\n              system: findSystem(role, listRole),\n              nameRole: findRoleName(role, listRole),\n              listAllRolePermission: checkingSystem(role, listRole),\n              loading: false\n            });\n          } else {\n            this.setState({\n              errorMessage: 'Data Role yang belum di setup tidak ditemukan',\n              disabled: true,\n              loading: false\n            });\n          }\n        } else {\n          this.setState({\n            errorMessage: data.error,\n            loading: false\n          });\n        }\n      }\n    };\n\n    this.btnCancel = () => {\n      this.setState({\n        diKlik: true\n      });\n    };\n\n    this.btnSave = () => {\n      if (this.state.listRolePermission.length === 0) {\n        this.setState({\n          errorMessage: \"ERROR : Data Role Permission Tidak Boleh Kosong\"\n        });\n      } else if (this.state.listRole.length === 0 || this.state.role === 0) {\n        this.setState({\n          errorMessage: \"ERROR : Data Role Tidak Boleh Kosong\"\n        });\n      } else {\n        this.setState({\n          loading: true\n        });\n        const listRolePermission = this.state.listRolePermission;\n        const dataRolePermission = {};\n        dataRolePermission.id = parseInt(this.state.role);\n        dataRolePermission.name = this.state.nameRole;\n        dataRolePermission.system = this.state.system;\n        dataRolePermission.permissions = constructRolePermission(listRolePermission) || [];\n        const param = {\n          roleId: parseInt(this.state.role),\n          dataRolePermission\n        };\n        this.postRolePermission(param);\n      }\n    };\n\n    this.isRoleBank = role => {\n      let flag = false;\n      const dataRole = this.state.listRole;\n\n      if (role && role !== 0) {\n        for (const key in dataRole) {\n          if (dataRole[key].id.toString() === role.toString() && dataRole[key].system.toString().toLowerCase().includes('dashboard')) {\n            flag = true;\n            break;\n          }\n        }\n      }\n\n      return flag;\n    };\n\n    this.postRolePermission = async function (param) {\n      const data = await patchRolePermissionFunction(param);\n\n      if (data) {\n        if (!data.error) {\n          swal(\"Success\", \"Role Permission berhasil di tambah\", \"success\");\n          this.setState({\n            diKlik: true,\n            loading: false\n          });\n        } else {\n          this.setState({\n            errorMessage: data.error,\n            loading: false\n          });\n        }\n      }\n    };\n\n    this.onChangeCheck = e => {\n      const profileUserAll = Object.assign({}, this.state.listAllRolePermission);\n      const profileUser = Object.assign({}, this.state.listRolePermission);\n      const profileUserNew = [];\n      let flag = false;\n      let modules = '';\n\n      for (const key in profileUserAll) {\n        if (profileUserAll[key].id.toString().trim() === e.target.value.toString().trim()) {\n          modules = profileUserAll[key].modules;\n\n          for (const keyRole in profileUser) {\n            if (profileUser[keyRole].id.toString().trim() !== e.target.value.toString().trim()) {\n              profileUserNew.push(profileUser[keyRole]);\n            } else {\n              flag = true;\n            }\n          }\n        }\n      }\n\n      if (!flag) {\n        const modulesSplit = modules.split(' ');\n\n        for (const key in modulesSplit) {\n          profileUserNew.push({\n            id: e.target.value,\n            modules: modulesSplit[key]\n          });\n        }\n      }\n\n      this.setState({\n        listRolePermission: profileUserNew\n      });\n    };\n\n    this.onChangeDropDown = e => {\n      this.setState({\n        role: e.target.value,\n        system: findSystem(e.target.value, this.state.listRole),\n        nameRole: findRoleName(e.target.value, this.state.listRole),\n        listAllRolePermission: checkingSystem(e.target.value, this.state.listRole)\n      });\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.refresh();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    this.setState({\n      errorMessage: newProps.error\n    });\n  }\n\n  render() {\n    if (this.state.diKlik) {\n      return React.createElement(Redirect, {\n        to: \"/permissionList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      });\n    } else if (this.state.loading) {\n      return React.createElement(\"div\", {\n        key: \"zz\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        align: \"center\",\n        colSpan: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        type: \"Circles\",\n        color: \"#00BFFF\",\n        height: \"40\",\n        width: \"40\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })));\n    } else if (getToken()) {\n      return React.createElement(\"div\", {\n        className: \"container mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Permission - Tambah\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        style: {\n          lineHeight: 3.5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Role Name\"), React.createElement(\"div\", {\n        className: \"col-sm-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(DropDown, {\n        value: this.state.role,\n        label: \"Role\",\n        data: this.state.listRole,\n        id: \"id\",\n        labelName: \"name-system\",\n        onChange: this.onChangeDropDown,\n        fullWidth: true,\n        error: this.state.roleHelper,\n        disabled: this.state.disabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12\",\n        style: {\n          color: \"red\",\n          fontSize: \"15px\",\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, this.state.errorMessage), React.createElement(\"div\", {\n        className: \"col-12\",\n        style: {\n          color: \"black\",\n          fontSize: \"15px\",\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(CheckBoxClass, {\n        label: `${this.state.system} - Permission Setup`,\n        modulesName: \"Menu\",\n        data: this.state.listAllRolePermission,\n        id: \"id\",\n        labelName: \"label\",\n        modules: \"menu\",\n        labelPlacement: \"top\",\n        onChange: this.onChangeCheck,\n        onChecked: id => checkingRole(this.state.listRolePermission, id),\n        style: {\n          width: '97%'\n        },\n        disabled: this.state.disabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-12 ml-3 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Simpan\",\n        className: \"btn btn-success\",\n        onClick: this.btnSave,\n        disabled: this.state.disabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Batal\",\n        className: \"btn ml-2\",\n        onClick: this.btnCancel,\n        style: {\n          backgroundColor: \"grey\",\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      })))));\n    } else if (!getToken()) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport function mapDispatchToProps(dispatch) {\n  return {//   getSourceTransaction: () => {\n    //     dispatch(sourceTransactionRequest());\n    //   handleRedirect: (route) => {\n    //     dispatch(push(route));\n    //   },\n  };\n}\nexport const mapStateToProps = createStructuredSelector({// user: getUserState(),\n});\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withStyle = withStyles(styles);\nexport default compose(withConnect, withStyle, withRouter)(rolePermissionAdd);","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/rolePermission/rolePermissionAdd.js"],"names":["React","Redirect","Loader","CheckBoxClass","DropDown","swal","createStructuredSelector","connect","withRouter","withStyles","compose","getAllRoleFunction","patchRolePermissionFunction","constructRolePermission","checkingSystem","checkingRole","findRoleName","findSystem","getToken","styles","theme","container","flexGrow","rolePermissionAdd","Component","_isMounted","state","diKlik","errorMessage","listAllRolePermission","listRolePermission","disabled","role","nameRole","system","listRole","loading","refresh","param","data","error","dataRole","key","permissions","length","push","id","setState","btnCancel","btnSave","dataRolePermission","parseInt","name","roleId","postRolePermission","isRoleBank","flag","toString","toLowerCase","includes","onChangeCheck","e","profileUserAll","Object","assign","profileUser","profileUserNew","modules","trim","target","value","keyRole","modulesSplit","split","onChangeDropDown","componentDidMount","componentWillUnmount","UNSAFE_componentWillReceiveProps","newProps","render","lineHeight","roleHelper","color","fontSize","textAlign","width","backgroundColor","mapDispatchToProps","dispatch","mapStateToProps","withConnect","withStyle"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Loader from 'react-loader-spinner'\r\nimport CheckBoxClass from '../subComponent/CheckBox';\r\nimport DropDown from '../subComponent/DropDown';\r\nimport swal from 'sweetalert';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { compose } from 'redux';\r\nimport { getAllRoleFunction, patchRolePermissionFunction } from './saga'\r\nimport { constructRolePermission, checkingSystem, checkingRole, findRoleName, findSystem } from './function'\r\nimport { getToken } from '../index/token';\r\n\r\nconst styles = (theme) => ({\r\n  container: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\n\r\n\r\nclass rolePermissionAdd extends React.Component{\r\n    _isMounted = false;\r\n\r\n    state = {\r\n      diKlik:false,\r\n      errorMessage:'',\r\n      listAllRolePermission: [],\r\n      listRolePermission: [],\r\n      disabled: false,\r\n      role : 0,\r\n      nameRole: '',\r\n      system: '',\r\n      listRole: [],\r\n      loading: true,\r\n    };\r\n\r\n    componentDidMount(){\r\n      this._isMounted = true;\r\n      this.refresh()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this._isMounted = false;\r\n    }\r\n\r\n    refresh = async function(){\r\n      const param = {};\r\n\r\n      const data = await getAllRoleFunction(param);\r\n\r\n      if(data) {\r\n        if(!data.error) {\r\n          const listRole = [];\r\n          const dataRole = data.dataRole;\r\n          let role = 0;\r\n\r\n          for(const key in dataRole) {\r\n            if(!dataRole[key].permissions || (dataRole[key].permissions && dataRole[key].permissions.length === 0)) {\r\n              listRole.push(dataRole[key]);\r\n              role = dataRole[key].id;\r\n            }\r\n          }\r\n\r\n          if(listRole.length !== 0) {\r\n            this.setState({\r\n              listRole,\r\n              role,\r\n              system: findSystem(role, listRole),\r\n              nameRole: findRoleName(role, listRole),\r\n              listAllRolePermission:checkingSystem(role,listRole),\r\n              loading: false,\r\n            })\r\n          } else {\r\n            this.setState({\r\n              errorMessage: 'Data Role yang belum di setup tidak ditemukan',\r\n              disabled: true,\r\n              loading: false,\r\n            })\r\n          }\r\n          \r\n        } else {\r\n          this.setState({\r\n            errorMessage: data.error,\r\n            loading: false,\r\n          })\r\n        }      \r\n      }\r\n    }\r\n\r\n    btnCancel = ()=>{\r\n      this.setState({diKlik:true})\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(newProps){\r\n      this.setState({errorMessage:newProps.error})\r\n    }\r\n\r\n    btnSave = () => {\r\n      if(this.state.listRolePermission.length === 0) {\r\n        this.setState({errorMessage:\"ERROR : Data Role Permission Tidak Boleh Kosong\"})\r\n      } else if(this.state.listRole.length === 0 || this.state.role === 0) {\r\n        this.setState({errorMessage:\"ERROR : Data Role Tidak Boleh Kosong\"})\r\n      } else{\r\n        \r\n        this.setState({loading: true})\r\n\r\n        const listRolePermission = this.state.listRolePermission;\r\n        const dataRolePermission = {};\r\n        dataRolePermission.id = parseInt(this.state.role);\r\n        dataRolePermission.name = this.state.nameRole;\r\n        dataRolePermission.system = this.state.system;\r\n        dataRolePermission.permissions = constructRolePermission(listRolePermission) || [];\r\n\r\n        const param = {\r\n          roleId: parseInt(this.state.role),\r\n          dataRolePermission,\r\n        };\r\n  \r\n        this.postRolePermission(param);\r\n        \r\n      }\r\n    }\r\n\r\n    isRoleBank = (role) => {\r\n      let flag = false;\r\n      const dataRole = this.state.listRole;\r\n\r\n      if(role && role !== 0) {\r\n        for(const key in dataRole) {\r\n          if(dataRole[key].id.toString() === role.toString() && dataRole[key].system.toString().toLowerCase().includes('dashboard')) {\r\n            flag = true;\r\n            break;\r\n          }\r\n        }\r\n        \r\n      } \r\n\r\n      return flag;\r\n    }\r\n\r\n    postRolePermission = async function (param) {\r\n      const data = await patchRolePermissionFunction(param)\r\n\r\n      if(data) {\r\n        if(!data.error) {\r\n          swal(\"Success\",\"Role Permission berhasil di tambah\",\"success\")\r\n          this.setState({\r\n            diKlik: true,\r\n            loading: false,\r\n          })\r\n        } else {\r\n          this.setState({\r\n            errorMessage: data.error,\r\n            loading: false,\r\n          })\r\n        }      \r\n      }\r\n    }\r\n\r\n    onChangeCheck = (e) => {\r\n      const profileUserAll = Object.assign({}, this.state.listAllRolePermission);\r\n      const profileUser = Object.assign({}, this.state.listRolePermission);\r\n      const profileUserNew = [];\r\n\r\n      let flag = false;\r\n      let modules = '';\r\n  \r\n      for (const key in profileUserAll) {\r\n        if (\r\n          profileUserAll[key].id.toString().trim() ===\r\n          e.target.value.toString().trim()\r\n        ) {\r\n          modules = profileUserAll[key].modules;\r\n\r\n          for(const keyRole in profileUser) {\r\n            if(profileUser[keyRole].id.toString().trim() !== e.target.value.toString().trim()) {\r\n              profileUserNew.push(profileUser[keyRole])\r\n            } else {\r\n              flag = true;\r\n            }\r\n          }\r\n        } \r\n      }\r\n  \r\n      if (!flag) {\r\n        const modulesSplit = modules.split(' ');\r\n\r\n        for(const key in modulesSplit) {\r\n          profileUserNew.push({\r\n            id: e.target.value,\r\n            modules: modulesSplit[key],\r\n          });\r\n        } \r\n      }\r\n      \r\n      this.setState({\r\n        listRolePermission: profileUserNew,\r\n      });\r\n    };\r\n\r\n    onChangeDropDown = (e) => {\r\n      this.setState({\r\n        role: e.target.value,\r\n        system: findSystem(e.target.value, this.state.listRole),\r\n        nameRole: findRoleName(e.target.value, this.state.listRole),\r\n        listAllRolePermission: checkingSystem(e.target.value,this.state.listRole)\r\n      })\r\n    }\r\n\r\n    render(){\r\n        if(this.state.diKlik){\r\n          return <Redirect to='/permissionList'/>            \r\n        } else if (this.state.loading){\r\n          return  (\r\n            <div  key=\"zz\">\r\n              <div align=\"center\" colSpan={6}>\r\n                <Loader \r\n                  type=\"Circles\"\r\n                  color=\"#00BFFF\"\r\n                  height=\"40\"\t\r\n                  width=\"40\"\r\n                />   \r\n              </div>\r\n            </div>\r\n          )\r\n        } else if(getToken()){\r\n          return(\r\n              <div className=\"container mt-4\">\r\n                <h3>Permission - Tambah</h3>\r\n                \r\n                <hr/>\r\n                \r\n                <form>\r\n                  <div className=\"form-group row\">                   \r\n                      <label className=\"col-sm-2 col-form-label\" style={{lineHeight:3.5}}>\r\n                        Role Name\r\n                      </label>\r\n                      <div className=\"col-sm-4\">\r\n                        <DropDown\r\n                          value={this.state.role}\r\n                          label=\"Role\"\r\n                          data={this.state.listRole}\r\n                          id=\"id\"\r\n                          labelName=\"name-system\"\r\n                          onChange={this.onChangeDropDown}\r\n                          fullWidth\r\n                          error={this.state.roleHelper}\r\n                          disabled={this.state.disabled}\r\n                        />\r\n                      </div>                 \r\n                  </div>\r\n\r\n                  <div className=\"form-group row\">\r\n                      <div className=\"col-12\" style={{color:\"red\",fontSize:\"15px\",textAlign:'left'}}>\r\n                        {this.state.errorMessage}\r\n                      </div>     \r\n                      <div className=\"col-12\" style={{color:\"black\",fontSize:\"15px\",textAlign:'left'}}>\r\n                        <CheckBoxClass\r\n                          label={`${this.state.system} - Permission Setup`}\r\n                          modulesName=\"Menu\"\r\n                          data={this.state.listAllRolePermission}\r\n                          id=\"id\"\r\n                          labelName=\"label\"\r\n                          modules=\"menu\"      \r\n                          labelPlacement= \"top\"                       \r\n                          onChange={this.onChangeCheck}\r\n                          onChecked={(id) => checkingRole(this.state.listRolePermission, id)}\r\n                          style={{ width: '97%'}}\r\n                          disabled={this.state.disabled}\r\n                        />\r\n                      </div>           \r\n                  </div>\r\n                  \r\n                  <div className=\"form-group row\">\r\n                      <div className=\"col-sm-12 ml-3 mt-3\">\r\n                        <input type=\"button\" value=\"Simpan\" className=\"btn btn-success\" onClick={this.btnSave} disabled={this.state.disabled}/>\r\n                        <input type=\"button\" value=\"Batal\" className=\"btn ml-2\" onClick={this.btnCancel} style={{backgroundColor:\"grey\",color:\"white\"}}/>\r\n                      </div>\r\n                  </div>\r\n                  \r\n                </form>\r\n              \r\n              </div>\r\n          )\r\n        } else if(!getToken()){\r\n          return (\r\n              <Redirect to='/login' />\r\n          )    \r\n        }\r\n       \r\n    }\r\n}\r\n\r\nexport function mapDispatchToProps(dispatch) {\r\n    return {\r\n    //   getSourceTransaction: () => {\r\n    //     dispatch(sourceTransactionRequest());\r\n    //   handleRedirect: (route) => {\r\n    //     dispatch(push(route));\r\n    //   },\r\n    };\r\n}\r\n  \r\nexport const mapStateToProps = createStructuredSelector({\r\n  // user: getUserState(),\r\n});\r\n\r\nconst withConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n);\r\n\r\nconst withStyle = withStyles(styles);\r\n\r\nexport default compose(\r\n    withConnect,\r\n    withStyle,\r\n    withRouter\r\n  )(rolePermissionAdd);"]},"metadata":{},"sourceType":"module"}