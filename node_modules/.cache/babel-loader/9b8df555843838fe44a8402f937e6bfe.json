{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_core\\\\src\\\\components\\\\rolePermission\\\\rolePermissionEdit.js\";\nimport React from 'react';\nimport Cookies from 'universal-cookie';\nimport { Redirect } from 'react-router-dom';\nimport CheckBox from '../subComponent/CheckBox';\nimport Loader from 'react-loader-spinner';\nimport swal from 'sweetalert';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { withStyles } from '@material-ui/styles';\nimport { compose } from 'redux';\nimport { listAllRolePermission } from '../global/globalConstant';\nimport { getRoleFunction, getRolePermissionFunction, patchRolePermissionFunction } from './saga';\nimport { constructRolePermission } from './function';\n\nconst styles = theme => ({\n  container: {\n    flexGrow: 1\n  }\n});\n\nconst cookie = new Cookies();\n\nclass rolePermissionEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n    this.state = {\n      diKlik: false,\n      errorMessage: '',\n      listAllRolePermission,\n      listRolePermission: [],\n      listRole: {},\n      roleId: 0,\n      loading: true,\n      disabled: true\n    };\n\n    this.refresh = async function () {\n      const param = {};\n      param.roleId = this.state.roleId;\n      param.listAllRolePermission = this.state.listAllRolePermission;\n      const data = await getRoleFunction(param, getRolePermissionFunction);\n\n      if (data) {\n        if (!data.error) {\n          this.setState({\n            listRole: data.dataRole,\n            listRolePermission: data.dataRolePermission,\n            loading: false\n          });\n        } else {\n          this.setState({\n            errorMessage: data.error,\n            disabled: true,\n            loading: false\n          });\n        }\n      }\n    };\n\n    this.btnCancel = () => {\n      this.setState({\n        diKlik: true\n      });\n    };\n\n    this.btnSave = () => {\n      const listRolePermission = this.state.listRolePermission;\n      const dataRolePermission = {};\n      dataRolePermission.role_id = parseInt(this.state.listRole.id);\n      dataRolePermission.permissions = constructRolePermission(listRolePermission);\n      const param = {\n        dataRolePermission\n      };\n      this.patchRolePermission(param);\n    };\n\n    this.patchRolePermission = async function (param) {\n      const data = await patchRolePermissionFunction(param);\n      this.setState({\n        loading: true\n      });\n\n      if (data) {\n        if (!data.error) {\n          swal(\"Success\", \"Role Permission berhasil di ubah\", \"success\");\n          this.setState({\n            diKlik: true,\n            loading: false\n          });\n        } else {\n          this.setState({\n            errorMessage: data.error,\n            disabled: true,\n            loading: false\n          });\n        }\n      }\n    };\n\n    this.checkingRole = (role, idRolePermission) => {\n      for (const key in role) {\n        if (role[key].id.toString().trim() === idRolePermission.toString().trim()) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this.onChangeCheck = e => {\n      const profileUserAll = Object.assign({}, this.state.listAllRolePermission);\n      const profileUser = Object.assign({}, this.state.listRolePermission);\n      const profileUserNew = [];\n      let flag = false;\n      let name = '';\n      let modules = '';\n\n      for (const key in profileUserAll) {\n        if (profileUserAll[key].id.toString().trim() === e.target.value.toString().trim()) {\n          name = profileUserAll[key].name;\n          modules = profileUserAll[key].modules;\n\n          for (const keyRole in profileUser) {\n            if (profileUser[keyRole].id.toString().trim() !== e.target.value.toString().trim()) {\n              profileUserNew.push(profileUser[keyRole]);\n            } else {\n              flag = true;\n            }\n          }\n        }\n      }\n\n      if (!flag) {\n        profileUserNew.push({\n          id: e.target.value,\n          name: name,\n          modules: modules\n        });\n      }\n\n      this.setState({\n        listRolePermission: profileUserNew\n      });\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.setState({\n      roleId: this.props.match.params.id\n    }, () => {\n      this.refresh();\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      errorMessage: newProps.error\n    });\n  }\n\n  render() {\n    if (this.state.diKlik) {\n      return React.createElement(Redirect, {\n        to: \"/listRolePermission\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      });\n    } else if (this.state.loading) {\n      return React.createElement(\"div\", {\n        key: \"zz\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        align: \"center\",\n        colSpan: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        type: \"Circles\",\n        color: \"#00BFFF\",\n        height: \"40\",\n        width: \"40\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      })));\n    } else if (cookie.get('token')) {\n      return React.createElement(\"div\", {\n        className: \"container mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Role Permission - Ubah\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        style: {\n          lineHeight: 3.5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Role Name\"), React.createElement(\"label\", {\n        className: \"col-sm-4 col-form-label\",\n        style: {\n          lineHeight: 3.5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, this.state.listRole && this.state.listRole.name)), React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12\",\n        style: {\n          color: \"red\",\n          fontSize: \"15px\",\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, this.state.errorMessage), React.createElement(\"div\", {\n        className: \"col-12\",\n        style: {\n          color: \"black\",\n          fontSize: \"15px\",\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(CheckBox, {\n        label: \"Core - Permission Setup\",\n        modulesName: \"Menu\",\n        data: this.state.listAllRolePermission,\n        id: \"id\",\n        labelName: \"label\",\n        modules: \"menu\",\n        labelPlacement: \"top\",\n        onChange: this.onChangeCheck,\n        onChecked: id => this.checkingRole(this.state.listRolePermission, id),\n        style: {\n          width: '97%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-12 ml-3 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Ubah\",\n        className: \"btn btn-success\",\n        onClick: this.btnSave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Batal\",\n        className: \"btn ml-2\",\n        onClick: this.btnCancel,\n        style: {\n          backgroundColor: \"grey\",\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      })))));\n    } else if (!cookie.get('token')) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport function mapDispatchToProps(dispatch) {\n  return {//   getSourceTransaction: () => {\n    //     dispatch(sourceTransactionRequest());\n    //   handleRedirect: (route) => {\n    //     dispatch(push(route));\n    //   },\n  };\n}\nexport const mapStateToProps = createStructuredSelector({// user: getUserState(),\n  // menu: getMenu(),\n});\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withStyle = withStyles(styles);\nexport default compose(withConnect, withStyle, withRouter)(rolePermissionEdit);","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/rolePermission/rolePermissionEdit.js"],"names":["React","Cookies","Redirect","CheckBox","Loader","swal","createStructuredSelector","connect","withRouter","withStyles","compose","listAllRolePermission","getRoleFunction","getRolePermissionFunction","patchRolePermissionFunction","constructRolePermission","styles","theme","container","flexGrow","cookie","rolePermissionEdit","Component","_isMounted","state","diKlik","errorMessage","listRolePermission","listRole","roleId","loading","disabled","refresh","param","data","error","setState","dataRole","dataRolePermission","btnCancel","btnSave","role_id","parseInt","id","permissions","patchRolePermission","checkingRole","role","idRolePermission","key","toString","trim","onChangeCheck","e","profileUserAll","Object","assign","profileUser","profileUserNew","flag","name","modules","target","value","keyRole","push","componentDidMount","props","match","params","componentWillUnmount","componentWillReceiveProps","newProps","render","get","lineHeight","color","fontSize","textAlign","width","backgroundColor","mapDispatchToProps","dispatch","mapStateToProps","withConnect","withStyle"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Cookies from 'universal-cookie';\r\nimport { Redirect } from 'react-router-dom'\r\nimport CheckBox from '../subComponent/CheckBox';\r\nimport Loader from 'react-loader-spinner'\r\nimport swal from 'sweetalert';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { compose } from 'redux';\r\nimport { listAllRolePermission } from '../global/globalConstant'\r\nimport { getRoleFunction, getRolePermissionFunction, patchRolePermissionFunction } from './saga'\r\nimport { constructRolePermission } from './function'\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n      flexGrow: 1,\r\n    },\r\n  });\r\n\r\nconst cookie = new Cookies();\r\n\r\n\r\nclass rolePermissionEdit extends React.Component{\r\n    _isMounted = false;\r\n\r\n    state = {\r\n      diKlik:false,\r\n      errorMessage:'',\r\n      listAllRolePermission,\r\n      listRolePermission: [],\r\n      listRole : {},\r\n      roleId: 0,\r\n      loading: true,\r\n      disabled:true,\r\n    };\r\n\r\n    componentDidMount(){\r\n      this._isMounted = true;\r\n      this.setState({\r\n        roleId: this.props.match.params.id,\r\n      },() => {\r\n        this.refresh();\r\n      })\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n      this._isMounted = false;\r\n    }\r\n\r\n    refresh = async function(){\r\n      const param = {};\r\n      param.roleId = this.state.roleId;\r\n      param.listAllRolePermission = this.state.listAllRolePermission;\r\n\r\n      const data = await getRoleFunction(param, getRolePermissionFunction);\r\n      \r\n      if(data) {\r\n        if(!data.error) {\r\n          this.setState({\r\n            listRole: data.dataRole,\r\n            listRolePermission: data.dataRolePermission,\r\n            loading: false,\r\n          })\r\n        } else {\r\n          this.setState({\r\n            errorMessage: data.error,\r\n            disabled: true,\r\n            loading: false,\r\n          })\r\n        }      \r\n      } \r\n    }\r\n\r\n    btnCancel = ()=>{\r\n      this.setState({diKlik:true})\r\n    }\r\n    componentWillReceiveProps(newProps){\r\n      this.setState({errorMessage:newProps.error})\r\n    }\r\n\r\n    btnSave = () =>{\r\n      const listRolePermission = this.state.listRolePermission;\r\n      const dataRolePermission = {};\r\n      dataRolePermission.role_id = parseInt(this.state.listRole.id);\r\n      dataRolePermission.permissions = constructRolePermission(listRolePermission);\r\n\r\n      const param = {\r\n        dataRolePermission,\r\n      };\r\n\r\n      this.patchRolePermission(param)\r\n        \r\n    }\r\n\r\n    patchRolePermission = async function(param) {\r\n      const data = await patchRolePermissionFunction(param)\r\n\r\n      this.setState({loading: true})\r\n\r\n      if(data) {\r\n        if(!data.error) {\r\n          swal(\"Success\",\"Role Permission berhasil di ubah\",\"success\")\r\n          this.setState({\r\n            diKlik: true,\r\n            loading: false,\r\n          })\r\n        } else {\r\n          this.setState({\r\n            errorMessage: data.error,\r\n            disabled: true,\r\n            loading: false,\r\n          })\r\n        }      \r\n      }\r\n    }\r\n\r\n    checkingRole = (role, idRolePermission) => {\r\n      for (const key in role) {\r\n        if (\r\n          role[key].id.toString().trim() ===\r\n          idRolePermission.toString().trim()\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n    onChangeCheck = (e) => {\r\n      const profileUserAll = Object.assign({}, this.state.listAllRolePermission);\r\n      const profileUser = Object.assign({}, this.state.listRolePermission);\r\n      const profileUserNew = [];\r\n      let flag = false;\r\n      let name = '';\r\n      let modules = '';\r\n  \r\n      for (const key in profileUserAll) {\r\n        if (\r\n          profileUserAll[key].id.toString().trim() ===\r\n          e.target.value.toString().trim()\r\n        ) {\r\n          name = profileUserAll[key].name;\r\n          modules = profileUserAll[key].modules;\r\n\r\n          for(const keyRole in profileUser) {\r\n            if(profileUser[keyRole].id.toString().trim() !== e.target.value.toString().trim()) {\r\n              profileUserNew.push(profileUser[keyRole])\r\n            } else {\r\n              flag = true;\r\n            }\r\n          }\r\n        } \r\n      }\r\n  \r\n      if (!flag) {\r\n        profileUserNew.push({\r\n          id: e.target.value,\r\n          name: name,\r\n          modules: modules,\r\n        });\r\n      }\r\n      \r\n      this.setState({\r\n        listRolePermission: profileUserNew,\r\n      });\r\n    };\r\n\r\n    render(){\r\n        if(this.state.diKlik){\r\n            return <Redirect to='/listRolePermission'/>            \r\n        } else if (this.state.loading){\r\n          return  (\r\n            <div  key=\"zz\">\r\n              <div align=\"center\" colSpan={6}>\r\n                <Loader \r\n                  type=\"Circles\"\r\n                  color=\"#00BFFF\"\r\n                  height=\"40\"\t\r\n                  width=\"40\"\r\n                />   \r\n              </div>\r\n            </div>\r\n          )\r\n        } else if(cookie.get('token')){\r\n          return(\r\n            <div className=\"container mt-4\">\r\n              <h3>Role Permission - Ubah</h3>\r\n              \r\n              <hr/>\r\n              \r\n              <form>\r\n                <div className=\"form-group row\">                   \r\n                  <label className=\"col-sm-2 col-form-label\" style={{lineHeight:3.5}}>\r\n                    Role Name\r\n                  </label>\r\n                  <label className=\"col-sm-4 col-form-label\" style={{lineHeight:3.5}}>\r\n                    {this.state.listRole && this.state.listRole.name}\r\n                  </label>               \r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-12\" style={{color:\"red\",fontSize:\"15px\",textAlign:'left'}}>\r\n                        {this.state.errorMessage}\r\n                    </div>     \r\n                    <div className=\"col-12\" style={{color:\"black\",fontSize:\"15px\",textAlign:'left'}}>\r\n                        <CheckBox\r\n                          label=\"Core - Permission Setup\"\r\n                          modulesName=\"Menu\"\r\n                          data={this.state.listAllRolePermission}\r\n                          id=\"id\"\r\n                          labelName=\"label\"\r\n                          modules=\"menu\"      \r\n                          labelPlacement= \"top\"                       \r\n                          onChange={this.onChangeCheck}\r\n                          onChecked={(id) => this.checkingRole(this.state.listRolePermission, id)}\r\n                          style={{ width: '97%'}}\r\n                        />\r\n                    </div>           \r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-12 ml-3 mt-3\">\r\n                      <input type=\"button\" value=\"Ubah\" className=\"btn btn-success\" onClick={this.btnSave} />\r\n                      <input type=\"button\" value=\"Batal\" className=\"btn ml-2\" onClick={this.btnCancel} style={{backgroundColor:\"grey\",color:\"white\"}}/>\r\n                    </div>\r\n                </div>\r\n                \r\n              </form>\r\n            \r\n            </div>\r\n          )\r\n        } else if(!cookie.get('token')){\r\n          return (\r\n            <Redirect to='/login' />\r\n          )    \r\n        }\r\n       \r\n    }\r\n}\r\n\r\nexport function mapDispatchToProps(dispatch) {\r\n    return {\r\n    //   getSourceTransaction: () => {\r\n    //     dispatch(sourceTransactionRequest());\r\n    //   handleRedirect: (route) => {\r\n    //     dispatch(push(route));\r\n    //   },\r\n    };\r\n}\r\n  \r\nexport const mapStateToProps = createStructuredSelector({\r\n  // user: getUserState(),\r\n  // menu: getMenu(),\r\n});\r\n\r\nconst withConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n);\r\n\r\nconst withStyle = withStyles(styles);\r\n\r\nexport default compose(\r\n    withConnect,\r\n    withStyle,\r\n    withRouter\r\n  )(rolePermissionEdit);"]},"metadata":{},"sourceType":"module"}