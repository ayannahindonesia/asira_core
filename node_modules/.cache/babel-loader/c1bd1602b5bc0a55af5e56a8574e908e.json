{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_core\\\\src\\\\components\\\\index\\\\login.js\";\nimport React from 'react';\nimport Logo from './../../support/img/logo.jpeg';\nimport './../../support/css/login.css';\nimport Loader from 'react-loader-spinner';\nimport swal from 'sweetalert';\nimport { Redirect } from 'react-router-dom';\nimport { postAdminLoginFunction, getTokenGeoFunction, getUserProfileFunction, sendEmailFunction } from './saga';\nimport { setProfileUser } from './token';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n    this.state = {\n      authData: [],\n      loading: false,\n      tokenClient: '',\n      isLogin: false,\n      open: false,\n      email: '',\n      error: '',\n      loadMail: false\n    };\n\n    this.btnLogin = () => {\n      this.setState({\n        loading: true\n      });\n      const key = this.refs.username.value;\n      const password = this.refs.password.value;\n\n      if (key === \"\" || password === \"\") {\n        swal(\"Error\", \"Username and Password Empty\", \"error\");\n        this.setState({\n          loading: false\n        });\n      } else {\n        const logindata = {\n          key,\n          password\n        };\n        this.postLoginAdmin(logindata);\n      }\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.handleSend = () => {\n      this.setState({\n        loadMail: true\n      });\n\n      if (!this.state.email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n        this.setState({\n          error: \"Masukan format email yang benar\",\n          loadMail: false\n        });\n      } else {\n        let newData = {\n          email: this.state.email\n        };\n        this.sendEmail(newData);\n      }\n    };\n\n    this.sendEmail = async function (params) {\n      const data = await sendEmailFunction(params);\n\n      if (data) {\n        if (!data.error) {\n          swal(\"Email Terkirim\", `Harap cek di ${this.state.email}`, \"success\");\n          this.setState({\n            error: '',\n            open: false\n          });\n        } else {\n          this.setState({\n            error: data.error,\n            loadMail: false\n          });\n        }\n      }\n    };\n\n    this.renderBtnEmail = () => {\n      if (this.state.loadMail) {\n        return React.createElement(Button, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(Loader, {\n          type: \"ThreeDots\",\n          color: \"#00BFFF\",\n          height: \"10\",\n          width: \"10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Button, {\n          onClick: this.handleSend,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"Kirim\");\n      }\n    };\n\n    this.postLoginAdmin = async function (param) {\n      const data = await postAdminLoginFunction(param, getTokenGeoFunction, getUserProfileFunction);\n\n      if (data) {\n        if (!data.error) {\n          let flag = true;\n          let userPermission = data.dataPermission || [];\n          setProfileUser(JSON.stringify(userPermission));\n          this.setState({\n            loading: false,\n            isLogin: flag\n          });\n        } else {\n          this.setState({\n            loading: false\n          });\n          swal(\"Warning\", data.error, \"info\");\n        }\n      }\n    };\n\n    this.renderBtnOrLoading = () => {\n      if (this.state.loading) {\n        return React.createElement(Loader, {\n          type: \"Circles\",\n          color: \"#00BFFF\",\n          height: \"30\",\n          width: \"30\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"input\", {\n          type: \"button\",\n          className: \"loginBtn\",\n          onClick: this.btnLogin,\n          style: {\n            marginTop: \"20px\"\n          },\n          value: \"Sign in\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.renderBtnOrLoadingEmail = () => {\n      if (this.state.sendMail) {\n        return React.createElement(\"input\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          disabled: true,\n          style: {\n            cursor: \"progress\"\n          },\n          value: \"Kirim Email\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"input\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: this.handleSend,\n          value: \"Kirim Email\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      error: newProps.error\n    });\n  } //LOGIN BUTTON\n\n\n  render() {\n    if (this.state.isLogin) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App loginContainer mr-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Lupa Password?\", React.createElement(\"div\", {\n      style: {\n        color: \"red\",\n        fontSize: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, this.state.error)), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Harap isi Email yang sudah terdaftar, Kami akan mengirimkan password anda disana.\"), React.createElement(TextField, {\n      autoFocus: true,\n      margin: \"dense\",\n      id: \"name\",\n      label: \"Email Address\",\n      type: \"email\",\n      fullWidth: true,\n      onChange: this.handleEmail,\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Cancel\"), this.renderBtnEmail())), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-6 col-md-6 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Core\")), React.createElement(\"div\", {\n      className: \"col-6 col-md-6 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: Logo,\n      alt: \"logo\",\n      width: \"60%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      ref: \"username\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      ref: \"password\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }), this.renderBtnOrLoading(), React.createElement(\"p\", {\n      style: {\n        marginTop: \"20px\",\n        cursor: \"pointer\"\n      },\n      onClick: this.handleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Forgot your password?\"))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/index/login.js"],"names":["React","Logo","Loader","swal","Redirect","postAdminLoginFunction","getTokenGeoFunction","getUserProfileFunction","sendEmailFunction","setProfileUser","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","Login","Component","_isMounted","state","authData","loading","tokenClient","isLogin","open","email","error","loadMail","btnLogin","setState","key","refs","username","value","password","logindata","postLoginAdmin","handleOpen","handleClose","handleEmail","e","target","handleSend","match","newData","sendEmail","params","data","renderBtnEmail","param","flag","userPermission","dataPermission","JSON","stringify","renderBtnOrLoading","marginTop","renderBtnOrLoadingEmail","sendMail","cursor","componentDidMount","componentWillUnmount","componentWillReceiveProps","newProps","render","color","fontSize"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Logo from './../../support/img/logo.jpeg'\r\nimport './../../support/css/login.css'\r\nimport Loader from 'react-loader-spinner'\r\nimport swal from 'sweetalert'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { postAdminLoginFunction, getTokenGeoFunction, getUserProfileFunction,sendEmailFunction} from './saga'\r\nimport { setProfileUser } from './token'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass Login extends React.Component{\r\n    _isMounted = false;\r\n\r\n    state = {\r\n        authData:[],\r\n        loading:false,\r\n        tokenClient:'' , \r\n        isLogin : false,\r\n        open:false,\r\n        email:'',\r\n        error:'',\r\n        loadMail:false,\r\n    }\r\n  \r\n    componentDidMount(){\r\n        this._isMounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;     \r\n    }\r\n    componentWillReceiveProps(newProps){\r\n        this.setState({error:newProps.error})\r\n    }\r\n      \r\n    //LOGIN BUTTON\r\n    btnLogin = ()=>{\r\n        this.setState({loading:true})\r\n     \r\n        const key=this.refs.username.value\r\n        const password=this.refs.password.value\r\n       \r\n        if (key===\"\" || password===\"\"){\r\n            swal(\"Error\",\"Username and Password Empty\",\"error\")\r\n            this.setState({loading:false})\r\n\r\n        } else {            \r\n            const logindata ={key,password};\r\n\r\n            this.postLoginAdmin(logindata)\r\n        }\r\n      \r\n    } \r\n\r\n    //Forgot Password\r\n\r\n    handleOpen = ()=>{\r\n        this.setState({open:true})\r\n    }\r\n    handleClose = ()=>{\r\n        this.setState({open:false})\r\n    }\r\n    handleEmail=(e)=>{\r\n        this.setState({email:e.target.value})\r\n        \r\n    }\r\n    handleSend=()=>{\r\n        this.setState({loadMail:true})\r\n        if(!(this.state.email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i))){\r\n            this.setState({error:\"Masukan format email yang benar\",loadMail:false})\r\n        }else{\r\n            let newData = {\r\n                email:this.state.email\r\n            }\r\n            this.sendEmail(newData)\r\n        }\r\n    }\r\n\r\n    sendEmail = async function (params){\r\n        const data = await sendEmailFunction (params)\r\n        if(data){\r\n            if(!data.error){\r\n                swal(\"Email Terkirim\",`Harap cek di ${this.state.email}`,\"success\")\r\n                this.setState({error:'',open:false})\r\n            }else{\r\n                this.setState({error:data.error,loadMail:false})\r\n            }\r\n        }\r\n    }\r\n\r\n    renderBtnEmail =()=>{\r\n        if(this.state.loadMail){\r\n            return(\r\n                <Button color=\"primary\">\r\n                    <Loader \r\n                    type=\"ThreeDots\"\r\n                    color=\"#00BFFF\"\r\n                    height=\"10\"\t\r\n                    width=\"10\"\r\n                />   \r\n                </Button>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <Button onClick={this.handleSend} color=\"primary\">\r\n                    Kirim\r\n                </Button>\r\n            )\r\n        }\r\n    }\r\n    \r\n\r\n    postLoginAdmin = async function(param)  {\r\n        const data = await postAdminLoginFunction(param, getTokenGeoFunction, getUserProfileFunction)\r\n        \r\n        if(data) {\r\n            if(!data.error) {\r\n                let flag = true;\r\n                let userPermission = data.dataPermission || [];  \r\n                \r\n                setProfileUser(JSON.stringify(userPermission))\r\n\r\n                this.setState({loading: false, isLogin: flag})\r\n            } else {\r\n                this.setState({loading : false})\r\n                swal(\"Warning\",data.error,\"info\")\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    renderBtnOrLoading =()=>{\r\n        if (this.state.loading){\r\n            return ( \r\n            <Loader \r\n                type=\"Circles\"\r\n                color=\"#00BFFF\"\r\n                height=\"30\"\t\r\n                width=\"30\"\r\n            />);\r\n           \r\n        }\r\n        else{\r\n            return(\r\n                <input type=\"button\" className=\"loginBtn\" onClick={this.btnLogin} style={{marginTop:\"20px\"}}  value=\"Sign in\"/> \r\n            )\r\n        }\r\n    }\r\n\r\n    renderBtnOrLoadingEmail =()=>{\r\n        if (this.state.sendMail){\r\n            return ( \r\n                <input type=\"button\" className=\"btn btn-primary\" disabled={true} style={{cursor:\"progress\"}} value=\"Kirim Email\"/> \r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <input type=\"button\" className=\"btn btn-primary\" onClick={this.handleSend} value=\"Kirim Email\"/> \r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.isLogin){\r\n            return(\r\n                <Redirect to='/' />\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"App loginContainer mr-3\">\r\n                 <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\r\n    <DialogTitle id=\"form-dialog-title\">Lupa Password? \r\n    <div style={{color:\"red\",fontSize:\"10px\"}}>\r\n             {this.state.error}\r\n    </div>\r\n    </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Harap isi Email yang sudah terdaftar, Kami akan mengirimkan password anda disana.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n            onChange={this.handleEmail}\r\n            value={this.state.email}\r\n            \r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n                <Button onClick={this.handleClose} color=\"primary\">\r\n                     Cancel\r\n                </Button>\r\n                {this.renderBtnEmail()}\r\n        </DialogActions>\r\n      </Dialog>\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-md-6 mt-3\">\r\n                        <h2>Core</h2> \r\n                    </div>\r\n                    <div className=\"col-6 col-md-6 mt-3\">\r\n                        <img src={Logo} alt=\"logo\" width=\"60%\"></img>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-12\">\r\n                        <hr/>\r\n                        <h3>Sign In</h3>\r\n                        <input type=\"text\" placeholder=\"Username\" ref=\"username\" className=\"form-control\"/>\r\n                        <input type=\"password\" placeholder=\"Password\" ref=\"password\" className=\"form-control\"/>\r\n                        {this.renderBtnOrLoading()}\r\n                        <p style={{marginTop:\"20px\",cursor:\"pointer\"}} onClick={this.handleOpen}>Forgot your password?</p>\r\n                    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n      \r\n       \r\n    \r\n}\r\n\r\nexport default (Login);\r\n"]},"metadata":{},"sourceType":"module"}