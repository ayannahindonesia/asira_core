{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_core\\\\src\\\\components\\\\agent\\\\agentList.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { getAllAgentFunction } from './saga';\nimport { checkPermission } from '../global/globalFunction';\nimport { getToken } from '../index/token';\nimport TableComponent from '../subComponent/TableComponent';\nimport { destructAgent } from './function';\nconst columnDataAgent = [{\n  id: 'id',\n  numeric: false,\n  label: 'Id Agen'\n}, {\n  id: 'name',\n  numeric: false,\n  label: 'Nama Agen'\n}, {\n  id: 'category_name',\n  numeric: false,\n  label: 'Kategori'\n}, {\n  id: 'instansi',\n  numeric: false,\n  label: 'Instansi'\n}, {\n  id: 'status',\n  numeric: false,\n  label: 'Status'\n}];\n\nclass AgentList extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.changeSearch = e => {\n      this.setState({\n        loading: true,\n        page: 1,\n        search: e.target.value\n      }, () => {\n        this.refresh();\n      });\n    };\n\n    this.refresh = async function () {\n      const param = {};\n\n      if (this.state.paging) {\n        param.rows = this.state.rowsPerPage;\n        param.page = this.state.page;\n      }\n\n      param.search_all = this.state.search;\n      const data = await getAllAgentFunction(param);\n\n      if (data) {\n        if (!data.error) {\n          const dataListAgent = destructAgent(data.dataAgent, true);\n          this.setState({\n            listAgent: dataListAgent,\n            totalData: data.totalData,\n            loading: false\n          });\n        } else {\n          this.setState({\n            errorMessage: data.error,\n            loading: false\n          });\n        }\n      }\n    };\n\n    this.onChangePage = current => {\n      this.setState({\n        loading: this.state.paging,\n        page: current\n      }, () => {\n        if (this.state.paging) {\n          this.refresh();\n        }\n\n        ;\n      });\n    };\n\n    this.state = {\n      loading: true,\n      listAgent: [],\n      paging: true,\n      page: 1,\n      rowsPerPage: 10,\n      search: ''\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.refresh();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  } // onBtnSearch = () => {\n  //     this.setState({page:1}, () => {\n  //         this.refresh()\n  //     })\n  // }\n\n\n  render() {\n    if (getToken()) {\n      return React.createElement(\"div\", {\n        style: {\n          padding: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(TableComponent, {\n        id: \"id\",\n        search: {\n          value: this.state.search,\n          label: 'Search Nama Agen, ID Agen..',\n          function: this.changeSearch\n        },\n        title: 'Agen - List',\n        paging: this.state.paging,\n        loading: this.state.loading,\n        columnData: columnDataAgent,\n        data: this.state.listAgent,\n        page: this.state.page,\n        rowsPerPage: this.state.rowsPerPage,\n        totalData: this.state.totalData,\n        onChangePage: this.onChangePage,\n        permissionAdd: checkPermission('core_agent_new') ? '/agenAdd/' : null,\n        permissionEdit: checkPermission('core_agent_patch') ? '/agenEdit/' : null,\n        permissionDetail: checkPermission('core_agent_details') ? '/agenDetail/' : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }));\n    }\n\n    if (!getToken()) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default AgentList;","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/agent/agentList.js"],"names":["React","Redirect","getAllAgentFunction","checkPermission","getToken","TableComponent","destructAgent","columnDataAgent","id","numeric","label","AgentList","Component","constructor","props","_isMounted","changeSearch","e","setState","loading","page","search","target","value","refresh","param","state","paging","rows","rowsPerPage","search_all","data","error","dataListAgent","dataAgent","listAgent","totalData","errorMessage","onChangePage","current","componentDidMount","componentWillUnmount","render","padding","function"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {getAllAgentFunction} from './saga'\r\nimport { checkPermission } from '../global/globalFunction';\r\nimport { getToken } from '../index/token'\r\nimport TableComponent from '../subComponent/TableComponent'\r\nimport { destructAgent } from './function';\r\n\r\nconst columnDataAgent = [\r\n    {\r\n        id: 'id',\r\n        numeric: false,\r\n        label: 'Id Agen',\r\n    },\r\n    {\r\n        id: 'name',\r\n        numeric: false,\r\n        label: 'Nama Agen',\r\n    },\r\n    {\r\n        id: 'category_name',\r\n        numeric: false,\r\n        label: 'Kategori',\r\n    },\r\n    {\r\n        id: 'instansi',\r\n        numeric: false,\r\n        label: 'Instansi',\r\n    },\r\n    { \r\n        id: 'status', \r\n        numeric: false, \r\n        label: 'Status' \r\n    },\r\n]\r\n\r\nclass AgentList extends React.Component{\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading:true, \r\n            listAgent: [],\r\n            paging: true,\r\n            page: 1,\r\n            rowsPerPage: 10,\r\n            search: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this._isMounted = true;\r\n        this.refresh()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    // onBtnSearch = () => {\r\n    //     this.setState({page:1}, () => {\r\n    //         this.refresh()\r\n    //     })\r\n    // }\r\n\r\n    changeSearch = (e) => {\r\n        this.setState({\r\n            loading:true,\r\n            page: 1,\r\n            search: e.target.value,\r\n        }, () => {\r\n            this.refresh();\r\n        })\r\n    }\r\n\r\n    refresh = async function(){\r\n        const param = {};\r\n\r\n        if(this.state.paging) {\r\n            param.rows = this.state.rowsPerPage;\r\n            param.page = this.state.page;\r\n        }\r\n\r\n        param.search_all = this.state.search\r\n\r\n        const data = await getAllAgentFunction(param);\r\n\r\n        if(data) {\r\n            if(!data.error) {\r\n                const dataListAgent = destructAgent(data.dataAgent, true);\r\n                \r\n                this.setState({\r\n                    listAgent: dataListAgent,\r\n                    totalData: data.totalData,\r\n                    loading: false,\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    errorMessage: data.error,\r\n                    loading: false,\r\n                })\r\n            }      \r\n        }\r\n    }\r\n\r\n    onChangePage = (current) => {\r\n        this.setState({\r\n            loading:this.state.paging,\r\n            page:current,\r\n        }, () => {\r\n            if(this.state.paging) {\r\n                this.refresh()\r\n            };\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        if(getToken()){\r\n            return(\r\n                <div style={{padding:0}}>\r\n\r\n                    < TableComponent\r\n                        id={\"id\"}\r\n                        search={\r\n                            {\r\n                              value: this.state.search,\r\n                              label: 'Search Nama Agen, ID Agen..',\r\n                              function: this.changeSearch,\r\n                            }\r\n                        }\r\n                        title={'Agen - List'}\r\n                        paging={this.state.paging}\r\n                        loading={this.state.loading}\r\n                        columnData={columnDataAgent}\r\n                        data={this.state.listAgent}\r\n                        page={this.state.page}\r\n                        rowsPerPage={this.state.rowsPerPage}\r\n                        totalData={this.state.totalData}\r\n                        onChangePage={this.onChangePage}       \r\n                        permissionAdd={ checkPermission('core_agent_new') ? '/agenAdd/' : null}      \r\n                        permissionEdit={ checkPermission('core_agent_patch') ? '/agenEdit/' : null}\r\n                        permissionDetail={ checkPermission('core_agent_details') ? '/agenDetail/' : null}\r\n                    />\r\n\r\n                </div>\r\n            )\r\n        }\r\n        if(!getToken()){\r\n            return (\r\n                <Redirect to='/login' />\r\n            )    \r\n        }\r\n       \r\n    }\r\n}\r\n\r\nexport default AgentList;"]},"metadata":{},"sourceType":"module"}