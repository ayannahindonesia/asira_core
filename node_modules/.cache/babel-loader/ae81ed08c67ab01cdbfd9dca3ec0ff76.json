{"ast":null,"code":"import axios from 'axios';\nimport { serverLog } from './../url';\nimport { getToken } from '../index/token';\nimport { destructErrorMessage } from '../global/globalFunction';\nexport async function getAllActivityLog(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getToken()\n      }\n    };\n    let filter = '';\n\n    for (const key in param) {\n      filter += `&${[key]}=${param[key]}`;\n    }\n\n    axios.post('http://virtserver.swaggerhub.com/Ayannah/Northstar/1.0.0/ns/log') // axios.get(serverLog+`ns/log?orderby=updated_at&sort=desc${filter}`,config)\n    .then(res => {\n      param.activityLog = res.data;\n\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/logs/saga.js"],"names":["axios","serverLog","getToken","destructErrorMessage","getAllActivityLog","param","next","Promise","resolve","config","headers","filter","key","post","then","res","activityLog","data","catch","err","error","response","toString"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,oBAAT,QAAqC,0BAArC;AAEA,OAAO,eAAeC,iBAAf,CAAkCC,KAAlC,EAAwCC,IAAxC,EAA8C;AAEjD,SAAO,IAAIC,OAAJ,CAAY,MAAOC,OAAP,IAAiB;AAChC,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AAAC,yBAAiB,YAAYR,QAAQ;AAAtC;AADE,KAAf;AAIA,QAAIS,MAAM,GAAE,EAAZ;;AAEA,SAAK,MAAMC,GAAX,IAAkBP,KAAlB,EAAwB;AACpBM,MAAAA,MAAM,IAAK,IAAG,CAACC,GAAD,CAAM,IAAGP,KAAK,CAACO,GAAD,CAAM,EAAlC;AACH;;AAEDZ,IAAAA,KAAK,CAACa,IAAN,CAAW,iEAAX,EACA;AADA,KAECC,IAFD,CAEOC,GAAD,IAAO;AACTV,MAAAA,KAAK,CAACW,WAAN,GAAoBD,GAAG,CAACE,IAAxB;;AACA,UAAGX,IAAH,EAAQ;AACJE,QAAAA,OAAO,CAACF,IAAI,CAACD,KAAD,CAAL,CAAP;AACH,OAFD,MAEK;AACDG,QAAAA,OAAO,CAACH,KAAD,CAAP;AACH;AACJ,KATD,EAUCa,KAVD,CAUQC,GAAD,IAAO;AACV,YAAMC,KAAK,GAAID,GAAG,CAACE,QAAJ,IAAgBF,GAAG,CAACE,QAAJ,CAAaJ,IAA7B,IAAqCd,oBAAoB,CAACgB,GAAG,CAACE,QAAJ,CAAaJ,IAAd,CAA1D,IAAiFE,GAAG,CAACG,QAAJ,EAA/F;AACAjB,MAAAA,KAAK,CAACe,KAAN,GAAcA,KAAd;AACAZ,MAAAA,OAAO,CAACH,KAAD,CAAP;AACH,KAdD;AAeH,GA1BM,CAAP;AA2BH","sourcesContent":["import axios from 'axios'\r\nimport { serverLog } from './../url'\r\nimport { getToken } from '../index/token';\r\nimport { destructErrorMessage } from '../global/globalFunction';\r\n\r\nexport async function getAllActivityLog (param,next) {\r\n\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getToken()}\r\n          };\r\n\r\n        let filter =''\r\n        \r\n        for (const key in param){\r\n            filter += `&${[key]}=${param[key]}`\r\n        }\r\n\r\n        axios.post('http://virtserver.swaggerhub.com/Ayannah/Northstar/1.0.0/ns/log')\r\n        // axios.get(serverLog+`ns/log?orderby=updated_at&sort=desc${filter}`,config)\r\n        .then((res)=>{\r\n            param.activityLog = res.data\r\n            if(next){\r\n                resolve(next(param))\r\n            }else{\r\n                resolve(param)\r\n            }\r\n        })\r\n        .catch((err)=>{\r\n            const error = (err.response && err.response.data && destructErrorMessage(err.response.data))|| err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}