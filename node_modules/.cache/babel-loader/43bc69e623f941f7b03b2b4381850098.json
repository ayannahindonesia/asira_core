{"ast":null,"code":"import axios from 'axios';\nimport { serverUrl } from '../url';\nimport { getToken } from '../index/token';\nimport { destructErrorMessage } from '../global/globalFunction';\nexport async function getAllLayananListFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getToken()\n      }\n    };\n    let filter = '';\n\n    for (const key in param) {\n      filter += `&${[key]}=${param[key]}`;\n    }\n\n    axios.get(serverUrl + `admin/services?orderby=updated_at&sort=desc${filter}`, config).then(res => {\n      param.listLayanan = res.data;\n\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getDetailLayananFunction(param, next) {\n  return new Promise(async resolve => {\n    var config = {\n      headers: {\n        'Authorization': \"Bearer \" + getToken()\n      }\n    };\n    axios.get(serverUrl + `admin/services/${param.id}`, config).then(res => {\n      if (next) {\n        param.image_id = res.data.image_id;\n        param.data = res.data;\n        resolve(next(param));\n      }\n\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getImageFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getToken()\n      }\n    };\n    axios.get(serverUrl + `admin/image/${param.image_id}`, config).then(res => {\n      param.imageData = res.data;\n\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function editLayananFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getToken()\n      }\n    };\n    axios.patch(serverUrl + `admin/services/${param.id}`, param.newData, config).then(res => {\n      param = res;\n\n      if (next) {\n        resolve(next(param));\n      }\n\n      resolve(param);\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function addLayananFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getToken()\n      }\n    };\n    axios.post(serverUrl + 'admin/services', param, config).then(res => {\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/layanan/saga.js"],"names":["axios","serverUrl","getToken","destructErrorMessage","getAllLayananListFunction","param","next","Promise","resolve","config","headers","filter","key","get","then","res","listLayanan","data","catch","err","error","response","toString","getDetailLayananFunction","id","image_id","getImageFunction","imageData","editLayananFunction","patch","newData","addLayananFunction","post"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { serverUrl } from '../url';\r\nimport { getToken } from '../index/token';\r\nimport { destructErrorMessage } from '../global/globalFunction';\r\n\r\n\r\nexport async function getAllLayananListFunction(param,next) {\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getToken()}\r\n          };\r\n        let filter =''\r\n        \r\n        for (const key in param){\r\n            filter += `&${[key]}=${param[key]}`\r\n        }\r\n\r\n\r\n        axios.get(serverUrl+`admin/services?orderby=updated_at&sort=desc${filter}`,config)\r\n        .then((res)=>{\r\n            param.listLayanan = res.data\r\n            if(next){\r\n                resolve(next(param))\r\n            }else{\r\n                resolve(param)\r\n            }\r\n        })\r\n        .catch((err)=>{\r\n            const error = (err.response && err.response.data && destructErrorMessage(err.response.data))|| err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function getDetailLayananFunction(param,next) {\r\n    return new Promise(async (resolve)=>{\r\n        var config = {\r\n            headers: {'Authorization': \"Bearer \" +getToken()}\r\n          };\r\n        axios.get(serverUrl+`admin/services/${param.id}`,config)\r\n        .then((res)=>{\r\n          \r\n            if(next){\r\n                param.image_id = res.data.image_id\r\n                param.data = res.data\r\n                resolve(next(param))\r\n            }\r\n                resolve(res)\r\n        })\r\n        .catch((err)=>{\r\n            const error =( err.response && err.response.data && destructErrorMessage(err.response.data))|| err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function getImageFunction(param,next) {\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getToken()}\r\n          };\r\n        axios.get(serverUrl+`admin/image/${param.image_id}`,config)\r\n        .then((res)=>{\r\n            param.imageData = res.data\r\n            if(next){\r\n                resolve(next(param))\r\n            }else{\r\n                resolve(param)\r\n            }\r\n        })\r\n        .catch((err)=>{\r\n            const error =( err.response && err.response.data && destructErrorMessage(err.response.data))|| err.toString()\r\n\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function editLayananFunction (param,next){\r\n    return new Promise(async (resolve)=>{\r\n        const config = {headers: {'Authorization': \"Bearer \" + getToken()}};\r\n        axios.patch(serverUrl+`admin/services/${param.id}`,param.newData,config)\r\n        .then((res)=>{\r\n            param = res\r\n           if(next){\r\n            resolve(next(param))\r\n           }\r\n           resolve(param)\r\n        })\r\n        .catch((err)=>{\r\n            const error =( err.response && err.response.data && destructErrorMessage(err.response.data))|| err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n    \r\nexport async function addLayananFunction (param, next){\r\n    return new Promise(async (resolve)=>{\r\n        const config = {headers: {'Authorization': \"Bearer \" + getToken()}};\r\n        axios.post(serverUrl+'admin/services',param,config)\r\n        .then((res)=>{\r\n           resolve(res)\r\n        })\r\n        .catch((err)=>{\r\n            const error =( err.response && err.response.data && destructErrorMessage(err.response.data))|| err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}