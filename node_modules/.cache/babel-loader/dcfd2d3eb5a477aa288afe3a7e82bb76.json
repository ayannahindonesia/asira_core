{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_core\\\\src\\\\components\\\\subComponent\\\\DropDown.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nconst styles = theme => ({\n  selectField: {\n    minWidth: 120,\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginTop: '1em'\n  }\n});\n\nclass DropDown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorText: ''\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.error !== this.props.error) {\n      this.setState({\n        error: nextProps.error\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          fullWidth = _this$props.fullWidth,\n          label = _this$props.label,\n          data = _this$props.data,\n          id = _this$props.id,\n          labelName = _this$props.labelName,\n          value = _this$props.value;\n    return React.createElement(FormControl, {\n      className: classes.selectField,\n      error: !!this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(NativeSelect, {\n      value: value,\n      onChange: this.props.onChange,\n      fullWidth: fullWidth,\n      style: {\n        border: '1px solid #ced4da'\n      },\n      inputProps: {\n        name: label,\n        id: label\n      },\n      disabled: this.props.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, data && Object.keys(data).length && data.map(object => {\n      const idObject = object[id];\n      const labelNames = labelName.split('-');\n      let labelObject = '';\n\n      if (labelNames.length > 1) {\n        for (let i = 0; i < labelNames.length; i++) {\n          labelObject = `${labelObject} - ${object[labelNames[i]]}`;\n        }\n\n        labelObject = labelObject.substr(3);\n      } else {\n        labelObject = object[labelNames];\n      }\n\n      return React.createElement(\"option\", {\n        value: idObject,\n        key: idObject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, labelObject);\n    })), this.state.error && React.createElement(FormHelperText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.error));\n  }\n\n}\n\nDropDown.propTypes = {\n  fullWidth: PropTypes.bool,\n  label: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  labelName: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  disabled: PropTypes.bool,\n  error: PropTypes.string\n};\nexport default withStyles(styles)(DropDown);","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/subComponent/DropDown.js"],"names":["React","PropTypes","withStyles","NativeSelect","FormControl","FormHelperText","styles","theme","selectField","minWidth","display","flexWrap","marginTop","DropDown","Component","constructor","props","state","errorText","componentWillReceiveProps","nextProps","error","setState","render","classes","fullWidth","label","data","id","labelName","value","onChange","border","name","disabled","Object","keys","length","map","object","idObject","labelNames","split","labelObject","i","substr","propTypes","bool","string","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nconst styles = (theme) => ({\r\n  selectField: {\r\n    minWidth: 120,\r\n    display: 'flex',\r\n    flexWrap: 'wrap', \r\n    marginTop: '1em',\r\n  },\r\n});\r\n\r\nclass DropDown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorText: '',\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.error !== this.props.error) {\r\n      this.setState({\r\n        error: nextProps.error,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      fullWidth,\r\n      label,\r\n      data,\r\n      id,\r\n      labelName,\r\n      value,\r\n    } = this.props;\r\n    \r\n    return (\r\n      <FormControl className={classes.selectField} error={!!this.state.error}>\r\n        <NativeSelect\r\n          value={value}\r\n          onChange={this.props.onChange}\r\n          fullWidth={fullWidth}\r\n          style={{border: '1px solid #ced4da'}}\r\n          inputProps={{\r\n            name: label,\r\n            id: label,\r\n          }}\r\n          disabled={this.props.disabled}\r\n        >\r\n          {data &&\r\n            Object.keys(data).length &&\r\n            data.map((object) => {\r\n              const idObject = object[id];\r\n              const labelNames = labelName.split('-');\r\n              let labelObject = '';\r\n              if (labelNames.length > 1) {\r\n                for (let i = 0; i < labelNames.length; i++) {\r\n                  labelObject = `${labelObject } - ${ object[labelNames[i]]}`;\r\n                }\r\n                labelObject = labelObject.substr(3);\r\n              } else {\r\n                labelObject = object[labelNames];\r\n              }\r\n\r\n              return (\r\n                <option value={idObject} key={idObject}>\r\n                  {labelObject}\r\n                </option>\r\n              );\r\n            })} \r\n        </NativeSelect>\r\n        {this.state.error && (\r\n          <FormHelperText>{this.state.error}</FormHelperText>\r\n        )}\r\n      </FormControl>\r\n    );\r\n  }\r\n}\r\n\r\nDropDown.propTypes = {\r\n  fullWidth: PropTypes.bool,\r\n  label: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  labelName: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(DropDown);\r\n"]},"metadata":{},"sourceType":"module"}