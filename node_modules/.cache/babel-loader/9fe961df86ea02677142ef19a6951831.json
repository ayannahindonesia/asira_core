{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_core\\\\src\\\\components\\\\subComponent\\\\CheckBox.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport CheckBox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = theme => ({\n  FormControl: {\n    display: 'flex'\n  },\n  formItem: {\n    width: '100%'\n  }\n});\n\nclass CheckBoxClass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorText: ''\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.error !== this.props.error) {\n      this.setState({\n        error: nextProps.error\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          label = _this$props.label,\n          data = _this$props.data,\n          id = _this$props.id,\n          labelName = _this$props.labelName,\n          modules = _this$props.modules,\n          modulesName = _this$props.modulesName,\n          labelPlacement = _this$props.labelPlacement;\n    let newModules = '';\n    let dataJudul = 0;\n    return React.createElement(FormControl, {\n      className: classes.FormControl,\n      error: !!this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      component: \"legend\",\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, data && (Object.keys(data).length || data.length) ? label : `No ${label}`)), data && (Object.keys(data).length || data.length) && (Object.keys(data).length !== 0 || data.length !== 0) && React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, data.map(object => {\n      if (dataJudul < 4) {\n        dataJudul += 1;\n\n        if (dataJudul === 1) {\n          return React.createElement(Grid, {\n            item: true,\n            sm: 6,\n            xs: 12,\n            key: object[id],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, React.createElement(Grid, {\n            container: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, React.createElement(Grid, {\n            item: true,\n            sm: 7,\n            xs: 12,\n            style: {\n              paddingTop: '5vh'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, React.createElement(\"h6\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, modulesName)), React.createElement(Grid, {\n            item: true,\n            sm: 5,\n            xs: 12,\n            style: {\n              paddingLeft: object[labelName].trim().length < 15 ? '3vh' : '0vh',\n              paddingRight: object[labelName].trim().length >= 15 ? '3vh' : '0vh',\n              paddingTop: '5vh',\n              textAlign: 'left'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, React.createElement(\"h6\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, object[labelName]))));\n        }\n\n        return React.createElement(Grid, {\n          item: true,\n          sm: 2,\n          xs: 12,\n          key: object[id],\n          style: {\n            paddingLeft: object[labelName].trim().length < 15 ? object[labelName].trim().length < 5 ? '3vh' : '1vh' : '0vh',\n            paddingTop: '5vh',\n            textAlign: 'left'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, object[labelName]));\n      }\n\n      return null;\n    }))), data && (Object.keys(data).length || data.length) && (Object.keys(data).length !== 0 || data.length !== 0) && React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, data.map(object => {\n      if (newModules !== object[modules]) {\n        newModules = object[modules];\n        return React.createElement(Grid, {\n          item: true,\n          sm: 6,\n          xs: 12,\n          key: object[id],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          sm: 7,\n          xs: 12,\n          style: {\n            paddingTop: '2vh'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, newModules)), React.createElement(Grid, {\n          item: true,\n          sm: 5,\n          xs: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(FormControlLabel, {\n          className: this.props.vertical ? classes.formItem : \"\",\n          key: object[id],\n          labelPlacement: labelPlacement,\n          control: React.createElement(CheckBox, {\n            checked: this.props.onChecked(object[id]),\n            onChange: this.props.onChange,\n            value: object[id].toString().trim(),\n            color: \"default\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }),\n          disabled: this.props.disabled // label={object[labelName]}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }))));\n      } else {\n        return React.createElement(Grid, {\n          item: true,\n          sm: 2,\n          xs: 12,\n          key: object[id],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, React.createElement(FormControlLabel, {\n          className: this.props.vertical ? classes.formItem : \"\",\n          key: object[id],\n          labelPlacement: \"top\",\n          control: React.createElement(CheckBox, {\n            checked: this.props.onChecked(object[id]),\n            onChange: this.props.onChange,\n            value: object[id].toString().trim(),\n            color: \"default\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }),\n          disabled: this.props.disabled // label={object[labelName]}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }));\n      }\n    }))), this.state.error && React.createElement(FormHelperText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, this.state.error));\n  }\n\n}\n\nCheckBoxClass.propTypes = {\n  label: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  labelName: PropTypes.string.isRequired,\n  modules: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  onChecked: PropTypes.func,\n  disabled: PropTypes.bool,\n  vertical: PropTypes.bool,\n  error: PropTypes.string,\n  modulesName: PropTypes.string,\n  labelPlacement: PropTypes.string\n};\nexport default withStyles(styles)(CheckBoxClass);","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/subComponent/CheckBox.js"],"names":["React","PropTypes","withStyles","CheckBox","FormControl","FormHelperText","FormGroup","FormControlLabel","FormLabel","Grid","styles","theme","display","formItem","width","CheckBoxClass","Component","constructor","props","state","errorText","componentWillReceiveProps","nextProps","error","setState","render","classes","label","data","id","labelName","modules","modulesName","labelPlacement","newModules","dataJudul","color","Object","keys","length","map","object","paddingTop","paddingLeft","trim","paddingRight","textAlign","vertical","onChecked","onChange","toString","disabled","propTypes","string","isRequired","func","bool"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport CheckBox from '@material-ui/core/Checkbox';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = (theme) => ({\r\n\r\n  FormControl: {\r\n    display: 'flex',\r\n  },\r\n  formItem :{\r\n    width:'100%',\r\n  }\r\n});\r\n\r\nclass CheckBoxClass extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorText: '',\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.error !== this.props.error) {\r\n      this.setState({\r\n        error: nextProps.error,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      label,\r\n      data,\r\n      id,\r\n      labelName,\r\n      modules,\r\n      modulesName,\r\n      labelPlacement,\r\n    } = this.props;\r\n\r\n    let newModules = '';\r\n    let dataJudul = 0;\r\n    \r\n    return (\r\n      <FormControl className={classes.FormControl} error={!!this.state.error}>\r\n        <FormLabel component=\"legend\" style={{color: 'black'}}><h4>{data && (Object.keys(data).length || data.length) ? label : `No ${label}`}</h4></FormLabel>  \r\n        {\r\n          data &&\r\n          (Object.keys(data).length || data.length) && (Object.keys(data).length !== 0 || data.length !== 0) &&\r\n          <FormGroup row >\r\n            <Grid container>              \r\n              {\r\n                data.map((object) => {\r\n                  if(dataJudul < 4) {\r\n                    dataJudul += 1\r\n                    if (dataJudul === 1) {\r\n                      return(\r\n                        <Grid item sm={6} xs={12} key={object[id]}>\r\n                          <Grid container>\r\n                            <Grid item sm={7} xs={12} style={{paddingTop:'5vh'}}>\r\n                              <h6>{modulesName}</h6>\r\n                            </Grid>\r\n                            <Grid item sm={5} xs={12} \r\n                              style={\r\n                                {\r\n                                  paddingLeft: object[labelName].trim().length < 15  ? '3vh' : '0vh',\r\n                                  paddingRight: object[labelName].trim().length >= 15  ? '3vh' : '0vh',\r\n                                  paddingTop:'5vh', \r\n                                  textAlign: 'left'\r\n                                }\r\n                              }\r\n                            >\r\n                              <h6>{object[labelName]}</h6>\r\n                            </Grid>\r\n                          </Grid>  \r\n                        </Grid>\r\n                        \r\n                      )\r\n                    } \r\n                      return(\r\n                        <Grid item sm={2} xs={12} key={object[id]}\r\n                          style={\r\n                            {\r\n                              paddingLeft: object[labelName].trim().length < 15 ? (object[labelName].trim().length < 5 ?'3vh' : '1vh') : '0vh',\r\n                              paddingTop:'5vh', \r\n                              textAlign: 'left'\r\n                            }\r\n                        }>\r\n                          <h6>{object[labelName]}</h6>\r\n                        </Grid>\r\n                      )\r\n                    \r\n                    \r\n                    \r\n                  } \r\n                  return null;\r\n                })\r\n              }\r\n            </Grid>\r\n          </FormGroup>\r\n        }\r\n\r\n\r\n\r\n        {\r\n          data &&\r\n          (Object.keys(data).length || data.length) && (Object.keys(data).length !== 0 || data.length !== 0) &&\r\n          <Grid container>\r\n            <FormGroup row >\r\n            {\r\n              data.map((object) => {\r\n                \r\n                if(newModules !== object[modules]) {\r\n                  newModules = object[modules];\r\n                  return (\r\n                    <Grid item sm={6} xs={12} key={object[id]}>\r\n                      <Grid container>\r\n                        <Grid item sm={7} xs={12} style={{paddingTop:'2vh'}}>\r\n                          <h6>{newModules}</h6>\r\n                        </Grid>\r\n                        <Grid item sm={5} xs={12} >\r\n                          <FormControlLabel\r\n                            className={(this.props.vertical)?classes.formItem:\"\"}\r\n                            key={object[id]}\r\n                            labelPlacement={labelPlacement}\r\n                            control={                      \r\n                              <CheckBox\r\n                                checked={this.props.onChecked(object[id])}\r\n                                onChange={this.props.onChange}\r\n                                value={object[id].toString().trim()}\r\n                                color=\"default\"                      \r\n                              />                     \r\n                            }\r\n                            disabled={this.props.disabled}\r\n                            // label={object[labelName]}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>                       \r\n                  )\r\n                } else {\r\n                  return (\r\n                    <Grid item sm={2} xs={12} key={object[id]}>\r\n                      <FormControlLabel\r\n                        className={(this.props.vertical)?classes.formItem:\"\"}\r\n                        key={object[id]}\r\n                        labelPlacement='top'\r\n                        control={                      \r\n                          <CheckBox\r\n                            checked={this.props.onChecked(object[id])}\r\n                            onChange={this.props.onChange}\r\n                            value={object[id].toString().trim()}\r\n                            color=\"default\"\r\n                          />                     \r\n                        }\r\n                        disabled={this.props.disabled}\r\n                        // label={object[labelName]}\r\n                      />\r\n                    </Grid>\r\n                  )\r\n                }\r\n              })\r\n            }\r\n\r\n            </FormGroup>\r\n          </Grid>\r\n        }\r\n\r\n        {this.state.error && (\r\n          <FormHelperText>{this.state.error}</FormHelperText>\r\n        )}\r\n      </FormControl>\r\n    );\r\n  }\r\n}\r\n\r\nCheckBoxClass.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  labelName: PropTypes.string.isRequired,\r\n  modules: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  onChecked: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  vertical: PropTypes.bool,\r\n  error: PropTypes.string,\r\n  modulesName: PropTypes.string,\r\n  labelPlacement: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(CheckBoxClass);\r\n"]},"metadata":{},"sourceType":"module"}