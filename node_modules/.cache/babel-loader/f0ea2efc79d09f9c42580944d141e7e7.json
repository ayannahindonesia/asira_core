{"ast":null,"code":"import Cookies from 'universal-cookie';\nimport axios from 'axios';\nimport { serverUrl } from '../url';\nconst cookie = new Cookies();\nexport async function AddTipeBankFunction(param) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + cookie.get('token')\n      }\n    };\n    axios.post(serverUrl + `admin/bank_types`, param, config).then(res => {\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function ListTipeBankFunction(param) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + cookie.get('token')\n      }\n    };\n    let filter = '';\n\n    for (const key in param) {\n      filter += `&${key}=${param[key]}`;\n    }\n\n    axios.get(serverUrl + `admin/bank_types?orderby=updated_time&sort=asc${filter}`, config).then(res => {\n      resolve(res.data.data);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function DetailTipeBankFunction(params, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + cookie.get('token')\n      }\n    };\n    axios.get(serverUrl + `admin/bank_types/${params.id}`, config).then(res => {\n      if (next) {\n        resolve(next(params));\n      } else {\n        resolve(res.data);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      params.error = error;\n      resolve(params);\n    });\n  });\n}\nexport async function EditTipeBankFunction(params) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + cookie.get('token')\n      }\n    };\n    axios.patch(serverUrl + `admin/bank_types/${params.id}`, params.newData, config).then(res => {\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      params.error = error;\n      resolve(params);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/tipebank/saga.js"],"names":["Cookies","axios","serverUrl","cookie","AddTipeBankFunction","param","Promise","resolve","config","headers","get","post","then","res","catch","err","error","response","data","message","toString","toUpperCase","ListTipeBankFunction","filter","key","DetailTipeBankFunction","params","next","id","EditTipeBankFunction","patch","newData"],"mappings":"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","sourcesContent":["import Cookies from 'universal-cookie';\r\nimport axios from 'axios'\r\nimport { serverUrl } from '../url';\r\nconst cookie = new Cookies()\r\n\r\nexport async function AddTipeBankFunction (param){\r\n    return new Promise (async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + cookie.get('token')}\r\n        };\r\n        axios.post(serverUrl+`admin/bank_types`,param,config)\r\n        .then((res)=>{\r\n            resolve(res)\r\n        })\r\n        .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function ListTipeBankFunction (param){\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + cookie.get('token')}\r\n          };\r\n          let filter = '';\r\n\r\n          for(const key in param) {\r\n              filter += `&${key}=${param[key]}`\r\n          }\r\n        axios.get(serverUrl+`admin/bank_types?orderby=updated_time&sort=asc${filter}`,config)\r\n        .then((res)=>{\r\n            resolve(res.data.data)\r\n            \r\n        })\r\n        .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function DetailTipeBankFunction(params,next) {\r\n    return new Promise(async(resolve)=>{\r\n        \r\n            const config = {\r\n                headers: {'Authorization': \"Bearer \" + cookie.get('token')}\r\n              };\r\n          \r\n            axios.get(serverUrl+`admin/bank_types/${params.id}`,config)\r\n            .then((res)=>{\r\n                if(next){\r\n                    resolve(next(params))\r\n                }else{\r\n                    resolve(res.data)\r\n                }\r\n            })\r\n            .catch((err)=>{\r\n                const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n                params.error = error;\r\n                resolve(params);\r\n            })\r\n        \r\n    })    \r\n}\r\n\r\nexport async function EditTipeBankFunction(params) {\r\n    return new Promise(async(resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + cookie.get('token')}\r\n        };\r\n        axios.patch(serverUrl+`admin/bank_types/${params.id}`,params.newData,config)\r\n        .then((res)=>{\r\n            resolve(res)\r\n        })\r\n        .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            params.error = error;\r\n            resolve(params);\r\n        })\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}