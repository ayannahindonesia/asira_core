{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_core\\\\src\\\\components\\\\report\\\\report.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { withStyles } from '@material-ui/styles';\nimport { compose } from 'redux';\nimport DatePickers from './../subComponent/DatePicker';\nimport { GlobalFunction } from './../globalFunction';\nimport { getAllBankListFunction, getAllLoanDataFunction } from './saga';\nimport { getToken } from '../index/token';\n\nconst styles = theme => ({\n  // root: theme.mixins.gutters({\n  //   paddingTop: 16,\n  //   paddingBottom: 16,\n  //   marginTop: theme.spacing.unit * 3,\n  // }),\n  heading: {\n    flex: '0 0 auto',\n    fontSize: '18px',\n    width: '50vw',\n    fontWeight: '800'\n  },\n  container: {\n    flexGrow: 1\n  },\n  textField: {\n    width: '90%',\n    position: 'relative',\n    top: '0.275vh',\n    marginBottom: '1vh'\n  },\n  textFieldModify: {\n    width: '97.5%',\n    marginBottom: '1vh'\n  },\n  textfieldName: {\n    width: '90%',\n    marginBottom: '1vh',\n    position: 'relative',\n    top: '0.2vh'\n  }\n});\n\nclass Report extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n    this.state = {\n      munculinTable: false,\n      pilihReport: false,\n      tanggalAwal: null,\n      tanggalAkhir: null,\n      tanggalAwalPencairan: null,\n      tanggalAkhirPencairan: null,\n      errorMessagePencairan: '',\n      errorMessage: '',\n      errorMessageBank: '',\n      dataBank: [],\n      namaBank: null,\n      loading: false\n    };\n\n    this.getDataBankList = async function () {\n      const param = {};\n      const data = await getAllBankListFunction(param);\n\n      if (data) {\n        if (!data.error) {\n          this.setState({\n            dataBank: data.mitraList\n          });\n        } else {\n          this.setState({\n            errorMessage: data.error\n          });\n        }\n      }\n    };\n\n    this.renderBankList = () => {\n      var jsx = this.state.dataBank.map((val, index) => {\n        return React.createElement(\"option\", {\n          key: index,\n          value: val.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, val.name);\n      });\n      return jsx;\n    };\n\n    this.handleBank = e => {\n      this.setState({\n        namaBank: e.target.value\n      });\n    };\n\n    this.handleChangeFee = e => {\n      if (e.target.value === \"1\") {\n        this.setState({\n          pilihReport: true\n        });\n      } else {\n        this.setState({\n          pilihReport: false\n        });\n      }\n    };\n\n    this.validate = () => {\n      let flag = true;\n      const _this$state = this.state,\n            tanggalAkhir = _this$state.tanggalAkhir,\n            tanggalAwal = _this$state.tanggalAwal,\n            tanggalAwalPencairan = _this$state.tanggalAwalPencairan,\n            tanggalAkhirPencairan = _this$state.tanggalAkhirPencairan,\n            namaBank = _this$state.namaBank;\n      let dateAwal = new Date(tanggalAwal).getTime();\n      let dateAkhir = new Date(tanggalAkhir).getTime();\n      let tglPencairanAwal = new Date(tanggalAwalPencairan).getTime();\n      let tglPencairanAkhir = new Date(tanggalAkhirPencairan).getTime();\n\n      if (tanggalAwal === null || tanggalAkhir === null) {\n        this.setState({\n          errorMessage: \"Tanggal Kosong - Harap cek ulang\",\n          errorMessagePencairan: '',\n          errorMessageBank: ''\n        });\n        flag = false;\n      } else if (dateAwal > dateAkhir) {\n        this.setState({\n          errorMessage: \"Range Tanggal tidak benar - Harap cek ulang\",\n          errorMessagePencairan: '',\n          errorMessageBank: ''\n        });\n        flag = false;\n      } else if (tglPencairanAwal > tglPencairanAkhir) {\n        this.setState({\n          errorMessagePencairan: \"Range Tanggal Pencairan tidak benar - Harap cek ulang\",\n          errorMessage: '',\n          errorMessageBank: ''\n        });\n        flag = false;\n      } else if (namaBank === \"0\" || namaBank === null) {\n        this.setState({\n          errorMessageBank: \"Mitra Kosong - Harap cek ulang\",\n          errorMessage: '',\n          errorMessagePencairan: ''\n        });\n        flag = false;\n      }\n\n      return flag;\n    };\n\n    this.handleEndChange = e => {\n      this.setState({\n        tanggalAkhir: e.target.value.toString().trim().length !== 0 ? e.target.value : null,\n        errorMessage: ''\n      });\n    };\n\n    this.handleStartChange = e => {\n      this.setState({\n        tanggalAwal: e.target.value.toString().trim().length !== 0 ? e.target.value : null,\n        errorMessage: ''\n      });\n    };\n\n    this.handleStartPencairanChange = e => {\n      this.setState({\n        tanggalAwalPencairan: e.target.value.toString().trim().length !== 0 ? e.target.value : null,\n        errorMessage: '',\n        errorMessagePencairan: ''\n      });\n    };\n\n    this.handleEndPencairanChange = e => {\n      this.setState({\n        tanggalAkhirPencairan: e.target.value.toString().trim().length !== 0 ? e.target.value : null,\n        errorMessage: '',\n        errorMessagePencairan: ''\n      });\n    };\n\n    this.btnShowReport = () => {\n      const _this$state2 = this.state,\n            tanggalAkhir = _this$state2.tanggalAkhir,\n            tanggalAwal = _this$state2.tanggalAwal,\n            tanggalAwalPencairan = _this$state2.tanggalAwalPencairan,\n            tanggalAkhirPencairan = _this$state2.tanggalAkhirPencairan,\n            namaBank = _this$state2.namaBank;\n\n      if (this.validate()) {\n        this.setState({\n          loading: true\n        });\n        let newTanggalAwal = tanggalAwal + \"T00:00:00.000Z\";\n        let newTanggalBack = tanggalAkhir + \"T23:59:59.000Z\";\n        let newTanggalPencairanAwal = tanggalAwalPencairan + \"T00:00:00.000Z\";\n        let newTanggalPencairanAkhir = tanggalAkhirPencairan + \"T23:59:59.000Z\";\n        const param = {\n          bank_name: namaBank,\n          start_approval_date: newTanggalAwal,\n          end_approval_date: newTanggalBack\n        };\n\n        if (tanggalAwalPencairan) {\n          param.start_disburse_date = newTanggalPencairanAwal;\n        }\n\n        if (tanggalAkhirPencairan) {\n          param.end_disburse_date = newTanggalPencairanAkhir;\n        }\n\n        this.getAllLoanData(param);\n      }\n    };\n\n    this.getAllLoanData = async function (params) {\n      const data = await getAllLoanDataFunction(params);\n\n      if (data) {\n        if (!data.error) {\n          this.setState({\n            dataReport: data.reportFee.data,\n            errorMessage: \"\",\n            errorMessageBank: '',\n            errorMessagePencairan: '',\n            munculinTable: true,\n            loading: false\n          });\n        } else {\n          this.setState({\n            errorMessage: data.error\n          });\n        }\n      }\n    };\n\n    this.renderReportJsx = () => {\n      var jsx = this.state.dataReport.map((val, index) => {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, index + 1), React.createElement(\"td\", {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, val.bank_name), React.createElement(\"td\", {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, val.service_name), React.createElement(\"td\", {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, val.product_name), React.createElement(\"td\", {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, val.loan_id), React.createElement(\"td\", {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, GlobalFunction.formatMoney(val.plafond)), React.createElement(\"td\", {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, GlobalFunction.formatMoney(val.convenience_fee)));\n      });\n      return jsx;\n    };\n\n    this.getTotalHarga = () => {\n      var harga = 0;\n\n      for (var i = 0; i < this.state.dataReport.length; i++) {\n        harga += parseInt(this.state.dataReport[i].convenience_fee);\n      }\n\n      return GlobalFunction.formatMoney(harga);\n    };\n\n    this.renderLoadingBtn = () => {\n      if (this.state.loading === true) {\n        return React.createElement(\"input\", {\n          disabled: true,\n          type: \"button\",\n          className: \"btn btn-success\",\n          value: \"Proses\",\n          onClick: this.btnShowReport,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"input\", {\n          type: \"button\",\n          className: \"btn btn-success\",\n          value: \"Proses\",\n          onClick: this.btnShowReport,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.btnReset = () => {\n      this.setState({\n        errorMessage: \"\",\n        errorMessageBank: '',\n        munculinTable: false,\n        namaBank: null\n      });\n      document.getElementById(\"bankName\").value = \"0\";\n    };\n  }\n\n  componentDidMount() {\n    this.getDataBankList();\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    this.setState({\n      errorMessage: newProps.error,\n      errorMessageBank: newProps.error,\n      errorMessagePencairan: newProps.error\n    });\n  } //----------------------- GET DATA LIST Mitra ---------------------\n\n\n  render() {\n    if (getToken()) {\n      return React.createElement(\"div\", {\n        className: \"container mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Report\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12\",\n        style: {\n          color: \"red\",\n          fontSize: \"15px\",\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, this.state.errorMessage, this.state.errorMessageBank, this.state.errorMessagePencairan)), React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Nama Report\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        ref: \"convfee\",\n        onChange: this.handleChangeFee,\n        id: \"report\",\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"======== Pilih Report ========\"), React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Convenience Fee Report\")))), this.state.pilihReport ? React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"Nama Mitra\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        ref: \"bankName\",\n        id: \"bankName\",\n        onChange: this.handleBank,\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"======== Pilih Mitra ========\"), this.renderBankList()))), React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"Tanggal Pinjaman Disetujui\"), React.createElement(\"div\", {\n        className: \"col-sm-10 form-inline pl-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-1 form-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-sm-3 form-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(DatePickers, {\n        label: \"Dari Tanggal\",\n        onChange: this.handleStartChange,\n        value: this.state.tanggalAwal,\n        error: this.state.errorMessage && this.state.errorMessage.trim().length !== 0 && true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-inline mr-3 ml-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-long-arrow-alt-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-sm-3 form-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(DatePickers, {\n        label: \"Sampai Tanggal\",\n        onChange: this.handleEndChange,\n        value: this.state.tanggalAkhir,\n        error: this.state.errorMessage && this.state.errorMessage.trim().length !== 0 && true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"Tanggal Pencairan\"), React.createElement(\"div\", {\n        className: \"col-sm-10 form-inline pl-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-1 form-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-sm-3 form-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(DatePickers, {\n        label: \"Dari Tanggal\",\n        onChange: this.handleStartPencairanChange,\n        value: this.state.tanggalAwalPencairan,\n        error: this.state.errorMessagePencairan && this.state.errorMessagePencairan.trim().length !== 0 && true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-inline mr-3 ml-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-long-arrow-alt-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-sm-3 form-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(DatePickers, {\n        label: \"Sampai Tanggal\",\n        onChange: this.handleEndPencairanChange,\n        value: this.state.tanggalAkhirPencairan,\n        error: this.state.errorMessagePencairan && this.state.errorMessagePencairan.trim().length !== 0 && true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      })))), this.renderLoadingBtn(), React.createElement(\"input\", {\n        type: \"button\",\n        className: \"btn btn-secondary ml-2\",\n        value: \"Reset\",\n        onClick: this.btnReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      })) : null, this.state.munculinTable ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }), React.createElement(\"table\", {\n        className: \"table table-hover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"table-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"text-center\",\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"Nama Mitra\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, \"Layanan\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, \"Produk\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"Loan Id\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, \"Plafond\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"Convinience Fee Amount\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, this.state.dataReport.length === 0 ? React.createElement(\"tr\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        colSpan: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          marginRight: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, \"DATA KOSONG\"))) : this.renderReportJsx(), React.createElement(\"tr\", {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        colSpan: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          marginRight: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, this.getTotalHarga())))))) : null);\n    }\n\n    if (!getToken()) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport function mapDispatchToProps(dispatch) {\n  return {//   getSourceTransaction: () => {\n    //     dispatch(sourceTransactionRequest());\n    //   },\n    //   getApplication: () => {\n    //     dispatch(applicationRequest());\n    //   },\n    //   getSecurityAdministrator: (application) => {\n    //     dispatch(securityAdministratorRequest(application));\n    //   },\n    //   getToken: (application) => {\n    //     dispatch(rpsTokenRequest(application));\n    //   },\n    //   getTokenUpdate: (application) => {\n    //     dispatch(rpsTokenUpdateRequest(application));\n    //   },\n    //   getAction: (application) => {\n    //     dispatch(rpsActionRequest(application));\n    //   },\n    //   getProfileUserId: (application) => {\n    //     dispatch(profileUserIdRequest(application));\n    //   },\n    //   getCurrency: () => {\n    //     dispatch(currencyRequest());\n    //   },\n    //   getKanwil: () => {\n    //     dispatch(kanwilRequest());\n    //   },\n    //   getKCU: (kanwil) => {\n    //     dispatch(kcuRequest(kanwil));\n    //   },\n    //   getBranch: (kodeKcu) => {\n    //     dispatch(branchRequest(kodeKcu));\n    //   },\n    //   handleRedirect: (route) => {\n    //     dispatch(push(route));\n    //   },\n    //   handleCreaterpsTransaction: (rpsTransaction) => {\n    //     dispatch(rpsTransactionCreate(rpsTransaction));\n    //   },\n    //   handleUpdaterpsTransaction: (rpsTransaction) => {\n    //     dispatch(rpsTransactionUpdate(rpsTransaction));\n    //   },\n    //   handleGetrpsUserIdDetail: (rpsUserId) => {\n    //     dispatch(rpsUserIdDetail(rpsUserId));\n    //   },\n    //   handleGetDetailProfileUser: (rpsUserId) => {\n    //     dispatch(rpsProfileUserDetail(rpsUserId));\n    //   },\n    //   handleDelete: (rpsUserId) => {\n    //     dispatch(rpsUserIdDelete(rpsUserId));\n    //   },\n    //   handleSetMessage: (message) => {\n    //     dispatch(setAlert(message));\n    //   },\n  };\n}\nexport const mapStateToProps = createStructuredSelector({// user: getUserState(),\n  // menu: getMenu(),\n  // rpsUserIdDetailNew: getrpsUserIdDetail(),\n  // profileUserDetail: getrpsProfileUserDetail(),\n  // listSourceTransaction: getListSourceTransaction(),\n  // listAction: getListAction(),\n  // listToken: getListToken(),\n  // listEmployee: getListEmployee(),\n  // listBranch: getListBranch(),\n  // listApplication: getListApplication(),\n  // listSecurityAdministrator: getListSecurityAdministrator(),\n  // listCurrency: getListCurrency(),\n  // listprofileUserId: getListProfileUserId(),\n  // listKanwil: getListKanwil(),\n  // listKCU: getListKCU(),\n  // message: getMessageValue(),\n  // redirect: getRedirectValue(),\n  // fetching: getFetchStatus(),\n});\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withStyle = withStyles(styles); // const withReducer = injectReducer({ key: 'rpsTransaction', reducer });\n// const withSaga = injectSaga({ key: 'rpsTransaction', saga });\n\nexport default compose( // withReducer,\nwithConnect, // withSaga,\nwithStyle, withRouter)(Report); // export default RoleAdd;","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/report/report.js"],"names":["React","Redirect","createStructuredSelector","connect","withRouter","withStyles","compose","DatePickers","GlobalFunction","getAllBankListFunction","getAllLoanDataFunction","getToken","styles","theme","heading","flex","fontSize","width","fontWeight","container","flexGrow","textField","position","top","marginBottom","textFieldModify","textfieldName","Report","Component","_isMounted","state","munculinTable","pilihReport","tanggalAwal","tanggalAkhir","tanggalAwalPencairan","tanggalAkhirPencairan","errorMessagePencairan","errorMessage","errorMessageBank","dataBank","namaBank","loading","getDataBankList","param","data","error","setState","mitraList","renderBankList","jsx","map","val","index","name","handleBank","e","target","value","handleChangeFee","validate","flag","dateAwal","Date","getTime","dateAkhir","tglPencairanAwal","tglPencairanAkhir","handleEndChange","toString","trim","length","handleStartChange","handleStartPencairanChange","handleEndPencairanChange","btnShowReport","newTanggalAwal","newTanggalBack","newTanggalPencairanAwal","newTanggalPencairanAkhir","bank_name","start_approval_date","end_approval_date","start_disburse_date","end_disburse_date","getAllLoanData","params","dataReport","reportFee","renderReportJsx","service_name","product_name","loan_id","formatMoney","plafond","convenience_fee","getTotalHarga","harga","i","parseInt","renderLoadingBtn","btnReset","document","getElementById","componentDidMount","componentWillUnmount","UNSAFE_componentWillReceiveProps","newProps","render","color","textAlign","marginRight","mapDispatchToProps","dispatch","mapStateToProps","withConnect","withStyle"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { compose } from 'redux';\r\nimport DatePickers from './../subComponent/DatePicker'\r\nimport { GlobalFunction } from './../globalFunction'\r\nimport { getAllBankListFunction, getAllLoanDataFunction } from './saga';\r\nimport { getToken } from '../index/token';\r\n\r\n\r\n  const styles = (theme) => ({\r\n    // root: theme.mixins.gutters({\r\n    //   paddingTop: 16,\r\n    //   paddingBottom: 16,\r\n    //   marginTop: theme.spacing.unit * 3,\r\n    // }),\r\n    heading: {\r\n      flex: '0 0 auto',\r\n      fontSize: '18px',\r\n      width: '50vw',\r\n      fontWeight: '800',\r\n    },\r\n    container: {\r\n      flexGrow: 1,\r\n    },\r\n    textField: {\r\n      width: '90%',\r\n      position: 'relative',\r\n      top: '0.275vh',\r\n      marginBottom: '1vh',\r\n    },\r\n    textFieldModify: {\r\n      width: '97.5%',\r\n      marginBottom: '1vh',\r\n    },\r\n    textfieldName: {\r\n      width: '90%',\r\n      marginBottom: '1vh',\r\n      position: 'relative',\r\n      top: '0.2vh',\r\n    },\r\n  });\r\n\r\nclass Report extends React.Component{\r\n    _isMounted = false\r\n    state ={munculinTable:false,pilihReport:false, \r\n        tanggalAwal:null,tanggalAkhir:null,\r\n        tanggalAwalPencairan:null,tanggalAkhirPencairan:null,\r\n        errorMessagePencairan:'',errorMessage:'',errorMessageBank:'',dataBank:[],namaBank:null,loading:false}\r\n    componentDidMount(){\r\n        this.getDataBankList()\r\n        this._isMounted = true\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this._isMounted=false\r\n    }\r\n    \r\n    UNSAFE_componentWillReceiveProps(newProps){\r\n        this.setState({errorMessage:newProps.error,errorMessageBank:newProps.error,errorMessagePencairan:newProps.error})\r\n    }\r\n    \r\n    //----------------------- GET DATA LIST Mitra ---------------------\r\n    getDataBankList = async function(){\r\n        const param={}\r\n        const data = await getAllBankListFunction(param)\r\n\r\n        if(data){\r\n            if(!data.error){\r\n                this.setState({dataBank:data.mitraList})\r\n            }else{\r\n                this.setState({errorMessage:data.error})\r\n            }\r\n        }\r\n    }\r\n\r\n    renderBankList = () =>{\r\n        var jsx = this.state.dataBank.map((val,index)=>{\r\n            return (\r\n                <option key={index} value={val.name}>{val.name}</option>\r\n            )\r\n        })\r\n        return jsx\r\n    }\r\n    handleBank = (e)=>{\r\n        this.setState({namaBank:e.target.value})\r\n    }\r\n    //---------------------- HANDLE CONVINIENCE FEE ---------------------\r\n    handleChangeFee = (e)=>{\r\n        if(e.target.value === \"1\"){\r\n            this.setState({pilihReport:true})\r\n        }else{\r\n            this.setState({pilihReport:false})\r\n        }\r\n    }\r\n    validate = () => {\r\n        let flag = true;\r\n        const {tanggalAkhir,tanggalAwal,tanggalAwalPencairan,tanggalAkhirPencairan,namaBank} = this.state\r\n        let dateAwal = new Date(tanggalAwal).getTime()\r\n        let dateAkhir = new Date(tanggalAkhir).getTime()\r\n \r\n        let tglPencairanAwal = new Date(tanggalAwalPencairan).getTime()\r\n        let tglPencairanAkhir = new Date(tanggalAkhirPencairan).getTime()\r\n \r\n \r\n         if(tanggalAwal === null || tanggalAkhir ===null){\r\n             this.setState({errorMessage:\"Tanggal Kosong - Harap cek ulang\",errorMessagePencairan:'',errorMessageBank:''})\r\n             flag=false\r\n         }\r\n         else if(dateAwal > dateAkhir){\r\n            this.setState({errorMessage:\"Range Tanggal tidak benar - Harap cek ulang\",errorMessagePencairan:'',errorMessageBank:''}) \r\n             flag=false\r\n         } \r\n         else if(tglPencairanAwal>tglPencairanAkhir){\r\n             this.setState({errorMessagePencairan:\"Range Tanggal Pencairan tidak benar - Harap cek ulang\",errorMessage:'',errorMessageBank:''}) \r\n             flag=false\r\n         } \r\n         else if(namaBank === \"0\" || namaBank === null){\r\n             this.setState({errorMessageBank:\"Mitra Kosong - Harap cek ulang\",errorMessage:'',errorMessagePencairan:''}) \r\n             flag=false\r\n         }\r\n\r\n         return flag\r\n    }\r\n    //---------------------- HANDLE TANGGAL ---------------------\r\n    handleEndChange = (e)=>{\r\n        this.setState({tanggalAkhir:e.target.value.toString().trim().length !== 0 ? e.target.value : null,errorMessage:''})\r\n    }\r\n    handleStartChange = (e)=>{\r\n        this.setState({tanggalAwal:e.target.value.toString().trim().length !== 0 ? e.target.value : null,errorMessage:''})\r\n    }\r\n\r\n    handleStartPencairanChange = (e)=>{\r\n        this.setState({tanggalAwalPencairan:e.target.value.toString().trim().length !== 0 ? e.target.value : null,errorMessage:'',errorMessagePencairan:''})\r\n    }\r\n    handleEndPencairanChange = (e)=>{\r\n        this.setState({tanggalAkhirPencairan:e.target.value.toString().trim().length !== 0 ? e.target.value : null,errorMessage:'',errorMessagePencairan:''})\r\n    }\r\n    //---------------------- HANDLE BUTTON PROSES ---------------------\r\n    btnShowReport = ()=>{\r\n       const {tanggalAkhir,tanggalAwal,tanggalAwalPencairan,tanggalAkhirPencairan,namaBank} = this.state\r\n            if(this.validate()) {\r\n                this.setState({loading:true})\r\n                let newTanggalAwal = tanggalAwal+\"T00:00:00.000Z\"\r\n                let newTanggalBack = tanggalAkhir+\"T23:59:59.000Z\"\r\n\r\n                let newTanggalPencairanAwal = tanggalAwalPencairan+\"T00:00:00.000Z\" \r\n                let newTanggalPencairanAkhir = tanggalAkhirPencairan+\"T23:59:59.000Z\"\r\n\r\n                const param ={\r\n                    bank_name:namaBank,\r\n                    start_approval_date:newTanggalAwal,\r\n                    end_approval_date:newTanggalBack,\r\n                }\r\n                \r\n                if(tanggalAwalPencairan) {\r\n                    param.start_disburse_date = newTanggalPencairanAwal\r\n                }\r\n                if(tanggalAkhirPencairan){\r\n                    param.end_disburse_date = newTanggalPencairanAkhir\r\n                }\r\n                \r\n                this.getAllLoanData(param)\r\n            }\r\n    }\r\n    getAllLoanData = async function (params) {\r\n        const data = await getAllLoanDataFunction(params)\r\n        if(data){\r\n            if(!data.error){\r\n                this.setState({dataReport:data.reportFee.data,errorMessage:\"\",errorMessageBank:'',errorMessagePencairan:'',munculinTable:true,loading:false})\r\n            }else{\r\n                this.setState({errorMessage:data.error})\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    renderReportJsx =()=>{\r\n        var jsx = this.state.dataReport.map((val,index)=>{\r\n            return(\r\n                <tr key={index}>\r\n                    <td align=\"center\">{index+1}</td>\r\n                    <td align=\"center\">{val.bank_name}</td>\r\n                    <td align=\"center\">{val.service_name}</td>\r\n                    <td align=\"center\">{val.product_name}</td>\r\n                    <td align=\"center\">{val.loan_id}</td>\r\n                    <td align=\"center\">{GlobalFunction.formatMoney(val.plafond)}</td>\r\n                    <td align=\"center\">{GlobalFunction.formatMoney(val.convenience_fee)}</td>\r\n                </tr>\r\n            )\r\n        })\r\n        return jsx\r\n    }\r\n    getTotalHarga = ()=>{\r\n        var harga=0\r\n        \r\n         for (var i=0;i<this.state.dataReport.length;i++){\r\n            harga += parseInt(this.state.dataReport[i].convenience_fee)\r\n         }\r\n       \r\n         return GlobalFunction.formatMoney(harga) \r\n    }\r\n    renderLoadingBtn = ()=>{\r\n        if(this.state.loading === true){\r\n            return <input disabled type=\"button\" className=\"btn btn-success\" value=\"Proses\" onClick={this.btnShowReport}/>\r\n         }else{\r\n            return <input type=\"button\" className=\"btn btn-success\" value=\"Proses\" onClick={this.btnShowReport}/>\r\n         }\r\n    }\r\n    btnReset = ()=>{\r\n        this.setState({errorMessage:\"\",errorMessageBank:'',munculinTable:false,namaBank:null})\r\n        document.getElementById(\"bankName\").value =\"0\"\r\n    }\r\n    render(){\r\n        if(getToken()){\r\n            return(\r\n                <div className=\"container mt-2\">\r\n                   \r\n                    <h2>Report</h2>\r\n                    <hr></hr>\r\n                    <div className=\"form-group row\">\r\n                            <div className=\"col-12\" style={{color:\"red\",fontSize:\"15px\",textAlign:'center'}}>\r\n                                {this.state.errorMessage}{this.state.errorMessageBank}{this.state.errorMessagePencairan}\r\n                            </div>      \r\n                     </div>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-2 col-form-label\">Nama Report</label>\r\n                        <div className=\"col-sm-10\">\r\n                        <select ref=\"convfee\" onChange={this.handleChangeFee} id=\"report\" className=\"form-control\">\r\n                            <option value={0}>======== Pilih Report ========</option>\r\n                            <option value=\"1\">Convenience Fee Report</option>                                \r\n                        </select>\r\n                        </div>\r\n                    </div>\r\n                     {this.state.pilihReport?\r\n                        <form>\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-sm-2 col-form-label\">Nama Mitra</label>\r\n                            <div className=\"col-sm-10\">\r\n                            <select ref=\"bankName\" id=\"bankName\" onChange={this.handleBank} className=\"form-control\">\r\n                                <option value={0}>======== Pilih Mitra ========</option>\r\n                                {this.renderBankList()}\r\n                            </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-sm-2 col-form-label\">Tanggal Pinjaman Disetujui</label>\r\n                            <div className=\"col-sm-10 form-inline pl-5\">\r\n                            <div className=\"col-sm-1 form-inline\"></div>\r\n                                <div className=\"col-sm-3 form-inline\">\r\n                                    <DatePickers\r\n                                        label = 'Dari Tanggal'\r\n                                        onChange ={this.handleStartChange}\r\n                                        value={this.state.tanggalAwal}\r\n                                        error={this.state.errorMessage && this.state.errorMessage.trim().length !== 0 && true}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-inline mr-3 ml-3\"><i className=\"fas fa-long-arrow-alt-right\"></i></div>\r\n                                <div className=\"col-sm-3 form-inline\">\r\n                                    <DatePickers\r\n                                        label = 'Sampai Tanggal'\r\n                                        onChange ={this.handleEndChange}\r\n                                        value={this.state.tanggalAkhir}\r\n                                        error={this.state.errorMessage && this.state.errorMessage.trim().length !== 0 && true}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                    \r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-sm-2 col-form-label\">Tanggal Pencairan</label>\r\n                            <div className=\"col-sm-10 form-inline pl-5\">\r\n                            <div className=\"col-sm-1 form-inline\"></div>\r\n                                <div className=\"col-sm-3 form-inline\">\r\n                                    <DatePickers\r\n                                        label = 'Dari Tanggal'\r\n                                        onChange ={this.handleStartPencairanChange}\r\n                                        value={this.state.tanggalAwalPencairan}\r\n                                        error={this.state.errorMessagePencairan && this.state.errorMessagePencairan.trim().length !== 0 && true}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-inline mr-3 ml-3\"><i className=\"fas fa-long-arrow-alt-right\"></i></div>\r\n                                <div className=\"col-sm-3 form-inline\">\r\n                                    <DatePickers\r\n                                        label = 'Sampai Tanggal'\r\n                                        onChange ={this.handleEndPencairanChange}\r\n                                        value={this.state.tanggalAkhirPencairan}\r\n                                        error={this.state.errorMessagePencairan && this.state.errorMessagePencairan.trim().length !== 0 && true}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                    \r\n                        </div>\r\n                       {this.renderLoadingBtn()}\r\n                        <input type=\"button\" className=\"btn btn-secondary ml-2\" value=\"Reset\" onClick={this.btnReset}/>\r\n                    </form>\r\n                    :null}\r\n\r\n                    {this.state.munculinTable ?\r\n                        <div>\r\n                            <hr/>\r\n                            <table className=\"table table-hover\">\r\n                                <thead className=\"table-warning\">\r\n                                    <tr >\r\n                                        <th className=\"text-center\" scope=\"col\">#</th>\r\n                                        <th className=\"text-center\" scope=\"col\">Nama Mitra</th>\r\n                                        <th className=\"text-center\" scope=\"col\">Layanan</th>\r\n                                        <th className=\"text-center\" scope=\"col\">Produk</th>\r\n                                        <th className=\"text-center\" scope=\"col\">Loan Id</th>  \r\n                                        <th className=\"text-center\" scope=\"col\">Plafond</th>  \r\n                                        <th className=\"text-center\" scope=\"col\">Convinience Fee Amount</th> \r\n                                    </tr>     \r\n                                </thead>\r\n                                <tbody>\r\n\r\n                                    {this.state.dataReport.length===0?\r\n                                    <tr align=\"center\">\r\n                                        <th colSpan={7}>\r\n                                        <p style={{marginRight:\"50px\"}}>DATA KOSONG</p>\r\n                                        </th>\r\n                                    </tr>\r\n                                    :this.renderReportJsx()} \r\n                                    <tr align=\"right\">\r\n                                        <th colSpan={7}>\r\n                                        <p style={{marginRight:\"50px\"}}>{this.getTotalHarga()}</p>\r\n                                        </th>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>    \r\n                    :null}\r\n                </div>\r\n            )\r\n        }\r\n        if(!getToken()){\r\n            return (\r\n                <Redirect to='/login' />\r\n            )    \r\n        }\r\n       \r\n    }\r\n}\r\n\r\n\r\nexport function mapDispatchToProps(dispatch) {\r\n    return {\r\n    //   getSourceTransaction: () => {\r\n    //     dispatch(sourceTransactionRequest());\r\n    //   },\r\n    //   getApplication: () => {\r\n    //     dispatch(applicationRequest());\r\n    //   },\r\n    //   getSecurityAdministrator: (application) => {\r\n    //     dispatch(securityAdministratorRequest(application));\r\n    //   },\r\n    //   getToken: (application) => {\r\n    //     dispatch(rpsTokenRequest(application));\r\n    //   },\r\n    //   getTokenUpdate: (application) => {\r\n    //     dispatch(rpsTokenUpdateRequest(application));\r\n    //   },\r\n    //   getAction: (application) => {\r\n    //     dispatch(rpsActionRequest(application));\r\n    //   },\r\n    //   getProfileUserId: (application) => {\r\n    //     dispatch(profileUserIdRequest(application));\r\n    //   },\r\n    //   getCurrency: () => {\r\n    //     dispatch(currencyRequest());\r\n    //   },\r\n    //   getKanwil: () => {\r\n    //     dispatch(kanwilRequest());\r\n    //   },\r\n    //   getKCU: (kanwil) => {\r\n    //     dispatch(kcuRequest(kanwil));\r\n    //   },\r\n    //   getBranch: (kodeKcu) => {\r\n    //     dispatch(branchRequest(kodeKcu));\r\n    //   },\r\n    //   handleRedirect: (route) => {\r\n    //     dispatch(push(route));\r\n    //   },\r\n    //   handleCreaterpsTransaction: (rpsTransaction) => {\r\n    //     dispatch(rpsTransactionCreate(rpsTransaction));\r\n    //   },\r\n    //   handleUpdaterpsTransaction: (rpsTransaction) => {\r\n    //     dispatch(rpsTransactionUpdate(rpsTransaction));\r\n    //   },\r\n    //   handleGetrpsUserIdDetail: (rpsUserId) => {\r\n    //     dispatch(rpsUserIdDetail(rpsUserId));\r\n    //   },\r\n    //   handleGetDetailProfileUser: (rpsUserId) => {\r\n    //     dispatch(rpsProfileUserDetail(rpsUserId));\r\n    //   },\r\n    //   handleDelete: (rpsUserId) => {\r\n    //     dispatch(rpsUserIdDelete(rpsUserId));\r\n    //   },\r\n    //   handleSetMessage: (message) => {\r\n    //     dispatch(setAlert(message));\r\n    //   },\r\n    };\r\n  }\r\n  \r\n  export const mapStateToProps = createStructuredSelector({\r\n    // user: getUserState(),\r\n    // menu: getMenu(),\r\n    // rpsUserIdDetailNew: getrpsUserIdDetail(),\r\n    // profileUserDetail: getrpsProfileUserDetail(),\r\n    // listSourceTransaction: getListSourceTransaction(),\r\n    // listAction: getListAction(),\r\n    // listToken: getListToken(),\r\n    // listEmployee: getListEmployee(),\r\n    // listBranch: getListBranch(),\r\n    // listApplication: getListApplication(),\r\n    // listSecurityAdministrator: getListSecurityAdministrator(),\r\n    // listCurrency: getListCurrency(),\r\n    // listprofileUserId: getListProfileUserId(),\r\n    // listKanwil: getListKanwil(),\r\n    // listKCU: getListKCU(),\r\n    // message: getMessageValue(),\r\n    // redirect: getRedirectValue(),\r\n    // fetching: getFetchStatus(),\r\n  });\r\n\r\nconst withConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n);\r\n\r\nconst withStyle = withStyles(styles);\r\n// const withReducer = injectReducer({ key: 'rpsTransaction', reducer });\r\n// const withSaga = injectSaga({ key: 'rpsTransaction', saga });\r\n\r\nexport default compose(\r\n    // withReducer,\r\n    withConnect,\r\n    // withSaga,\r\n    withStyle,\r\n    withRouter\r\n  )(Report);\r\n// export default RoleAdd;\r\n\r\n"]},"metadata":{},"sourceType":"module"}