{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_core\\\\src\\\\components\\\\rolePermission\\\\rolePermissionList.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport TableComponent from '../subComponent/TableComponent';\nimport { getAllRoleFunction } from './saga';\nimport { checkPermission } from '../global/globalFunction';\nimport { getToken } from '../index/token';\nconst columnDataRole = [{\n  id: 'id',\n  numeric: false,\n  label: 'Id Role Permission'\n}, {\n  id: 'name',\n  numeric: false,\n  label: 'Nama Role'\n}, {\n  id: 'status',\n  numeric: false,\n  disablePadding: true,\n  label: 'Status'\n}];\n\nclass RolePermissionList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n    this.state = {\n      loading: true,\n      listRole: [],\n      page: 1,\n      paging: false,\n      rowsPerPage: 10\n    };\n\n    this.refresh = async function () {\n      const param = {};\n      param.rows = this.state.rowsPerPage;\n      param.page = this.state.page;\n      const data = await getAllRoleFunction(param);\n\n      if (data) {\n        if (!data.error) {\n          const listRole = [];\n          const dataRole = data.dataRole;\n\n          for (const key in dataRole) {\n            if (dataRole[key].permissions && dataRole[key].permissions.length !== 0) {\n              const role = dataRole[key];\n              role.status = role.status.toString().toLowerCase() === 'active' ? 'Aktif' : 'Tidak Aktif';\n              listRole.push(role);\n            }\n          }\n\n          this.setState({\n            listRole,\n            totalData: listRole.length,\n            loading: false\n          });\n        } else {\n          this.setState({\n            errorMessage: data.error,\n            loading: false\n          });\n        }\n      }\n    };\n\n    this.onChangePage = current => {\n      this.setState({\n        loading: this.state.paging ? true : false,\n        page: current\n      }, () => {\n        if (this.state.paging) {\n          this.refresh();\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.refresh();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    if (getToken()) {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Role Permission - List\")), React.createElement(\"div\", {\n        className: \"col-12\",\n        style: {\n          color: \"red\",\n          fontSize: \"15px\",\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, this.state.errorMessage)), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(TableComponent, {\n        id: \"id\",\n        paging: this.state.paging,\n        loading: this.state.loading,\n        columnData: columnDataRole,\n        data: this.state.listRole,\n        page: this.state.page,\n        rowsPerPage: this.state.rowsPerPage,\n        totalData: this.state.totalData,\n        onChangePage: this.onChangePage,\n        permissionEdit: checkPermission('core_permission_patch') ? '/editRolePermission/' : null,\n        permissionDetail: checkPermission('core_permission_detail') ? '/detailRolePermission/' : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }));\n    }\n\n    if (!getToken()) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default RolePermissionList;","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/rolePermission/rolePermissionList.js"],"names":["React","Redirect","TableComponent","getAllRoleFunction","checkPermission","getToken","columnDataRole","id","numeric","label","disablePadding","RolePermissionList","Component","_isMounted","state","loading","listRole","page","paging","rowsPerPage","refresh","param","rows","data","error","dataRole","key","permissions","length","role","status","toString","toLowerCase","push","setState","totalData","errorMessage","onChangePage","current","componentDidMount","componentWillUnmount","render","color","fontSize","textAlign"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport TableComponent from '../subComponent/TableComponent'\r\nimport {getAllRoleFunction} from './saga'\r\nimport { checkPermission } from '../global/globalFunction';\r\nimport { getToken } from '../index/token'\r\n\r\n\r\nconst columnDataRole = [\r\n    {\r\n        id: 'id',\r\n        numeric: false,\r\n        label: 'Id Role Permission',\r\n    },\r\n    {\r\n        id: 'name',\r\n        numeric: false,\r\n        label: 'Nama Role',\r\n    },\r\n    { id: 'status', numeric: false, disablePadding: true, label: 'Status' },\r\n]\r\n\r\nclass RolePermissionList extends React.Component{\r\n    _isMounted = false;\r\n\r\n    state = {\r\n        loading:true, \r\n        listRole: [],\r\n        page: 1,\r\n        paging: false,\r\n        rowsPerPage: 10,\r\n    }\r\n\r\n    componentDidMount(){\r\n        this._isMounted = true;\r\n        this.refresh()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    refresh = async function(){\r\n        const param = {};\r\n        param.rows = this.state.rowsPerPage;\r\n        param.page = this.state.page;\r\n\r\n        const data = await getAllRoleFunction(param);\r\n\r\n        if(data) {\r\n            \r\n            if(!data.error) {\r\n                const listRole = [];\r\n                const dataRole = data.dataRole;\r\n\r\n                for(const key in dataRole) {\r\n                    if(dataRole[key].permissions && dataRole[key].permissions.length !== 0) {\r\n                        const role = dataRole[key]\r\n                        role.status = role.status.toString().toLowerCase() === 'active' ? 'Aktif' : 'Tidak Aktif'\r\n                        listRole.push(role)\r\n                    }\r\n                }\r\n\r\n                \r\n                this.setState({\r\n                    listRole,\r\n                    totalData: listRole.length,\r\n                    loading: false,\r\n                })\r\n                \r\n\r\n            } else {\r\n                this.setState({\r\n                    errorMessage: data.error,\r\n                    loading: false,\r\n                })\r\n            }      \r\n        }\r\n    }\r\n\r\n    onChangePage = (current) => {\r\n        this.setState({\r\n            loading:this.state.paging ? true : false,\r\n            page:current,\r\n        }, () => {\r\n            if(this.state.paging) {\r\n                this.refresh();\r\n            }\r\n        })\r\n    }\r\n    \r\n\r\n\r\n    render(){\r\n        \r\n        \r\n        if(getToken()){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-7\">\r\n                             <h2 className=\"mt-3\">Role Permission - List</h2>\r\n                        </div>\r\n                        <div className=\"col-12\" style={{color:\"red\",fontSize:\"15px\",textAlign:'left'}}>\r\n                            {this.state.errorMessage}\r\n                        </div>   \r\n                    </div>\r\n                   <hr/>\r\n\r\n                   < TableComponent\r\n                        id={\"id\"}\r\n                        paging={this.state.paging}\r\n                        loading={this.state.loading}\r\n                        columnData={columnDataRole}\r\n                        data={this.state.listRole}\r\n                        page={this.state.page}\r\n                        rowsPerPage={this.state.rowsPerPage}\r\n                        totalData={this.state.totalData}\r\n                        onChangePage={this.onChangePage}             \r\n                        permissionEdit={ checkPermission('core_permission_patch') ? '/editRolePermission/' : null}\r\n                        permissionDetail={ checkPermission('core_permission_detail') ? '/detailRolePermission/' : null}\r\n                    />\r\n\r\n                </div>\r\n            )\r\n        }\r\n        if(!getToken()){\r\n            return (\r\n                <Redirect to='/login' />\r\n            )    \r\n        }\r\n       \r\n    }\r\n}\r\n\r\nexport default RolePermissionList;"]},"metadata":{},"sourceType":"module"}