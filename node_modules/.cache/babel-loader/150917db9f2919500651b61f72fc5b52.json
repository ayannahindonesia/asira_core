{"ast":null,"code":"import { serverUrl, serverUrlGeo } from '../url';\nimport axios from 'axios';\nimport { getToken, getTokenGeo } from '../index/token';\nimport { destructErrorMessage } from '../global/globalFunction';\nexport async function addBankFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getToken()\n      }\n    };\n    axios.post(serverUrl + 'admin/banks', param, config).then(res => {\n      if (next) {\n        resolve(next(param));\n      }\n\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getProvinsiFunction(param) {\n  return new Promise(async resolve => {\n    const configGeo = {\n      headers: {\n        'Authorization': \"Bearer \" + getTokenGeo()\n      }\n    };\n    axios.get(serverUrlGeo + `client/provinsi`, configGeo).then(res => {\n      resolve(res.data.data);\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getKabupatenFunction(param) {\n  return new Promise(async resolve => {\n    const configGeo = {\n      headers: {\n        'Authorization': \"Bearer \" + getTokenGeo()\n      }\n    };\n    axios.get(serverUrlGeo + `client/provinsi/${param}/kota`, configGeo).then(res => {\n      resolve(res.data.data);\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getAllBankList(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getToken()\n      }\n    };\n    let filter = '';\n\n    for (const key in param) {\n      filter += `&${key}=${param[key]}`;\n    }\n\n    axios.get(serverUrl + `admin/banks?orderby=updated_at&sort=desc${filter}`, config).then(res => {\n      param.mitraList = res.data;\n\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getBankDetailFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getToken()\n      }\n    };\n    axios.get(serverUrl + `admin/banks/${param.id}`, config).then(res => {\n      param.dataMitraDetail = res.data;\n\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(res.data);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getBankTypesFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getToken()\n      }\n    };\n    axios.get(serverUrl + `admin/bank_types/${param.type}`, config).then(res => {\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(res);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function editBankFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getToken()\n      }\n    };\n    axios.patch(serverUrl + `admin/banks/${param.id}`, param.newData, config).then(res => {\n      if (next) {\n        resolve(next(param));\n      }\n\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/mitra/saga.js"],"names":["serverUrl","serverUrlGeo","axios","getToken","getTokenGeo","destructErrorMessage","addBankFunction","param","next","Promise","resolve","config","headers","post","then","res","catch","err","error","response","data","toString","getProvinsiFunction","configGeo","get","getKabupatenFunction","getAllBankList","filter","key","mitraList","getBankDetailFunction","id","dataMitraDetail","getBankTypesFunction","type","editBankFunction","patch","newData"],"mappings":"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","sourcesContent":["import {serverUrl, serverUrlGeo} from '../url'\r\nimport axios from 'axios'\r\nimport { getToken, getTokenGeo } from '../index/token';\r\nimport { destructErrorMessage } from '../global/globalFunction';\r\n\r\nexport async function addBankFunction (param,next){\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getToken()}\r\n          };\r\n        axios.post(serverUrl+'admin/banks',param,config)\r\n        .then((res)=>{\r\n            if(next){\r\n                resolve(next(param))\r\n            }\r\n            resolve(res)\r\n        })\r\n        .catch((err)=>{\r\n            const error =( err.response && err.response.data && destructErrorMessage(err.response.data))|| err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function getProvinsiFunction(param) {\r\n    return new Promise(async (resolve)=>{\r\n        const configGeo = {\r\n            headers: {'Authorization': \"Bearer \" + getTokenGeo()}\r\n            };\r\n        axios.get(serverUrlGeo+`client/provinsi`,configGeo)\r\n        .then((res)=>{\r\n            resolve(res.data.data)\r\n            \r\n            })\r\n        \r\n        .catch((err)=>{\r\n            const error =( err.response && err.response.data && destructErrorMessage(err.response.data))|| err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function getKabupatenFunction (param){\r\n    return new Promise(async (resolve)=>{\r\n        const configGeo = {\r\n            headers: {'Authorization': \"Bearer \" + getTokenGeo()}\r\n            };\r\n        axios.get(serverUrlGeo+`client/provinsi/${param}/kota`,configGeo)\r\n            .then((res)=>{\r\n                resolve(res.data.data)\r\n            })\r\n            .catch((err)=>{\r\n                const error =( err.response && err.response.data && destructErrorMessage(err.response.data))|| err.toString()\r\n                param.error = error;\r\n                resolve(param);\r\n            })\r\n    })\r\n}\r\n\r\nexport async function getAllBankList (param,next){\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getToken()}\r\n        };\r\n\r\n        let filter = '';\r\n\r\n        for(const key in param) {\r\n            filter += `&${key}=${param[key]}`\r\n        }\r\n\r\n        axios.get(serverUrl+`admin/banks?orderby=updated_at&sort=desc${filter}`,config)\r\n        .then((res)=>{\r\n            param.mitraList = res.data\r\n            if(next){\r\n                resolve(next(param))\r\n            }else{\r\n                resolve(param)\r\n            }\r\n        })\r\n        .catch((err)=>{\r\n            const error =( err.response && err.response.data && destructErrorMessage(err.response.data))|| err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function getBankDetailFunction (param,next){\r\n    return new Promise(async (resolve)=>{\r\n            const config = {\r\n                headers: {'Authorization': \"Bearer \" + getToken()}\r\n              };\r\n          \r\n            axios.get(serverUrl+`admin/banks/${param.id}`,config)\r\n            .then((res)=>{\r\n                param.dataMitraDetail = res.data\r\n                if(next){\r\n                    resolve(next(param))\r\n                }else{\r\n                    resolve(res.data)\r\n                }\r\n            })\r\n            .catch((err)=>{\r\n                const error =( err.response && err.response.data && destructErrorMessage(err.response.data))|| err.toString()\r\n                param.error = error;\r\n                resolve(param);\r\n            })\r\n        \r\n    })\r\n}\r\n\r\nexport async function getBankTypesFunction (param,next){\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n        headers: {'Authorization': \"Bearer \" + getToken()}\r\n        };\r\n        axios.get(serverUrl+`admin/bank_types/${param.type}`,config)\r\n        .then((res)=>{\r\n           if(next){\r\n               resolve(next(param))\r\n           }else{\r\n               resolve(res)\r\n           }\r\n        })\r\n        .catch((err)=>{\r\n            const error =( err.response && err.response.data && destructErrorMessage(err.response.data))|| err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function editBankFunction (param,next){\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getToken()}\r\n        };\r\n\r\n        axios.patch(serverUrl+`admin/banks/${param.id}`,param.newData,config)\r\n        .then((res)=>{\r\n            if(next){\r\n                resolve(next(param))\r\n            }\r\n            resolve(res)\r\n        })\r\n        .catch((err)=>{\r\n            const error =( err.response && err.response.data && destructErrorMessage(err.response.data))|| err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}