{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_core\\\\src\\\\components\\\\tipebank\\\\typebankEdit.js\";\nimport React from 'react';\nimport Cookies from 'universal-cookie';\nimport { Redirect } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { DetailTipeBankFunction, EditTipeBankFunction } from './saga';\nconst cookie = new Cookies();\n\nclass TypeBankEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      diKlik: false,\n      errorMessage: '',\n      rows: [],\n      submit: false\n    };\n    this._isMounted = false;\n\n    this.getDataBankTypebyID = async function () {\n      var id = this.props.match.params.id;\n      const param = {\n        id\n      };\n      const data = await DetailTipeBankFunction(param);\n\n      if (data) {\n        if (!data.error) {\n          this.setState({\n            rows: data\n          });\n        } else {\n          this.setState({\n            errorMessage: data.error\n          });\n        }\n      }\n    };\n\n    this.renderBtnSumbit = () => {\n      if (this.state.submit) {\n        return React.createElement(\"input\", {\n          type: \"button\",\n          disabled: true,\n          className: \"btn btn-success ml-3 mr-3\",\n          value: \"Simpan\",\n          onClick: this.btnUpdate,\n          style: {\n            cursor: \"wait\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"input\", {\n          type: \"button\",\n          className: \"btn btn-success ml-3 mr-3\",\n          value: \"Simpan\",\n          onClick: this.btnUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.btnUpdate = () => {\n      var name = this.refs.typebank.value;\n      var description = this.refs.deskripsi.value ? this.refs.deskripsi.value : this.refs.deskripsi.placeholder;\n      var id = this.props.match.params.id;\n      this.setState({\n        submit: true\n      });\n      var newData = {\n        name,\n        description\n      };\n      const params = {\n        id,\n        newData\n      };\n      this.EditTypeBankBtn(params);\n    };\n\n    this.EditTypeBankBtn = async function (params) {\n      const data = await EditTipeBankFunction(params);\n\n      if (data) {\n        if (!data.error) {\n          swal(\"Success\", \"Bank Type berhasil di ubah\", \"success\");\n          this.setState({\n            diKlik: true,\n            errorMessage: '',\n            submit: false\n          });\n        } else {\n          this.setState({\n            submit: false,\n            errorMessage: data.error\n          });\n        }\n      }\n    };\n\n    this.btnCancel = () => {\n      this.setState({\n        diKlik: true\n      });\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      errorMessage: newProps.error,\n      rows: []\n    });\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.getDataBankTypebyID();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    if (this.state.diKlik) {\n      return React.createElement(Redirect, {\n        to: \"/listtipe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      });\n    }\n\n    if (cookie.get('token')) {\n      return React.createElement(\"div\", {\n        className: \"container mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Tipe Bank -  Ubah\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12\",\n        style: {\n          color: \"red\",\n          fontSize: \"15px\",\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.state.errorMessage)), React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-3 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"ID Tipe Bank\"), React.createElement(\"div\", {\n        className: \"col-sm-9 btn-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        disabled: true,\n        type: \"text\",\n        className: \"form-control\",\n        ref: \"typebank\",\n        defaultValue: this.state.rows.id,\n        required: true,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-3 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Nama Tipe Bank\"), React.createElement(\"div\", {\n        className: \"col-sm-9 btn-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        disabled: true,\n        type: \"text\",\n        className: \"form-control\",\n        ref: \"typebank\",\n        defaultValue: this.state.rows.name,\n        required: true,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-3 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Deskripsi\"), React.createElement(\"div\", {\n        className: \"col-sm-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        rows: \"5\",\n        ref: \"deskripsi\",\n        className: \"form-control\",\n        placeholder: this.state.rows.description,\n        required: true,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.renderBtnSumbit(), React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Batal\",\n        className: \"btn ml-2\",\n        onClick: this.btnCancel,\n        style: {\n          backgroundColor: \"grey\",\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })));\n    }\n\n    if (!cookie.get('token')) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default TypeBankEdit;","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/tipebank/typebankEdit.js"],"names":["React","Cookies","Redirect","swal","DetailTipeBankFunction","EditTipeBankFunction","cookie","TypeBankEdit","Component","state","diKlik","errorMessage","rows","submit","_isMounted","getDataBankTypebyID","id","props","match","params","param","data","error","setState","renderBtnSumbit","btnUpdate","cursor","name","refs","typebank","value","description","deskripsi","placeholder","newData","EditTypeBankBtn","btnCancel","componentWillReceiveProps","newProps","componentDidMount","componentWillUnmount","render","get","color","fontSize","textAlign","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Cookies from 'universal-cookie';\r\nimport { Redirect } from 'react-router-dom'\r\nimport swal from 'sweetalert'\r\nimport { DetailTipeBankFunction,EditTipeBankFunction } from './saga';\r\n\r\nconst cookie = new Cookies()\r\n\r\nclass TypeBankEdit extends React.Component{\r\n    state={diKlik:false,errorMessage:'',rows:[],submit:false}\r\n    _isMounted = false\r\n    \r\n    componentWillReceiveProps(newProps){\r\n        this.setState({errorMessage:newProps.error,rows:[]})\r\n    }\r\n    componentDidMount(){\r\n        this._isMounted = true;\r\n        this.getDataBankTypebyID()\r\n    }\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n    getDataBankTypebyID = async function (){\r\n        var id = this.props.match.params.id\r\n        const param = {id}\r\n        const data = await DetailTipeBankFunction(param)\r\n        if(data){\r\n            if(!data.error){\r\n                this.setState({rows:data})\r\n            }else{\r\n                this.setState({errorMessage:data.error})\r\n            }\r\n        }\r\n    }\r\n    renderBtnSumbit =()=>{\r\n        if( this.state.submit) {\r\n         return <input type=\"button\" disabled className=\"btn btn-success ml-3 mr-3\" value=\"Simpan\" onClick={this.btnUpdate} style={{cursor:\"wait\"}}/>\r\n        }else{\r\n        return <input type=\"button\" className=\"btn btn-success ml-3 mr-3\" value=\"Simpan\" onClick={this.btnUpdate}/>\r\n        }\r\n    }\r\n    btnUpdate=()=>{\r\n        var name= this.refs.typebank.value\r\n        var description = this.refs.deskripsi.value ? this.refs.deskripsi.value :this.refs.deskripsi.placeholder\r\n        var id = this.props.match.params.id\r\n        this.setState({submit:true})\r\n        var newData={name,description}\r\n        const params = {id,newData}\r\n        this.EditTypeBankBtn(params)\r\n    }\r\n\r\n    EditTypeBankBtn = async function (params) {\r\n        const data = await EditTipeBankFunction(params)\r\n        if(data){\r\n            if(!data.error){\r\n                swal(\"Success\",\"Bank Type berhasil di ubah\",\"success\")              \r\n                this.setState({diKlik:true,errorMessage:'',submit:false})\r\n            }else{\r\n                this.setState({submit:false,errorMessage:data.error})\r\n            }\r\n        }\r\n\r\n        \r\n    }\r\n    btnCancel =()=>{\r\n        this.setState({diKlik:true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.diKlik){\r\n            return <Redirect to=\"/listtipe\"/>\r\n        }\r\n        if(cookie.get('token')){\r\n            return(\r\n                <div className=\"container mt-3\">\r\n                  <h2>Tipe Bank -  Ubah</h2>\r\n                <hr></hr>\r\n                <div className=\"form-group row\">\r\n                 <div className=\"col-12\" style={{color:\"red\",fontSize:\"15px\",textAlign:'center'}}>\r\n                     {this.state.errorMessage}\r\n                  </div>\r\n                </div>\r\n                     <div className=\"form-group row\">\r\n                                                <label className=\"col-sm-3 col-form-label\">ID Tipe Bank</label>\r\n                                                <div className=\"col-sm-9 btn-group\">\r\n                                                <input disabled type=\"text\" className=\"form-control\" ref=\"typebank\" defaultValue={this.state.rows.id} required autoFocus/>\r\n                                                </div>\r\n                     </div>\r\n                     <div className=\"form-group row\">\r\n                                                <label className=\"col-sm-3 col-form-label\">Nama Tipe Bank</label>\r\n                                                <div className=\"col-sm-9 btn-group\">\r\n                                                <input disabled type=\"text\" className=\"form-control\" ref=\"typebank\" defaultValue={this.state.rows.name} required autoFocus/>\r\n                                                </div>\r\n                     </div>\r\n                      <div className=\"form-group row\">\r\n                                                <label className=\"col-sm-3 col-form-label\">Deskripsi</label>\r\n                                                <div className=\"col-sm-9\">\r\n                                                <textarea rows=\"5\" ref=\"deskripsi\" className=\"form-control\" placeholder={this.state.rows.description} required autoFocus/>\r\n                                                </div>\r\n                     </div>\r\n                    <div className=\"form-group row\">\r\n                                                {this.renderBtnSumbit()}\r\n                                                <input type=\"button\" value=\"Batal\" className=\"btn ml-2\" onClick={this.btnCancel} style={{backgroundColor:\"grey\",color:\"white\"}}/>\r\n                      </div>\r\n\r\n                </div>\r\n            )\r\n        }\r\n        if(!cookie.get('token')){\r\n            return (\r\n                <Redirect to='/login' />\r\n            )    \r\n        }\r\n       \r\n    }\r\n}\r\n\r\nexport default TypeBankEdit;"]},"metadata":{},"sourceType":"module"}