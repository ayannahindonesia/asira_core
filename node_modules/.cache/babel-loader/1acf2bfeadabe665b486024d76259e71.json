{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_core\\\\src\\\\components\\\\bank\\\\bankList.js\";\nimport React from 'react';\nimport Cookies from 'universal-cookie';\nimport { Redirect } from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\nimport { Link } from 'react-router-dom';\nimport { getAllBankList } from './saga';\nimport 'rc-pagination/assets/index.css';\nimport Pagination from 'rc-pagination';\nimport './../../support/css/pagination.css';\nimport localeInfo from 'rc-pagination/lib/locale/id_ID';\nconst cookie = new Cookies();\n\nclass BankList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n    this.state = {\n      loading: true,\n      rows: [],\n      total_data: 10,\n      page: 1,\n      from: 1,\n      to: 3,\n      last_page: 1,\n      rowsPerPage: 10,\n      dataPerhalaman: 5,\n      search: ''\n    };\n\n    this.getAllBankData = async function () {\n      let param = {\n        page: this.state.page\n      };\n      var hasil = this.state.search;\n\n      if (hasil.toString().trim().length !== 0) {\n        if (!isNaN(hasil)) {\n          param.id = hasil;\n        } else {\n          param.name = hasil;\n        }\n      }\n\n      const data = await getAllBankList(param);\n\n      if (data) {\n        if (!data.error) {\n          this.setState({\n            rows: data.data.data,\n            total_data: data.data.total_data,\n            page: data.data.current_page,\n            from: data.data.from,\n            to: data.data.to,\n            last_page: data.data.last_page,\n            dataPerhalaman: data.data.rows,\n            loading: false\n          });\n        } else {\n          this.setState({\n            errorMessage: data.error\n          });\n        }\n      }\n    };\n\n    this.onBtnSearch = () => {\n      this.getAllBankData();\n      this.setState({\n        loading: true\n      });\n    };\n\n    this.renderJSX = () => {\n      if (this.state.loading) {\n        return React.createElement(\"tr\", {\n          key: \"zz\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          align: \"center\",\n          colSpan: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(Loader, {\n          type: \"Circles\",\n          color: \"#00BFFF\",\n          height: \"40\",\n          width: \"40\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        })));\n      } else {\n        if (this.state.rows.length === 0) {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            align: \"center\",\n            colSpan: 6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, \"Data empty\"));\n        } else {\n          var jsx = this.state.rows.map((val, index) => {\n            return React.createElement(\"tr\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92\n              },\n              __self: this\n            }, React.createElement(\"td\", {\n              align: \"center\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93\n              },\n              __self: this\n            }, this.state.page > 1 ? index + 1 + this.state.dataPerhalaman * (this.state.page - 1) : index + 1), React.createElement(\"td\", {\n              align: \"center\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 94\n              },\n              __self: this\n            }, val.id), React.createElement(\"td\", {\n              align: \"center\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 95\n              },\n              __self: this\n            }, val.name), React.createElement(\"td\", {\n              align: \"center\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 97\n              },\n              __self: this\n            }, val.pic), React.createElement(\"td\", {\n              align: \"center\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 98\n              },\n              __self: this\n            }, React.createElement(Link, {\n              to: `/bankedit/${val.id}`,\n              className: \"mr-2\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 99\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fas fa-edit\",\n              style: {\n                color: \"black\",\n                fontSize: \"18px\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100\n              },\n              __self: this\n            })), React.createElement(Link, {\n              to: `/bankdetail/${val.id}`,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 102\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fas fa-eye\",\n              style: {\n                color: \"black\",\n                fontSize: \"18px\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 103\n              },\n              __self: this\n            }))));\n          });\n          return jsx;\n        }\n      }\n    };\n\n    this.onChangePage = (current, pageSize) => {\n      this.setState({\n        loading: true,\n        page: current\n      }, () => {\n        this.getAllBankData();\n      });\n    };\n\n    this.changeSearch = e => {\n      console.log(e.target.value);\n      this.setState({\n        search: e.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.getAllBankData();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    if (cookie.get('token')) {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"List - Bank\")), React.createElement(\"div\", {\n        className: \"col-4 mt-3 ml-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        ref: \"search\",\n        placeholder: \"Search Bank..\",\n        onChange: this.changeSearch,\n        value: this.state.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"input-group-addon ml-2\",\n        style: {\n          border: \"1px solid grey\",\n          width: \"35px\",\n          height: \"35px\",\n          paddingTop: \"2px\",\n          borderRadius: \"4px\",\n          paddingLeft: \"2px\",\n          marginTop: \"6px\",\n          cursor: \"pointer\"\n        },\n        onClick: this.onBtnSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-search\",\n        style: {\n          fontSize: \"28px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }))))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"table\", {\n        className: \"table table-hover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"table-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"text-center\",\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Bank ID\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Bank Name\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"PIC\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, this.renderJSX())), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"nav\", {\n        style: {\n          float: \"right\",\n          color: \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Pagination, {\n        className: \"ant-pagination\",\n        showTotal: (total, range) => `${range[0]} - ${range[1]} of ${total} items`,\n        total: this.state.total_data,\n        pageSize: this.state.dataPerhalaman,\n        onChange: this.onChangePage,\n        locale: localeInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })));\n    }\n\n    if (!cookie.get('token')) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default BankList;","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/bank/bankList.js"],"names":["React","Cookies","Redirect","Loader","Link","getAllBankList","Pagination","localeInfo","cookie","BankList","Component","_isMounted","state","loading","rows","total_data","page","from","to","last_page","rowsPerPage","dataPerhalaman","search","getAllBankData","param","hasil","toString","trim","length","isNaN","id","name","data","error","setState","current_page","errorMessage","onBtnSearch","renderJSX","jsx","map","val","index","pic","color","fontSize","onChangePage","current","pageSize","changeSearch","e","console","log","target","value","componentDidMount","componentWillUnmount","render","get","border","width","height","paddingTop","borderRadius","paddingLeft","marginTop","cursor","float","total","range"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Cookies from 'universal-cookie';\r\nimport { Redirect } from 'react-router-dom'\r\nimport Loader from 'react-loader-spinner'\r\nimport {Link} from 'react-router-dom'\r\nimport {getAllBankList} from './saga'\r\nimport 'rc-pagination/assets/index.css';\r\nimport Pagination from 'rc-pagination';\r\nimport './../../support/css/pagination.css'\r\nimport localeInfo from 'rc-pagination/lib/locale/id_ID';\r\nconst cookie = new Cookies()\r\n\r\nclass BankList extends React.Component{\r\n    _isMounted=false;\r\n    state={\r\n        loading:true,\r\n        rows:[],total_data:10,page:1,from:1,to:3,last_page:1,rowsPerPage:10,dataPerhalaman:5,\r\n        search: '',\r\n    }\r\n    componentDidMount(){\r\n      this._isMounted=true\r\n        this.getAllBankData()\r\n    }\r\n    componentWillUnmount(){\r\n      this._isMounted=false\r\n\r\n    }\r\n\r\n    getAllBankData = async function () {\r\n        let param = { \r\n          page: this.state.page,\r\n        }\r\n        \r\n        var hasil = this.state.search;\r\n\r\n        if(hasil.toString().trim().length !== 0) {\r\n          if(!isNaN(hasil)){\r\n              param.id = hasil\r\n          }else{\r\n              param.name = hasil\r\n          }\r\n        }\r\n        \r\n        \r\n        const data = await getAllBankList(param)\r\n        if(data){\r\n          if(!data.error){\r\n            this.setState({\r\n              rows:data.data.data,\r\n              total_data:data.data.total_data,\r\n              page:data.data.current_page,\r\n              from:data.data.from,\r\n              to:data.data.to,\r\n              last_page:data.data.last_page,\r\n              dataPerhalaman:data.data.rows,\r\n              loading:false})\r\n          }else{\r\n              this.setState({errorMessage:data.error})\r\n          }\r\n        }\r\n    }\r\n\r\n    onBtnSearch = ()=>{\r\n      this.getAllBankData()\r\n      this.setState({loading : true})\r\n    }\r\n\r\n    renderJSX = () => {\r\n        if (this.state.loading){\r\n            return  (\r\n              <tr  key=\"zz\">\r\n                <td align=\"center\" colSpan={6}>\r\n                      <Loader \r\n                  type=\"Circles\"\r\n                  color=\"#00BFFF\"\r\n                  height=\"40\"\t\r\n                  width=\"40\"\r\n              />   \r\n                </td>\r\n              </tr>\r\n            )\r\n        }else{\r\n            if(this.state.rows.length===0){\r\n                return(\r\n                  <tr>\r\n                     <td align=\"center\" colSpan={6}>Data empty</td>\r\n                  </tr>\r\n                )\r\n              }else{\r\n                var jsx = this.state.rows.map((val,index)=>{\r\n                    return(\r\n                        <tr key={index}>\r\n                        <td align=\"center\">{this.state.page >1 ? index+1 + (this.state.dataPerhalaman*(this.state.page -1)) : index+1}</td>\r\n                        <td align=\"center\">{val.id}</td>\r\n                        <td align=\"center\">{val.name}</td>\r\n                        {/* <td align=\"center\">{val.type}</td> */}\r\n                        <td align=\"center\">{val.pic}</td>\r\n                        <td align=\"center\">\r\n                            <Link to={`/bankedit/${val.id}`} className=\"mr-2\">\r\n                                 <i className=\"fas fa-edit\" style={{color:\"black\",fontSize:\"18px\"}}/>\r\n                            </Link>\r\n                            <Link to={`/bankdetail/${val.id}`} >\r\n                                 <i className=\"fas fa-eye\" style={{color:\"black\",fontSize:\"18px\"}}/>\r\n                            </Link>\r\n                        </td>\r\n                </tr>  \r\n                    )\r\n                })\r\n                return jsx;\r\n              }\r\n        }\r\n      \r\n\r\n    }\r\n\r\n    onChangePage = (current, pageSize) => {\r\n        this.setState({loading:true, page : current}, () => {\r\n          this.getAllBankData()\r\n        })\r\n    }\r\n\r\n    changeSearch = (e) => {\r\n      console.log(e.target.value)\r\n      this.setState({search: e.target.value})\r\n    }\r\n \r\n    render(){\r\n        if(cookie.get('token')){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-7\">\r\n                             <h2 className=\"mt-3\">List - Bank</h2>\r\n                        </div>\r\n                        <div className=\"col-4 mt-3 ml-5\">\r\n                        <div className=\"input-group\">\r\n                            <input type=\"text\" className=\"form-control\" ref=\"search\" placeholder=\"Search Bank..\"  onChange={this.changeSearch} value={this.state.search}/>\r\n                            <span className=\"input-group-addon ml-2\" style={{border:\"1px solid grey\",width:\"35px\",height:\"35px\",paddingTop:\"2px\",borderRadius:\"4px\",paddingLeft:\"2px\",marginTop:\"6px\",cursor:\"pointer\"}} onClick={this.onBtnSearch}> \r\n                            <i className=\"fas fa-search\" style={{fontSize:\"28px\"}} ></i></span>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                   <hr/>\r\n                   <table className=\"table table-hover\">\r\n                   <thead className=\"table-warning\">\r\n                        <tr >\r\n                            <th className=\"text-center\" scope=\"col\">#</th>\r\n                            <th className=\"text-center\" scope=\"col\">Bank ID</th>\r\n                            <th className=\"text-center\" scope=\"col\">Bank Name</th>\r\n                            {/* <th className=\"text-center\" scope=\"col\">Bank Type</th> */}\r\n                            <th className=\"text-center\" scope=\"col\">PIC</th>\r\n                            <th className=\"text-center\" scope=\"col\">Action</th>\r\n                        </tr>     \r\n                    </thead>\r\n                       <tbody>\r\n                          {this.renderJSX()}\r\n                       </tbody>\r\n                   </table>\r\n                   <hr/>\r\n                <nav style={{float:\"right\",color:\"black\"}}> \r\n\r\n            <Pagination \r\n                className=\"ant-pagination\"  \r\n                showTotal={(total, range) => `${range[0]} - ${range[1]} of ${total} items`}\r\n                total={this.state.total_data}\r\n                pageSize={this.state.dataPerhalaman}\r\n                onChange={this.onChangePage}\r\n                locale={localeInfo}\r\n            />\r\n                </nav>\r\n               \r\n                </div>\r\n            )\r\n        }\r\n        if(!cookie.get('token')){\r\n            return (\r\n                <Redirect to='/login' />\r\n            )    \r\n        }\r\n       \r\n    }\r\n}\r\n\r\nexport default BankList;"]},"metadata":{},"sourceType":"module"}