{"ast":null,"code":"import { serverUrl, serverUrlGeo } from '../url';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\nconst cookie = new Cookies();\nexport async function addBankFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + cookie.get('token')\n      }\n    };\n    axios.post(serverUrl + 'admin/banks', param, config).then(res => {\n      if (next) {\n        resolve(next(param));\n      }\n\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getProvinsiFunction(param) {\n  return new Promise(async resolve => {\n    const configGeo = {\n      headers: {\n        'Authorization': \"Bearer \" + cookie.get('tokenGeo')\n      }\n    };\n    axios.get(serverUrlGeo + `client/provinsi`, configGeo).then(res => {\n      resolve(res.data.data);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getKabupatenFunction(param) {\n  return new Promise(async resolve => {\n    const configGeo = {\n      headers: {\n        'Authorization': \"Bearer \" + cookie.get('tokenGeo')\n      }\n    };\n    axios.get(serverUrlGeo + `client/provinsi/${param}/kota`, configGeo).then(res => {\n      resolve(res.data.data);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getServiceFunction(param) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + cookie.get('token')\n      }\n    };\n    axios.get(serverUrl + 'admin/services', config).then(res => {\n      resolve(res.data.data);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getAllBankList(param) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + cookie.get('token')\n      }\n    };\n    let filter = '';\n\n    for (const key in param) {\n      filter += `&${key}=${param[key]}`;\n    }\n\n    axios.get(serverUrl + `admin/banks?orderby=id&sort=ASC&rows=10${filter}`, config).then(res => {\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getBankDetailFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + cookie.get('token')\n      }\n    };\n    axios.get(serverUrl + `admin/banks/${param.id}`, config).then(res => {\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(res.data);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/bank/saga.js"],"names":["serverUrl","serverUrlGeo","axios","Cookies","cookie","addBankFunction","param","next","Promise","resolve","config","headers","get","post","then","res","catch","err","error","response","data","message","toString","toUpperCase","getProvinsiFunction","configGeo","getKabupatenFunction","getServiceFunction","getAllBankList","filter","key","getBankDetailFunction","id"],"mappings":"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","sourcesContent":["import {serverUrl, serverUrlGeo} from '../url'\r\nimport axios from 'axios'\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookie = new Cookies()\r\n\r\nexport async function addBankFunction (param,next){\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + cookie.get('token')}\r\n          };\r\n        axios.post(serverUrl+'admin/banks',param,config)\r\n        .then((res)=>{\r\n            if(next){\r\n                resolve(next(param))\r\n            }\r\n            resolve(res)\r\n        })\r\n        .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function getProvinsiFunction(param) {\r\n    return new Promise(async (resolve)=>{\r\n        const configGeo = {\r\n            headers: {'Authorization': \"Bearer \" + cookie.get('tokenGeo')}\r\n            };\r\n        axios.get(serverUrlGeo+`client/provinsi`,configGeo)\r\n        .then((res)=>{\r\n            resolve(res.data.data)\r\n            \r\n            })\r\n        \r\n        .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function getKabupatenFunction (param){\r\n    return new Promise(async (resolve)=>{\r\n        const configGeo = {\r\n            headers: {'Authorization': \"Bearer \" + cookie.get('tokenGeo')}\r\n            };\r\n        axios.get(serverUrlGeo+`client/provinsi/${param}/kota`,configGeo)\r\n            .then((res)=>{\r\n                resolve(res.data.data)\r\n            })\r\n            .catch((err)=>{\r\n                const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n                param.error = error;\r\n                resolve(param);\r\n            })\r\n    })\r\n}\r\n\r\nexport async function getServiceFunction(param) {\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + cookie.get('token')}\r\n        };\r\n        axios.get(serverUrl+'admin/services',config)\r\n        .then((res)=>{\r\n            resolve(res.data.data)\r\n        })\r\n        .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n    \r\n}\r\n\r\nexport async function getAllBankList (param){\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + cookie.get('token')}\r\n        };\r\n\r\n        let filter = '';\r\n\r\n        for(const key in param) {\r\n            filter += `&${key}=${param[key]}`\r\n        }\r\n\r\n        axios.get(serverUrl+`admin/banks?orderby=id&sort=ASC&rows=10${filter}`,config)\r\n        .then((res)=>{\r\n            resolve(res)\r\n        })\r\n        .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function getBankDetailFunction (param,next){\r\n    return new Promise(async (resolve)=>{\r\n            const config = {\r\n                headers: {'Authorization': \"Bearer \" + cookie.get('token')}\r\n              };\r\n          \r\n            axios.get(serverUrl+`admin/banks/${param.id}`,config)\r\n            .then((res)=>{\r\n                if(next){\r\n                    resolve(next(param))\r\n                }else{\r\n                    resolve(res.data)\r\n                }\r\n            })\r\n            .catch((err)=>{\r\n                const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n                param.error = error;\r\n                resolve(param);\r\n            })\r\n        \r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}