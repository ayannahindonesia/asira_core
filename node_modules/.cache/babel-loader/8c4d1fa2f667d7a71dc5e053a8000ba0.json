{"ast":null,"code":"import axios from 'axios';\nimport { serverUrl } from '../url';\nimport { getToken } from '../index/token';\nimport { destructErrorMessage } from '../global/globalFunction';\nexport async function addPenyediaAgentFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getToken()\n      }\n    };\n    axios.post(serverUrl + 'admin/agent_providers', param, config).then(res => {\n      param.result = res;\n\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getPenyediaAgentListFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getToken()\n      }\n    };\n    let filter = '';\n\n    for (const key in param) {\n      filter += `&${key}=${param[key]}`;\n    }\n\n    axios.get(serverUrl + `admin/agent_providers?orderby=updated_at&sort=desc${filter}`, config).then(res => {\n      param.dataListAgent = res.data;\n\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getPenyediaAgentDetailFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getToken()\n      }\n    };\n    axios.get(serverUrl + `admin/agent_providers/${param.id}`, config).then(res => {\n      param.dataAgentDetail = res.data;\n\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function editPenyediaAgentFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getToken()\n      }\n    };\n    axios.patch(serverUrl + `admin/agent_providers/${param.id}`, param.newData, config).then(res => {\n      param.result = res.data;\n\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && destructErrorMessage(err.response.data) || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_core/src/components/penyediaAgent/saga.js"],"names":["axios","serverUrl","getToken","destructErrorMessage","addPenyediaAgentFunction","param","next","Promise","resolve","config","headers","post","then","res","result","catch","err","error","response","data","toString","getPenyediaAgentListFunction","filter","key","get","dataListAgent","getPenyediaAgentDetailFunction","id","dataAgentDetail","editPenyediaAgentFunction","patch","newData"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {serverUrl} from '../url'\r\nimport { getToken } from '../index/token'\r\nimport { destructErrorMessage } from '../global/globalFunction';\r\n\r\nexport async function addPenyediaAgentFunction (param,next){\r\n    return new Promise (async(resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getToken()}\r\n        };\r\n        \r\n        axios.post(serverUrl+'admin/agent_providers',param,config)\r\n        .then((res)=>{\r\n            param.result = res\r\n            if(next){\r\n                resolve(next(param))\r\n            }else{\r\n                resolve(param)\r\n            }\r\n        })\r\n        .catch((err)=>{\r\n            const error =( err.response && err.response.data && destructErrorMessage(err.response.data)) || err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function getPenyediaAgentListFunction(param,next) {\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getToken()}\r\n            \r\n        };\r\n\r\n        let filter =''\r\n\r\n        for (const key in param){\r\n            filter += `&${key}=${param[key]}`\r\n        }\r\n        axios.get(serverUrl+`admin/agent_providers?orderby=updated_at&sort=desc${filter}`,config)\r\n        .then((res)=>{\r\n            param.dataListAgent = res.data\r\n            \r\n            if(next){\r\n                resolve(next(param))\r\n            }else{\r\n                resolve(param)\r\n            }\r\n        })\r\n        .catch((err)=>{\r\n            const error =( err.response && err.response.data && destructErrorMessage(err.response.data)) || err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n    \r\n}\r\n\r\nexport async function getPenyediaAgentDetailFunction(param,next) {\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getToken()}\r\n            \r\n        };\r\n\r\n        axios.get(serverUrl+`admin/agent_providers/${param.id}`,config)\r\n        .then((res)=>{\r\n            param.dataAgentDetail = res.data\r\n            if(next){\r\n                resolve(next(param))\r\n            }else{\r\n                resolve(param)\r\n            }\r\n        })\r\n        .catch((err)=>{\r\n            const error =( err.response && err.response.data && destructErrorMessage(err.response.data)) || err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n    \r\n}\r\n\r\nexport async function editPenyediaAgentFunction (param,next){\r\n    return new Promise (async(resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getToken()}\r\n        };\r\n        axios.patch(serverUrl+`admin/agent_providers/${param.id}`,param.newData,config)\r\n        .then((res)=>{\r\n            param.result = res.data\r\n            if(next){\r\n                resolve(next(param))\r\n            }else{\r\n                resolve(param)\r\n            }\r\n        })\r\n        .catch((err)=>{\r\n            const error =( err.response && err.response.data && destructErrorMessage(err.response.data)) || err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}